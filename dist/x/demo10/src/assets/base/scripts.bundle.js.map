{"version":3,"names":[],"mappings":"","sources":["scripts.bundle.js"],"sourcesContent":["/**\r\n * @class mApp  Metronic App class\r\n */\r\n\r\nvar mApp = function() {\r\n\r\n    /**\r\n    * Initializes bootstrap tooltip\r\n    */\r\n    var initTooltip = function(el) {\r\n        var skin = el.data('skin') ? 'm-tooltip--skin-' + el.data('skin') : '';\r\n        var width = el.data('width') == 'auto' ? 'm-tooltop--auto-width' : '';\r\n        var triggerValue = el.data('trigger') ? el.data('trigger') : 'hover';\r\n            \r\n        el.tooltip({\r\n            trigger: triggerValue,\r\n            template: '<div class=\"m-tooltip ' + skin + ' ' + width + ' tooltip\" role=\"tooltip\">\\\r\n                <div class=\"arrow\"></div>\\\r\n                <div class=\"tooltip-inner\"></div>\\\r\n            </div>'\r\n        });\r\n    }\r\n    \r\n    /**\r\n    * Initializes bootstrap tooltips\r\n    */\r\n    var initTooltips = function() {\r\n        // init bootstrap tooltips\r\n        $('[data-toggle=\"m-tooltip\"]').each(function() {\r\n            initTooltip($(this));\r\n        });\r\n    }\r\n\r\n    /**\r\n    * Initializes bootstrap popover\r\n    */\r\n    var initPopover = function(el) {\r\n        var skin = el.data('skin') ? 'm-popover--skin-' + el.data('skin') : '';\r\n        var triggerValue = el.data('trigger') ? el.data('trigger') : 'hover';\r\n            \r\n        el.popover({\r\n            trigger: triggerValue,\r\n            template: '\\\r\n            <div class=\"m-popover ' + skin + ' popover\" role=\"tooltip\">\\\r\n                <div class=\"arrow\"></div>\\\r\n                <h3 class=\"popover-header\"></h3>\\\r\n                <div class=\"popover-body\"></div>\\\r\n            </div>'\r\n        });\r\n    }\r\n\r\n    /**\r\n    * Initializes bootstrap popovers\r\n    */\r\n    var initPopovers = function() {\r\n        // init bootstrap popover\r\n        $('[data-toggle=\"m-popover\"]').each(function() {\r\n            initPopover($(this));\r\n        });\r\n    }\r\n\r\n    /**\r\n    * Initializes bootstrap file input\r\n    */\r\n    var initFileInput = function() {\r\n        // init bootstrap popover\r\n        $('.custom-file-input').on('change',function(){\r\n            var fileName = $(this).val();\r\n            $(this).next('.custom-file-label').addClass(\"selected\").html(fileName);\r\n        });\r\n    }           \r\n\r\n    /**\r\n    * Initializes metronic portlet\r\n    */\r\n    var initPortlet = function(el, options) {\r\n        // init portlet tools\r\n        el.mPortlet(options);\r\n    }\r\n\r\n    /**\r\n    * Initializes metronic portlets\r\n    */\r\n    var initPortlets = function() {\r\n        // init portlet tools\r\n        $('[data-portlet=\"true\"]').each(function() {\r\n            var el = $(this);\r\n\r\n            if ( el.data('portlet-initialized') !== true ) {\r\n                initPortlet(el, {});\r\n                el.data('portlet-initialized', true);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n    * Initializes scrollable contents\r\n    */\r\n    var initScrollables = function() {\r\n        $('[data-scrollable=\"true\"]').each(function(){\r\n            var maxHeight;\r\n            var height;\r\n            var el = $(this);\r\n\r\n            if (mUtil.isInResponsiveRange('tablet-and-mobile')) {\r\n                if (el.data('mobile-max-height')) {\r\n                    maxHeight = el.data('mobile-max-height');\r\n                } else {\r\n                    maxHeight = el.data('max-height');\r\n                }\r\n\r\n                if (el.data('mobile-height')) {\r\n                    height = el.data('mobile-height');\r\n                } else {\r\n                    height = el.data('height');\r\n                }\r\n            } else {\r\n                maxHeight = el.data('max-height');\r\n                height = el.data('max-height');\r\n            }\r\n\r\n            if (maxHeight) {\r\n                el.css('max-height', maxHeight);\r\n            }\r\n            if (height) {\r\n                el.css('height', height);\r\n            }\r\n\r\n            mApp.initScroller(el, {});\r\n        });\r\n    }\r\n\r\n    /**\r\n    * Initializes bootstrap alerts\r\n    */\r\n    var initAlerts = function() {\r\n        // init bootstrap popover\r\n        $('body').on('click', '[data-close=alert]', function() {\r\n            $(this).closest('.alert').hide();\r\n        });\r\n    }\r\n\r\n    /**\r\n    * Initializes Metronic custom tabs\r\n    */\r\n    var initCustomTabs = function() {\r\n        // init bootstrap popover\r\n        $('[data-tab-target]').each(function() {\r\n            if ($(this).data('tabs-initialized') == true ) {\r\n                return;\r\n            }\r\n\r\n            $(this).click(function(e) {\r\n                e.preventDefault();\r\n                \r\n                var tab = $(this);\r\n                var tabs = tab.closest('[data-tabs=\"true\"]');\r\n                var contents = $( tabs.data('tabs-contents') );\r\n                var content = $( tab.data('tab-target') );\r\n\r\n                tabs.find('.m-tabs__item.m-tabs__item--active').removeClass('m-tabs__item--active');\r\n                tab.addClass('m-tabs__item--active');\r\n\r\n                contents.find('.m-tabs-content__item.m-tabs-content__item--active').removeClass('m-tabs-content__item--active');\r\n                content.addClass('m-tabs-content__item--active');         \r\n            });\r\n\r\n            $(this).data('tabs-initialized', true);\r\n        });\r\n    }\r\n\r\n    /**\r\n    * Initializes bootstrap collapse for Metronic's accordion feature\r\n    */\r\n    var initAccordions = function(el) {\r\n       \r\n    }\r\n\r\n\tvar hideTouchWarning = function() {\r\n\t\tjQuery.event.special.touchstart = {\r\n\t\t\tsetup: function(_, ns, handle) {\r\n\t\t\t\tif (typeof this === 'function')\r\n\t\t\t\t\tif (ns.includes('noPreventDefault')) {\r\n\t\t\t\t\t\tthis.addEventListener('touchstart', handle, {passive: false});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.addEventListener('touchstart', handle, {passive: true});\r\n\t\t\t\t\t}\r\n\t\t\t},\r\n\t\t};\r\n\t\tjQuery.event.special.touchmove = {\r\n\t\t\tsetup: function(_, ns, handle) {\r\n\t\t\t\tif (typeof this === 'function')\r\n\t\t\t\t\tif (ns.includes('noPreventDefault')) {\r\n\t\t\t\t\t\tthis.addEventListener('touchmove', handle, {passive: false});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.addEventListener('touchmove', handle, {passive: true});\r\n\t\t\t\t\t}\r\n\t\t\t},\r\n\t\t};\r\n\t\tjQuery.event.special.wheel = {\r\n\t\t\tsetup: function(_, ns, handle) {\r\n\t\t\t\tif (typeof this === 'function')\r\n\t\t\t\t\tif (ns.includes('noPreventDefault')) {\r\n\t\t\t\t\t\tthis.addEventListener('wheel', handle, {passive: false});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.addEventListener('wheel', handle, {passive: true});\r\n\t\t\t\t\t}\r\n\t\t\t},\r\n\t\t};\r\n\t};\r\n\r\n    return {\r\n        /**\r\n        * Main class initializer\r\n        */\r\n        init: function() {\r\n            mApp.initComponents();\r\n        },\r\n\r\n        /**\r\n        * Initializes components\r\n        */\r\n        initComponents: function() {\r\n            hideTouchWarning();\r\n            initScrollables();\r\n            initTooltips();\r\n            initPopovers();\r\n            initAlerts();\r\n            initPortlets();\r\n            initFileInput();\r\n            initAccordions();\r\n            initCustomTabs();\r\n        },\r\n\r\n\r\n        /**\r\n        * Init custom tabs\r\n        */\r\n        initCustomTabs: function() {\r\n            initCustomTabs();\r\n        },\r\n\r\n        /**\r\n        * \r\n        * @param {object} el jQuery element object\r\n        */\r\n        // wrJangoer function to scroll(focus) to an element\r\n        initTooltips: function() {\r\n            initTooltips();\r\n        },\r\n\r\n        /**\r\n        * \r\n        * @param {object} el jQuery element object\r\n        */\r\n        // wrJangoer function to scroll(focus) to an element\r\n        initTooltip: function(el) {\r\n            initTooltip(el);\r\n        },\r\n\r\n        /**\r\n        * \r\n        * @param {object} el jQuery element object\r\n        */\r\n        // wrJangoer function to scroll(focus) to an element\r\n        initPopovers: function() {\r\n            initPopovers();\r\n        },\r\n\r\n        /**\r\n        * \r\n        * @param {object} el jQuery element object\r\n        */\r\n        // wrJangoer function to scroll(focus) to an element\r\n        initPopover: function(el) {\r\n            initPopover(el);\r\n        },\r\n\r\n        /**\r\n        * \r\n        * @param {object} el jQuery element object\r\n        */\r\n        // function to init portlet\r\n        initPortlet: function(el, options) {\r\n            initPortlet(el, options);\r\n        },\r\n\r\n        /**\r\n        * \r\n        * @param {object} el jQuery element object\r\n        */\r\n        // function to init portlets\r\n        initPortlets: function() {\r\n            initPortlets();\r\n        },\r\n\r\n        /**\r\n        * Scrolls to an element with animation\r\n        * @param {object} el jQuery element object\r\n        * @param {number} offset Offset to element scroll position\r\n        */\r\n        scrollTo: function(target, offset) {\r\n            el = $(target);\r\n\r\n            var pos = (el && el.length > 0) ? el.offset().top : 0;\r\n            pos = pos + (offset ? offset : 0);\r\n\r\n            jQuery('html,body').animate({\r\n                scrollTop: pos\r\n            }, 'slow');\r\n        },\r\n\r\n        /**\r\n        * Scrolls until element is centered in the viewport \r\n        * @param {object} el jQuery element object\r\n        */\r\n        // wrJangoer function to scroll(focus) to an element\r\n        scrollToViewport: function(el) {\r\n            var elOffset = $(el).offset().top;\r\n            var elHeight = el.height();\r\n            var windowHeight = mUtil.getViewPort().height;\r\n            var offset = elOffset - ((windowHeight / 2) - (elHeight / 2));\r\n\r\n            jQuery('html,body').animate({\r\n                scrollTop: offset\r\n            }, 'slow');\r\n        },\r\n\r\n        /**\r\n        * Scrolls to the top of the page\r\n        */\r\n        // function to scroll to the top\r\n        scrollTop: function() {\r\n            mApp.scrollTo();\r\n        },\r\n\r\n        /**\r\n        * Initializes scrollable content using mCustomScrollbar plugin\r\n        * @param {object} el jQuery element object\r\n        * @param {object} options mCustomScrollbar plugin options(refer: http://manos.malihu.gr/jquery-custom-content-scroller/)\r\n        */\r\n        initScroller: function(el, options, doNotDestroy) {\r\n            if (mUtil.isMobileDevice()) {\r\n                el.css('overflow', 'auto');\r\n            } else {\r\n                if (doNotDestroy !== true) {\r\n                     mApp.destroyScroller(el); \r\n                }               \r\n                el.mCustomScrollbar({\r\n                    scrollInertia: 0,\r\n                    autoDraggerLength: true,\r\n                    autoHideScrollbar: true,\r\n                    autoExpandScrollbar: false,\r\n                    alwaysShowScrollbar: 0,\r\n                    axis: el.data('axis') ? el.data('axis') : 'y',\r\n                    mouseWheel: {\r\n                        scrollAmount: 120,\r\n                        preventDefault: true\r\n                    },\r\n                    setHeight: (options.height ? options.height : ''),\r\n                    theme:\"minimal-dark\"\r\n                });\r\n            }           \r\n        },\r\n\r\n        /**\r\n        * Destroys scrollable content's mCustomScrollbar plugin instance\r\n        * @param {object} el jQuery element object\r\n        */\r\n        destroyScroller: function(el) {\r\n            el.mCustomScrollbar(\"destroy\");\r\n            el.removeClass('mCS_destroyed');\r\n        },\r\n\r\n        /**\r\n        * Shows bootstrap alert\r\n        * @param {object} options\r\n        * @returns {string} ID attribute of the created alert\r\n        */\r\n        alert: function(options) {\r\n            options = $.extend(true, {\r\n                container: \"\", // alerts parent container(by default placed after the page breadcrumbs)\r\n                place: \"append\", // \"append\" or \"prepend\" in container \r\n                type: 'success', // alert's type\r\n                message: \"\", // alert's message\r\n                close: true, // make alert closable\r\n                reset: true, // close all previouse alerts first\r\n                focus: true, // auto scroll to the alert after shown\r\n                closeInSeconds: 0, // auto close after defined seconds\r\n                icon: \"\" // put icon before the message\r\n            }, options);\r\n\r\n            var id = mUtil.getUniqueID(\"App_alert\");\r\n\r\n            var html = '<div id=\"' + id + '\" class=\"custom-alerts alert alert-' + options.type + ' fade in\">' + (options.close ? '<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-hidden=\"true\"></button>' : '') + (options.icon !== \"\" ? '<i class=\"fa-lg fa fa-' + options.icon + '\"></i>  ' : '') + options.message + '</div>';\r\n\r\n            if (options.reset) {\r\n                $('.custom-alerts').remove();\r\n            }\r\n\r\n            if (!options.container) {\r\n                if ($('.page-fixed-main-content').size() === 1) {\r\n                    $('.page-fixed-main-content').prepend(html);\r\n                } else if (($('body').hasClass(\"page-container-bg-solid\") || $('body').hasClass(\"page-content-white\")) && $('.page-head').size() === 0) {\r\n                    $('.page-title').after(html);\r\n                } else {\r\n                    if ($('.page-bar').size() > 0) {\r\n                        $('.page-bar').after(html);\r\n                    } else {\r\n                        $('.page-breadcrumb, .breadcrumbs').after(html);\r\n                    }\r\n                }\r\n            } else {\r\n                if (options.place == \"append\") {\r\n                    $(options.container).append(html);\r\n                } else {\r\n                    $(options.container).prepend(html);\r\n                }\r\n            }\r\n\r\n            if (options.focus) {\r\n                mApp.scrollTo($('#' + id));\r\n            }\r\n\r\n            if (options.closeInSeconds > 0) {\r\n                setTimeout(function() {\r\n                    $('#' + id).remove();\r\n                }, options.closeInSeconds * 1000);\r\n            }\r\n\r\n            return id;\r\n        },\r\n\r\n        /**\r\n        * Blocks element with loading indiciator using http://malsup.com/jquery/block/\r\n        * @param {object} target jQuery element object\r\n        * @param {object} options \r\n        */\r\n        block: function(target, options) {\r\n            var el = $(target);\r\n\r\n            options = $.extend(true, {\r\n                opacity: 0.03,\r\n                overlayColor: '#000000',\r\n                state: 'brand',\r\n                type: 'loader',\r\n                size: 'lg',\r\n                centerX: true,\r\n                centerY: true,\r\n                message: '',\r\n                shadow: true,\r\n                width: 'auto'\r\n            }, options);\r\n\r\n            var skin;\r\n            var state;\r\n            var loading;\r\n\r\n            if (options.type == 'spinner') {\r\n                skin = options.skin ? 'm-spinner--skin-' + options.skin : '';\r\n                state = options.state ? 'm-spinner--' + options.state : '';\r\n                loading = '<div class=\"m-spinner ' + skin + ' ' + state + '\"></div';\r\n            } else {\r\n                skin = options.skin ? 'm-loader--skin-' + options.skin : '';\r\n                state = options.state ? 'm-loader--' + options.state : '';\r\n                size = options.size ? 'm-loader--' + options.size : '';\r\n                loading = '<div class=\"m-loader ' + skin + ' ' + state + ' ' + size + '\"></div';\r\n            }\r\n\r\n            if (options.message && options.message.length > 0) {\r\n                var classes = 'm-blockui ' + (options.shadow === false ? 'm-blockui-no-shadow' : '');\r\n\r\n                html = '<div class=\"' + classes + '\"><span>' + options.message + '</span><span>' + loading + '</span></div>';\r\n                options.width = mUtil.realWidth(html) + 10;\r\n                if (target == 'body') {\r\n                    html = '<div class=\"' + classes + '\" style=\"margin-left:-'+ (options.width / 2) +'px;\"><span>' + options.message + '</span><span>' + loading + '</span></div>';\r\n                }\r\n            } else {\r\n                html = loading;\r\n            }\r\n\r\n            var params = {\r\n                message: html,\r\n                centerY: options.centerY,\r\n                centerX: options.centerX,\r\n                css: {\r\n                    top: '30%',\r\n                    left: '50%',\r\n                    border: '0',\r\n                    padding: '0',\r\n                    backgroundColor: 'none',\r\n                    width: options.width\r\n                },\r\n                overlayCSS: {\r\n                    backgroundColor: options.overlayColor,\r\n                    opacity: options.opacity,\r\n                    cursor: 'wait',\r\n                    zIndex: '10'\r\n                },\r\n                onUnblock: function() {\r\n                    if (el) {\r\n                        el.css('position', '');\r\n                        el.css('zoom', '');\r\n                    }                    \r\n                }\r\n            };\r\n\r\n            if (target == 'body') {\r\n                params.css.top = '50%';\r\n                $.blockUI(params);\r\n            } else {\r\n                var el = $(target);\r\n                el.block(params);\r\n            }\r\n        },\r\n\r\n        /**\r\n        * Un-blocks the blocked element \r\n        * @param {object} target jQuery element object\r\n        */\r\n        unblock: function(target) {\r\n            if (target && target != 'body') {\r\n                $(target).unblock();\r\n            } else {\r\n                $.unblockUI();\r\n            }\r\n        },\r\n\r\n        /**\r\n        * Blocks the page body element with loading indicator\r\n        * @param {object} options \r\n        */\r\n        blockPage: function(options) {\r\n            return mApp.block('body', options);\r\n        },\r\n\r\n        /**\r\n        * Un-blocks the blocked page body element\r\n        */\r\n        unblockPage: function() {\r\n            return mApp.unblock('body');\r\n        },\r\n\r\n        /**\r\n        * Enable loader progress for button and other elements\r\n        * @param {object} target jQuery element object\r\n        * @param {object} options\r\n        */\r\n        progress: function(target, options) {\r\n            var skin = (options && options.skin) ? options.skin : 'light';\r\n            var alignment = (options && options.alignment) ? options.alignment : 'right'; \r\n            var size = (options && options.size) ? 'm-spinner--' + options.size : ''; \r\n            var classes = 'm-loader ' + 'm-loader--' + skin + ' m-loader--' + alignment + ' m-loader--' + size;\r\n\r\n            mApp.unprogress(target);\r\n            \r\n            $(target).addClass(classes);\r\n            $(target).data('progress-classes', classes);\r\n        },\r\n\r\n        /**\r\n        * Disable loader progress for button and other elements\r\n        * @param {object} target jQuery element object\r\n        */\r\n        unprogress: function(target) {\r\n            $(target).removeClass($(target).data('progress-classes'));\r\n        }\r\n    };\r\n}();\r\n\r\n//== Initialize mApp class on document ready\r\n$(document).ready(function() {\r\n    mApp.init();\r\n});\n/**\r\n * @class mUtil  Metronic base utilize class that privides helper functions\r\n */\r\n\r\nvar mUtil = function() {\r\n    var resizeHandlers = [];\r\n\r\n    /** @type {object} breakpoints The device width breakpoints **/\r\n    var breakpoints = {        \r\n        sm: 544, // Small screen / phone           \r\n        md: 768, // Medium screen / tablet            \r\n        lg: 992, // Large screen / desktop        \r\n        xl: 1200 // Extra large screen / wide desktop\r\n    };\r\n\r\n    /** @type {object} colors State colors **/\r\n    var colors = {\r\n        brand:      '#716aca',\r\n        metal:      '#c4c5d6',\r\n        light:      '#ffffff',\r\n        accent:     '#00c5dc',\r\n        primary:    '#5867dd',\r\n        success:    '#34bfa3',\r\n        info:       '#36a3f7',\r\n        warning:    '#ffb822',\r\n        danger:     '#f4516c'\r\n    };\r\n\r\n    /**\r\n    * Handle window resize event with some \r\n    * delay to attach event handlers upon resize complete \r\n    */\r\n    var _windowResizeHandler = function() {\r\n        var _runResizeHandlers = function() {\r\n            // reinitialize other subscribed elements\r\n            for (var i = 0; i < resizeHandlers.length; i++) {\r\n                var each = resizeHandlers[i];\r\n                each.call();\r\n            }\r\n        };\r\n\r\n        var timeout = false; // holder for timeout id\r\n        var delay = 250; // delay after event is \"complete\" to run callback\r\n\r\n        window.addEventListener('resize', function() {\r\n            clearTimeout(timeout);\r\n            timeout = setTimeout(function() {\r\n                _runResizeHandlers();\r\n            }, delay); // wait 50ms until window resize finishes.\r\n        });\r\n    };\r\n\r\n    return {\r\n        /**\r\n        * Class main initializer.\r\n        * @param {object} options.\r\n        * @returns null\r\n        */\r\n        //main function to initiate the theme\r\n        init: function(options) {\r\n            if (options && options.breakpoints) {\r\n                breakpoints = options.breakpoints;\r\n            }\r\n\r\n            if (options && options.colors) {\r\n                colors = options.colors;\r\n            }\r\n\r\n            _windowResizeHandler();\r\n        },\r\n\r\n        /**\r\n        * Adds window resize event handler.\r\n        * @param {function} callback function.\r\n        */\r\n        addResizeHandler: function(callback) {\r\n            resizeHandlers.push(callback);\r\n        },\r\n\r\n        /**\r\n        * Trigger window resize handlers.\r\n        */\r\n        runResizeHandlers: function() {\r\n            _runResizeHandlers();\r\n        },        \r\n\r\n        /**\r\n        * Get GET parameter value from URL.\r\n        * @param {string} paramName Parameter name.\r\n        * @returns {string}  \r\n        */\r\n        getURLParam: function(paramName) {\r\n            var searchString = window.location.search.substring(1),\r\n                i, val, params = searchString.split(\"&\");\r\n\r\n            for (i = 0; i < params.length; i++) {\r\n                val = params[i].split(\"=\");\r\n                if (val[0] == paramName) {\r\n                    return unescape(val[1]);\r\n                }\r\n            }\r\n\r\n            return null;\r\n        },\r\n\r\n        /**\r\n        * Checks whether current device is mobile touch.\r\n        * @returns {boolean}  \r\n        */\r\n        isMobileDevice: function() {\r\n            return (this.getViewPort().width < this.getBreakpoint('lg') ? true : false);\r\n        },\r\n\r\n        /**\r\n        * Checks whether current device is desktop.\r\n        * @returns {boolean}  \r\n        */\r\n        isDesktopDevice: function() {\r\n            return mUtil.isMobileDevice() ? false : true;\r\n        },\r\n\r\n        /**\r\n        * Gets browser window viewport size. Ref: http://andylangton.co.uk/articles/javascript/get-viewport-size-javascript/\r\n        * @returns {object}  \r\n        */\r\n        getViewPort: function() {\r\n            var e = window,\r\n                a = 'inner';\r\n            if (!('innerWidth' in window)) {\r\n                a = 'client';\r\n                e = document.documentElement || document.body;\r\n            }\r\n\r\n            return {\r\n                width: e[a + 'Width'],\r\n                height: e[a + 'Height']\r\n            };\r\n        },\r\n\r\n        /**\r\n        * Checks whether given device mode is currently activated.\r\n        * @param {string} mode Responsive mode name(e.g: desktop, desktop-and-tablet, tablet, tablet-and-mobile, mobile)\r\n        * @returns {boolean}  \r\n        */\r\n        isInResponsiveRange: function(mode) {\r\n            var breakpoint = this.getViewPort().width;\r\n\r\n            if (mode == 'general') {\r\n                return true;\r\n            } else if (mode == 'desktop' && breakpoint >= (this.getBreakpoint('lg') + 1)) {\r\n                return true;\r\n            } else if (mode == 'tablet' && (breakpoint >= (this.getBreakpoint('md') + 1) && breakpoint < this.getBreakpoint('lg'))) {\r\n                return true;\r\n            } else if (mode == 'mobile' && breakpoint <= this.getBreakpoint('md')) {\r\n                return true;\r\n            } else if (mode == 'desktop-and-tablet' && breakpoint >= (this.getBreakpoint('md') + 1)) {\r\n                return true;\r\n            } else if (mode == 'tablet-and-mobile' && breakpoint <= this.getBreakpoint('lg')) {\r\n                return true;\r\n            } else if (mode == 'minimal-desktop-and-below' && breakpoint <= this.getBreakpoint('xl')) {\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        /**\r\n        * Generates unique ID for give prefix.\r\n        * @param {string} prefix Prefix for generated ID\r\n        * @returns {boolean}  \r\n        */\r\n        getUniqueID: function(prefix) {\r\n            return prefix + Math.floor(Math.random() * (new Date()).getTime());\r\n        },\r\n\r\n        /**\r\n        * Gets window width for give breakpoint mode.\r\n        * @param {string} mode Responsive mode name(e.g: xl, lg, md, sm)\r\n        * @returns {number}  \r\n        */\r\n        getBreakpoint: function(mode) {\r\n            if ($.inArray(mode, breakpoints)) {\r\n                return breakpoints[mode];\r\n            }\r\n        },\r\n\r\n        /**\r\n        * Checks whether object has property matchs given key path.\r\n        * @param {object} obj Object contains values paired with given key path\r\n        * @param {string} keys Keys path seperated with dots\r\n        * @returns {object}  \r\n        */\r\n        isset: function(obj, keys) {\r\n            var stone;\r\n\r\n            keys = keys || '';\r\n\r\n            if (keys.indexOf('[') !== -1) {\r\n                throw new Error('Unsupported object path notation.');\r\n            }\r\n\r\n            keys = keys.split('.');\r\n\r\n            do {\r\n                if (obj === undefined) {\r\n                    return false;\r\n                }\r\n\r\n                stone = keys.shift();\r\n\r\n                if (!obj.hasOwnProperty(stone)) {\r\n                    return false;\r\n                }\r\n\r\n                obj = obj[stone];\r\n\r\n            } while (keys.length);\r\n\r\n            return true;\r\n        },\r\n\r\n        /**\r\n        * Gets highest z-index of the given element parents\r\n        * @param {object} el jQuery element object\r\n        * @returns {number}  \r\n        */\r\n        getHighestZindex: function(el) {\r\n            var elem = $(el),\r\n                position, value;\r\n\r\n            while (elem.length && elem[0] !== document) {\r\n                // Ignore z-index if position is set to a value where z-index is ignored by the browser\r\n                // This makes behavior of this function consistent across browsers\r\n                // WebKit always returns auto if the element is positioned\r\n                position = elem.css(\"position\");\r\n\r\n                if (position === \"absolute\" || position === \"relative\" || position === \"fixed\") {\r\n                    // IE returns 0 when zIndex is not specified\r\n                    // other browsers return a string\r\n                    // we ignore the case of nested elements with an explicit value of 0\r\n                    // <div style=\"z-index: -10;\"><div style=\"z-index: 0;\"></div></div>\r\n                    value = parseInt(elem.css(\"zIndex\"), 10);\r\n                    if (!isNaN(value) && value !== 0) {\r\n                        return value;\r\n                    }\r\n                }\r\n                elem = elem.parent();\r\n            }\r\n        },\r\n\r\n        /**\r\n        * Checks whether the element has given classes\r\n        * @param {object} el jQuery element object\r\n        * @param {string} Classes string\r\n        * @returns {boolean}  \r\n        */\r\n        hasClasses: function(el, classes) {\r\n            var classesArr = classes.split(\" \");\r\n\r\n            for ( var i = 0; i < classesArr.length; i++ ) {\r\n                if ( el.hasClass( classesArr[i] ) == false ) {\r\n                    return false;\r\n                }\r\n            }                \r\n\r\n            return true;\r\n        },\r\n\r\n        /**\r\n        * Gets element actual/real width\r\n        * @param {object} el jQuery element object\r\n        * @returns {number}  \r\n        */\r\n        realWidth: function(el){\r\n            var clone = $(el).clone();\r\n            clone.css(\"visibility\",\"hidden\");\r\n            clone.css('overflow', 'hidden');\r\n            clone.css(\"height\",\"0\");\r\n            $('body').append(clone);\r\n            var width = clone.outerWidth();\r\n            clone.remove();\r\n\r\n            return width;\r\n        },\r\n\r\n        /**\r\n        * Checks whether the element has any parent with fixed position\r\n        * @param {object} el jQuery element object\r\n        * @returns {boolean}  \r\n        */\r\n        hasFixedPositionedParent: function(el) {\r\n            var result = false;\r\n            \r\n            el.parents().each(function () {\r\n                if ($(this).css('position') == 'fixed') {\r\n                    result = true;\r\n                    return;\r\n                }\r\n            });\r\n\r\n            return result;\r\n        },\r\n\r\n        /**\r\n        * Simulates delay\r\n        */\r\n        sleep: function(milliseconds) {\r\n            var start = new Date().getTime();\r\n            for (var i = 0; i < 1e7; i++) {\r\n                if ((new Date().getTime() - start) > milliseconds){\r\n                    break;\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n        * Gets randomly generated integer value within given min and max range\r\n        * @param {number} min Range start value\r\n        * @param {number} min Range end value\r\n        * @returns {number}  \r\n        */\r\n        getRandomInt: function(min, max) {\r\n            return Math.floor(Math.random() * (max - min + 1)) + min;\r\n        },\r\n\r\n        /**\r\n        * Gets state color's hex code by color name\r\n        * @param {string} name Color name\r\n        * @returns {string}  \r\n        */\r\n        getColor: function(name) {\r\n            return colors[name];\r\n        },\r\n\r\n        /**\r\n        * Checks whether Angular library is included\r\n        * @returns {boolean}  \r\n        */\r\n        isAngularVersion: function() {\r\n            return window.Zone !== undefined  ? true : false;\r\n        }\r\n    }\r\n}();\r\n\r\n//== Initialize mUtil class on document ready\r\n$(document).ready(function() {\r\n    mUtil.init();\r\n});\n(function($) {\r\n\r\n\tif (typeof mUtil === 'undefined') throw new Error('mUtil is required and must be included before mDatatable.');\r\n\r\n\t// plugin setup\r\n\t$.fn.mDatatable = function(options) {\r\n\t\tif ($(this).length === 0) throw new Error('No mDatatable element exist.');\r\n\r\n\t\t// global variables\r\n\t\tvar datatable = this;\r\n\r\n\t\t// debug enabled?\r\n\t\t// 1) state will be cleared on each refresh\r\n\t\t// 2) enable some logs\r\n\t\t// 3) etc.\r\n\t\tdatatable.debug = false;\r\n\r\n\t\tdatatable.API = {\r\n\t\t\trecord: null,\r\n\t\t\tvalue: null,\r\n\t\t\tparams: null,\r\n\t\t};\r\n\r\n\t\tvar Plugin = {\r\n\t\t\t/********************\r\n\t\t\t ** PRIVATE METHODS\r\n\t\t\t ********************/\r\n\t\t\tisInit: false,\r\n\t\t\toffset: 110,\r\n\t\t\tstateId: 'meta',\r\n\t\t\tajaxParams: {},\r\n\r\n\t\t\tinit: function(options) {\r\n\t\t\t\t// data source option empty is normal table\r\n\t\t\t\tif (options.data.source === null) {\r\n\t\t\t\t\tPlugin.extractTable();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tPlugin.setupBaseDOM.call();\r\n\t\t\t\tPlugin.setupDOM(datatable.table);\r\n\t\t\t\tPlugin.spinnerCallback(true);\r\n\r\n\t\t\t\t// set custom query from options\r\n\t\t\t\tPlugin.setDataSourceQuery(Plugin.getOption('data.source.read.params.query'));\r\n\r\n\t\t\t\t// on event after layout had done setup, show datatable\r\n\t\t\t\t$(datatable).on('m-datatable--on-layout-updated', Plugin.afterRender);\r\n\r\n\t\t\t\tif (datatable.debug) Plugin.stateRemove(Plugin.stateId);\r\n\r\n\t\t\t\t// initialize extensions\r\n\t\t\t\t$.each(Plugin.getOption('extensions'), function(extName, extOptions) {\r\n\t\t\t\t\tif (typeof $.fn.mDatatable[extName] === 'function')\r\n\t\t\t\t\t\tnew $.fn.mDatatable[extName](datatable, extOptions);\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// get data\r\n\t\t\t\tif (options.data.type === 'remote' || options.data.type === 'local') {\r\n\t\t\t\t\tif (options.data.saveState === false\r\n\t\t\t\t\t\t|| options.data.saveState.cookie === false\r\n\t\t\t\t\t\t&& options.data.saveState.webstorage === false) {\r\n\t\t\t\t\t\tPlugin.stateRemove(Plugin.stateId);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// get data for local datatable and local table\r\n\t\t\t\t\tif (options.data.type === 'local' && typeof options.data.source === 'object') {\r\n\t\t\t\t\t\tdatatable.dataSet = datatable.originalDataSet = Plugin.dataMapCallback(options.data.source);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tPlugin.dataRender();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tPlugin.setHeadTitle();\r\n\t\t\t\tPlugin.setHeadTitle(datatable.tableFoot);\r\n\r\n\t\t\t\t// for normal table, setup layout right away\r\n\t\t\t\tif (options.data.type === null) {\r\n\t\t\t\t\tPlugin.setupCellField.call();\r\n\t\t\t\t\tPlugin.setupTemplateCell.call();\r\n\t\t\t\t\t// setup extra system column properties\r\n\t\t\t\t\tPlugin.setupSystemColumn.call();\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// hide header\r\n\t\t\t\tif (typeof options.layout.header !== 'undefined' &&\r\n\t\t\t\t\toptions.layout.header === false) {\r\n\t\t\t\t\t$(datatable.table).find('thead').remove();\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// hide footer\r\n\t\t\t\tif (typeof options.layout.footer !== 'undefined' &&\r\n\t\t\t\t\toptions.layout.footer === false) {\r\n\t\t\t\t\t$(datatable.table).find('tfoot').remove();\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// for normal and local data type, run layoutUpdate\r\n\t\t\t\tif (options.data.type === null ||\r\n\t\t\t\t\toptions.data.type === 'local') {\r\n\t\t\t\t\t// setup nested datatable, if option enabled\r\n\t\t\t\t\tPlugin.setupSubDatatable.call();\r\n\t\t\t\t\t// setup extra system column properties\r\n\t\t\t\t\tPlugin.setupSystemColumn.call();\r\n\t\t\t\t\tPlugin.redraw();\r\n\t\t\t\t}\r\n\r\n\t\t\t\t$(window).resize(Plugin.fullRender);\r\n\r\n\t\t\t\t$(datatable).height('');\r\n\r\n\t\t\t\t$(Plugin.getOption('search.input')).on('keyup', function(e) {\r\n\t\t\t\t\tif (Plugin.getOption('search.onEnter') && e.which !== 13) return;\r\n\t\t\t\t\tPlugin.search($(this).val().toLowerCase());\r\n\t\t\t\t});\r\n\r\n\t\t\t\treturn datatable;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Extract static HTML table content into datasource\r\n\t\t\t */\r\n\t\t\textractTable: function() {\r\n\t\t\t\tvar columns = [];\r\n\t\t\t\tvar headers = $(datatable).\r\n\t\t\t\t\tfind('tr:first-child th').\r\n\t\t\t\t\tget().\r\n\t\t\t\t\tmap(function(cell, i) {\r\n\t\t\t\t\t\tvar field = $(cell).data('field');\r\n\t\t\t\t\t\tif (typeof field === 'undefined') {\r\n\t\t\t\t\t\t\tfield = $(cell).text().trim();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar column = {field: field, title: field};\r\n\t\t\t\t\t\tfor (var ii in options.columns) {\r\n\t\t\t\t\t\t\tif (options.columns[ii].field === field) {\r\n\t\t\t\t\t\t\t\tcolumn = $.extend(true, {}, options.columns[ii], column);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcolumns.push(column);\r\n\t\t\t\t\t\treturn field;\r\n\t\t\t\t\t});\r\n\t\t\t\t// auto create columns config\r\n\t\t\t\toptions.columns = columns;\r\n\r\n\t\t\t\tvar data = $(datatable).find('tr').get().map(function(row) {\r\n\t\t\t\t\treturn $(row).find('td').get().map(function(cell, i) {\r\n\t\t\t\t\t\treturn $(cell).html();\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t\tvar source = [];\r\n\t\t\t\t$.each(data, function(i, row) {\r\n\t\t\t\t\tif (row.length === 0) return;\r\n\t\t\t\t\tvar td = {};\r\n\t\t\t\t\t$.each(row, function(index, value) {\r\n\t\t\t\t\t\ttd[headers[index]] = $.trim(value);\r\n\t\t\t\t\t});\r\n\t\t\t\t\tsource.push(td);\r\n\t\t\t\t});\r\n\t\t\t\toptions.data.source = source;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * One time layout update on init\r\n\t\t\t */\r\n\t\t\tlayoutUpdate: function() {\r\n\t\t\t\t// setup nested datatable, if option enabled\r\n\t\t\t\tPlugin.setupSubDatatable.call();\r\n\r\n\t\t\t\t// setup extra system column properties\r\n\t\t\t\tPlugin.setupSystemColumn.call();\r\n\r\n\t\t\t\tPlugin.columnHide.call();\r\n\r\n\t\t\t\tPlugin.sorting.call();\r\n\r\n\t\t\t\t// setup cell hover event\r\n\t\t\t\tPlugin.setupHover.call();\r\n\r\n\t\t\t\tif (typeof options.detail === 'undefined'\r\n\t\t\t\t\t// temporary disable lock column in subtable\r\n\t\t\t\t\t&& Plugin.getDepth() === 1) {\r\n\t\t\t\t\t// lock columns handler\r\n\t\t\t\t\tPlugin.lockTable.call();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tPlugin.resetScroll();\r\n\r\n\t\t\t\tif (!Plugin.isInit) {\r\n\t\t\t\t\t$(datatable).trigger('m-datatable--on-init', {table: $(datatable.wrap).attr('id'), options: options});\r\n\t\t\t\t\tPlugin.isInit = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t$(datatable).trigger('m-datatable--on-layout-updated', {table: $(datatable.wrap).attr('id')});\r\n\t\t\t},\r\n\r\n\t\t\tlockTable: function() {\r\n\t\t\t\t// todo; revise lock table responsive\r\n\t\t\t\tvar lock = {\r\n\t\t\t\t\tlockEnabled: false,\r\n\t\t\t\t\tinit: function() {\r\n\t\t\t\t\t\t// check if table should be locked columns\r\n\t\t\t\t\t\tlock.lockEnabled = Plugin.lockEnabledColumns();\r\n\t\t\t\t\t\tif (lock.lockEnabled.left.length === 0 &&\r\n\t\t\t\t\t\t\tlock.lockEnabled.right.length === 0) {\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tlock.enable();\r\n\t\t\t\t\t},\r\n\t\t\t\t\tenable: function() {\r\n\t\t\t\t\t\tvar enableLock = function(tablePart) {\r\n\t\t\t\t\t\t\t// check if already has lock column\r\n\t\t\t\t\t\t\tif ($(tablePart).find('.m-datatable__lock').length > 0) {\r\n\t\t\t\t\t\t\t\tPlugin.log('Locked container already exist in: ', tablePart);\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t// check if no rows exists\r\n\t\t\t\t\t\t\tif ($(tablePart).find('.m-datatable__row').length === 0) {\r\n\t\t\t\t\t\t\t\tPlugin.log('No row exist in: ', tablePart);\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// locked div container\r\n\t\t\t\t\t\t\tvar lockLeft = $('<div/>').\r\n\t\t\t\t\t\t\t\taddClass('m-datatable__lock m-datatable__lock--left');\r\n\t\t\t\t\t\t\tvar lockScroll = $('<div/>').\r\n\t\t\t\t\t\t\t\taddClass('m-datatable__lock m-datatable__lock--scroll');\r\n\t\t\t\t\t\t\tvar lockRight = $('<div/>').\r\n\t\t\t\t\t\t\t\taddClass('m-datatable__lock m-datatable__lock--right');\r\n\r\n\t\t\t\t\t\t\t$(tablePart).find('.m-datatable__row').each(function() {\r\n\t\t\t\t\t\t\t\tvar rowLeft = $('<tr/>').\r\n\t\t\t\t\t\t\t\t\taddClass('m-datatable__row').\r\n\t\t\t\t\t\t\t\t\tappendTo(lockLeft);\r\n\t\t\t\t\t\t\t\tvar rowScroll = $('<tr/>').\r\n\t\t\t\t\t\t\t\t\taddClass('m-datatable__row').\r\n\t\t\t\t\t\t\t\t\tappendTo(lockScroll);\r\n\t\t\t\t\t\t\t\tvar rowRight = $('<tr/>').\r\n\t\t\t\t\t\t\t\t\taddClass('m-datatable__row').\r\n\t\t\t\t\t\t\t\t\tappendTo(lockRight);\r\n\t\t\t\t\t\t\t\t$(this).find('.m-datatable__cell').each(function() {\r\n\t\t\t\t\t\t\t\t\tvar locked = $(this).data('locked');\r\n\t\t\t\t\t\t\t\t\tif (typeof locked !== 'undefined') {\r\n\t\t\t\t\t\t\t\t\t\tif (typeof locked.left !== 'undefined' || locked === true) {\r\n\t\t\t\t\t\t\t\t\t\t\t// default locked to left\r\n\t\t\t\t\t\t\t\t\t\t\t$(this).appendTo(rowLeft);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tif (typeof locked.right !== 'undefined') {\r\n\t\t\t\t\t\t\t\t\t\t\t$(this).appendTo(rowRight);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t$(this).appendTo(rowScroll);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t// remove old row\r\n\t\t\t\t\t\t\t\t$(this).remove();\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\tif (lock.lockEnabled.left.length > 0) {\r\n\t\t\t\t\t\t\t\t$(datatable.wrap).addClass('m-datatable--lock');\r\n\t\t\t\t\t\t\t\t$(lockLeft).appendTo(tablePart);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (lock.lockEnabled.left.length > 0 || lock.lockEnabled.right.length > 0) {\r\n\t\t\t\t\t\t\t\t$(lockScroll).appendTo(tablePart);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (lock.lockEnabled.right.length > 0) {\r\n\t\t\t\t\t\t\t\t$(datatable.wrap).addClass('m-datatable--lock');\r\n\t\t\t\t\t\t\t\t$(lockRight).appendTo(tablePart);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t$(datatable.table).find('thead,tbody,tfoot').each(function() {\r\n\t\t\t\t\t\t\tvar tablePart = this;\r\n\t\t\t\t\t\t\tif ($(this).find('.m-datatable__lock').length === 0) {\r\n\t\t\t\t\t\t\t\t$(this).ready(function() {\r\n\t\t\t\t\t\t\t\t\tenableLock(tablePart);\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t},\r\n\t\t\t\t};\r\n\t\t\t\tlock.init();\r\n\t\t\t\treturn lock;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Render everything for resize\r\n\t\t\t */\r\n\t\t\tfullRender: function() {\r\n\t\t\t\t// todo; full render datatable for specific condition only\r\n\t\t\t\tPlugin.spinnerCallback(true);\r\n\t\t\t\t$(datatable.wrap).removeClass('m-datatable--loaded');\r\n\r\n\t\t\t\tPlugin.insertData();\r\n\t\t\t},\r\n\r\n\t\t\tlockEnabledColumns: function() {\r\n\t\t\t\tvar screen = $(window).width();\r\n\t\t\t\tvar columns = options.columns;\r\n\t\t\t\tvar enabled = {left: [], right: []};\r\n\t\t\t\t$.each(columns, function(i, column) {\r\n\t\t\t\t\tif (typeof column.locked !== 'undefined') {\r\n\t\t\t\t\t\tif (typeof column.locked.left !== 'undefined') {\r\n\t\t\t\t\t\t\tif (mUtil.getBreakpoint(column.locked.left) <= screen) {\r\n\t\t\t\t\t\t\t\tenabled['left'].push(column.locked.left);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (typeof column.locked.right !== 'undefined') {\r\n\t\t\t\t\t\t\tif (mUtil.getBreakpoint(column.locked.right) <= screen) {\r\n\t\t\t\t\t\t\t\tenabled['right'].push(column.locked.right);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\treturn enabled;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * After render event, called by m-datatable--on-layout-updated\r\n\t\t\t * @param e\r\n\t\t\t * @param args\r\n\t\t\t */\r\n\t\t\tafterRender: function(e, args) {\r\n\t\t\t\tif (args.table == $(datatable.wrap).attr('id')) {\r\n\t\t\t\t\t$(datatable).ready(function() {\r\n\t\t\t\t\t\tif (!Plugin.isLocked()) {\r\n\t\t\t\t\t\t\tPlugin.redraw();\r\n\t\t\t\t\t\t\t// work on non locked columns\r\n\t\t\t\t\t\t\tif (Plugin.getOption('rows.autoHide')) {\r\n\t\t\t\t\t\t\t\tPlugin.autoHide();\r\n\t\t\t\t\t\t\t\t// reset row\r\n\t\t\t\t\t\t\t\t$(datatable.table).find('.m-datatable__row').css('height', '');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// row even class\r\n\t\t\t\t\t\t$(datatable.tableBody).find('.m-datatable__row').removeClass('m-datatable__row--even');\r\n\t\t\t\t\t\tif ($(datatable.wrap).hasClass('m-datatable--subtable')) {\r\n\t\t\t\t\t\t\t$(datatable.tableBody).find('.m-datatable__row:not(.m-datatable__row-detail):even').addClass('m-datatable__row--even');\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t$(datatable.tableBody).find('.m-datatable__row:nth-child(even)').addClass('m-datatable__row--even');\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// redraw locked columns table\r\n\t\t\t\t\t\tif (Plugin.isLocked()) Plugin.redraw();\r\n\t\t\t\t\t\t$(datatable.tableBody).css('visibility', '');\r\n\t\t\t\t\t\t$(datatable.wrap).addClass('m-datatable--loaded');\r\n\t\t\t\t\t\tPlugin.scrollbar.call();\r\n\t\t\t\t\t\t// Plugin.hoverColumn.call();\r\n\t\t\t\t\t\tPlugin.spinnerCallback(false);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\thoverTimer: 0,\r\n\t\t\tisScrolling: false,\r\n\t\t\tsetupHover: function() {\r\n\t\t\t\t$(window).scroll(function(e) {\r\n\t\t\t\t\t// stop hover when scrolling\r\n\t\t\t\t\tclearTimeout(Plugin.hoverTimer);\r\n\t\t\t\t\tPlugin.isScrolling = true;\r\n\t\t\t\t});\r\n\r\n\t\t\t\t$(datatable.tableBody).\r\n\t\t\t\t\tfind('.m-datatable__cell').\r\n\t\t\t\t\toff('mouseenter', 'mouseleave').\r\n\t\t\t\t\ton('mouseenter', function() {\r\n\t\t\t\t\t\t// reset scroll timer to hover class\r\n\t\t\t\t\t\tPlugin.hoverTimer = setTimeout(function() {\r\n\t\t\t\t\t\t\tPlugin.isScrolling = false;\r\n\t\t\t\t\t\t}, 200);\r\n\t\t\t\t\t\tif (Plugin.isScrolling) return;\r\n\r\n\t\t\t\t\t\t// normal table\r\n\t\t\t\t\t\tvar row = $(this).\r\n\t\t\t\t\t\t\tclosest('.m-datatable__row').\r\n\t\t\t\t\t\t\taddClass('m-datatable__row--hover');\r\n\t\t\t\t\t\tvar index = $(row).index() + 1;\r\n\r\n\t\t\t\t\t\t// lock table\r\n\t\t\t\t\t\t$(row).\r\n\t\t\t\t\t\t\tclosest('.m-datatable__lock').\r\n\t\t\t\t\t\t\tparent().\r\n\t\t\t\t\t\t\tfind('.m-datatable__row:nth-child(' + index + ')').\r\n\t\t\t\t\t\t\taddClass('m-datatable__row--hover');\r\n\t\t\t\t\t}).\r\n\t\t\t\t\ton('mouseleave', function() {\r\n\t\t\t\t\t\t// normal table\r\n\t\t\t\t\t\tvar row = $(this).\r\n\t\t\t\t\t\t\tclosest('.m-datatable__row').\r\n\t\t\t\t\t\t\tremoveClass('m-datatable__row--hover');\r\n\t\t\t\t\t\tvar index = $(row).index() + 1;\r\n\r\n\t\t\t\t\t\t// look table\r\n\t\t\t\t\t\t$(row).\r\n\t\t\t\t\t\t\tclosest('.m-datatable__lock').\r\n\t\t\t\t\t\t\tparent().\r\n\t\t\t\t\t\t\tfind('.m-datatable__row:nth-child(' + index + ')').\r\n\t\t\t\t\t\t\tremoveClass('m-datatable__row--hover');\r\n\t\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Adjust width of locked table containers by resize handler\r\n\t\t\t * @returns {number}\r\n\t\t\t */\r\n\t\t\tadjustLockContainer: function() {\r\n\t\t\t\tif (!Plugin.isLocked()) return 0;\r\n\r\n\t\t\t\t// refer to head dimension\r\n\t\t\t\tvar containerWidth = $(datatable.tableHead).width();\r\n\t\t\t\tvar lockLeft = $(datatable.tableHead).\r\n\t\t\t\t\tfind('.m-datatable__lock--left').\r\n\t\t\t\t\twidth();\r\n\t\t\t\tvar lockRight = $(datatable.tableHead).\r\n\t\t\t\t\tfind('.m-datatable__lock--right').\r\n\t\t\t\t\twidth();\r\n\r\n\t\t\t\tif (typeof lockLeft === 'undefined') lockLeft = 0;\r\n\t\t\t\tif (typeof lockRight === 'undefined') lockRight = 0;\r\n\r\n\t\t\t\tvar lockScroll = Math.floor(containerWidth - lockLeft - lockRight);\r\n\t\t\t\t$(datatable.table).\r\n\t\t\t\t\tfind('.m-datatable__lock--scroll').\r\n\t\t\t\t\tcss('width', lockScroll);\r\n\r\n\t\t\t\treturn lockScroll;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * todo; not in use\r\n\t\t\t */\r\n\t\t\tdragResize: function() {\r\n\t\t\t\tvar pressed = false;\r\n\t\t\t\tvar start = undefined;\r\n\t\t\t\tvar startX, startWidth;\r\n\t\t\t\t$(datatable.tableHead).\r\n\t\t\t\t\tfind('.m-datatable__cell').\r\n\t\t\t\t\tmousedown(function(e) {\r\n\t\t\t\t\t\tstart = $(this);\r\n\t\t\t\t\t\tpressed = true;\r\n\t\t\t\t\t\tstartX = e.pageX;\r\n\t\t\t\t\t\tstartWidth = $(this).width();\r\n\t\t\t\t\t\t$(start).addClass('m-datatable__cell--resizing');\r\n\r\n\t\t\t\t\t}).\r\n\t\t\t\t\tmousemove(function(e) {\r\n\t\t\t\t\t\tif (pressed) {\r\n\t\t\t\t\t\t\tvar i = $(start).index();\r\n\t\t\t\t\t\t\tvar tableBody = $(datatable.tableBody);\r\n\t\t\t\t\t\t\tvar ifLocked = $(start).closest('.m-datatable__lock');\r\n\r\n\t\t\t\t\t\t\tif (ifLocked) {\r\n\t\t\t\t\t\t\t\tvar lockedIndex = $(ifLocked).index();\r\n\t\t\t\t\t\t\t\ttableBody = $(datatable.tableBody).\r\n\t\t\t\t\t\t\t\t\tfind('.m-datatable__lock').\r\n\t\t\t\t\t\t\t\t\teq(lockedIndex);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t$(tableBody).find('.m-datatable__row').each(function(tri, tr) {\r\n\t\t\t\t\t\t\t\t$(tr).\r\n\t\t\t\t\t\t\t\t\tfind('.m-datatable__cell').\r\n\t\t\t\t\t\t\t\t\teq(i).\r\n\t\t\t\t\t\t\t\t\twidth(startWidth + (e.pageX - startX)).\r\n\t\t\t\t\t\t\t\t\tchildren().\r\n\t\t\t\t\t\t\t\t\twidth(startWidth + (e.pageX - startX));\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t$(start).children().css('width', startWidth + (e.pageX - startX));\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}).\r\n\t\t\t\t\tmouseup(function() {\r\n\t\t\t\t\t\t$(start).removeClass('m-datatable__cell--resizing');\r\n\t\t\t\t\t\tpressed = false;\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t$(document).mouseup(function() {\r\n\t\t\t\t\t$(start).removeClass('m-datatable__cell--resizing');\r\n\t\t\t\t\tpressed = false;\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * To prepare placeholder for table before content is loading\r\n\t\t\t */\r\n\t\t\tinitHeight: function() {\r\n\t\t\t\tif (options.layout.height && options.layout.scroll) {\r\n\t\t\t\t\tvar theadHeight = $(datatable.tableHead).find('.m-datatable__row').height();\r\n\t\t\t\t\tvar tfootHeight = $(datatable.tableFoot).find('.m-datatable__row').height();\r\n\t\t\t\t\tvar bodyHeight = options.layout.height;\r\n\t\t\t\t\tif (theadHeight > 0) {\r\n\t\t\t\t\t\tbodyHeight -= theadHeight;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (tfootHeight > 0) {\r\n\t\t\t\t\t\tbodyHeight -= tfootHeight;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t$(datatable.tableBody).css('max-height', bodyHeight);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Setup base DOM (table, thead, tbody, tfoot) and create if not exist.\r\n\t\t\t */\r\n\t\t\tsetupBaseDOM: function() {\r\n\t\t\t\t// keep original state before mDatatable initialize\r\n\t\t\t\tdatatable.initialDatatable = $(datatable).clone();\r\n\r\n\t\t\t\t// main element\r\n\t\t\t\tif ($(datatable).prop('tagName') === 'TABLE') {\r\n\t\t\t\t\t// if main init element is <table>, wrap with div\r\n\t\t\t\t\tdatatable.table = $(datatable).\r\n\t\t\t\t\t\tremoveClass('m-datatable').\r\n\t\t\t\t\t\taddClass('m-datatable__table');\r\n\t\t\t\t\tif ($(datatable.table).parents('.m-datatable').length === 0) {\r\n\t\t\t\t\t\tdatatable.table.wrap($('<div/>').\r\n\t\t\t\t\t\t\taddClass('m-datatable').\r\n\t\t\t\t\t\t\taddClass('m-datatable--' + options.layout.theme));\r\n\t\t\t\t\t\tdatatable.wrap = $(datatable.table).parent();\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// create table\r\n\t\t\t\t\tdatatable.wrap = $(datatable).\r\n\t\t\t\t\t\taddClass('m-datatable').\r\n\t\t\t\t\t\taddClass('m-datatable--' + options.layout.theme);\r\n\t\t\t\t\tdatatable.table = $('<table/>').\r\n\t\t\t\t\t\taddClass('m-datatable__table').\r\n\t\t\t\t\t\tappendTo(datatable);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (typeof options.layout.class !== 'undefined') {\r\n\t\t\t\t\t$(datatable.wrap).addClass(options.layout.class);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t$(datatable.table).\r\n\t\t\t\t\tremoveClass('m-datatable--destroyed').\r\n\t\t\t\t\tcss('display', 'block');\r\n\r\n\t\t\t\t// force disable save state\r\n\t\t\t\tif (typeof $(datatable).attr('id') === 'undefined') {\r\n\t\t\t\t\tPlugin.setOption('data.saveState', false);\r\n\t\t\t\t\t$(datatable.table).attr('id', mUtil.getUniqueID('m-datatable--'));\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// predefine table height\r\n\t\t\t\tif (Plugin.getOption('layout.minHeight'))\r\n\t\t\t\t\t$(datatable.table).css('min-height', Plugin.getOption('layout.minHeight'));\r\n\r\n\t\t\t\tif (Plugin.getOption('layout.height'))\r\n\t\t\t\t\t$(datatable.table).css('max-height', Plugin.getOption('layout.height'));\r\n\r\n\t\t\t\t// for normal table load\r\n\t\t\t\tif (options.data.type === null) {\r\n\t\t\t\t\t$(datatable.table).css('width', '').css('display', '');\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// create table head element\r\n\t\t\t\tdatatable.tableHead = $(datatable.table).find('thead');\r\n\t\t\t\tif ($(datatable.tableHead).length === 0) {\r\n\t\t\t\t\tdatatable.tableHead = $('<thead/>').prependTo(datatable.table);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// create table head element\r\n\t\t\t\tdatatable.tableBody = $(datatable.table).find('tbody');\r\n\t\t\t\tif ($(datatable.tableBody).length === 0) {\r\n\t\t\t\t\tdatatable.tableBody = $('<tbody/>').appendTo(datatable.table);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (typeof options.layout.footer !== 'undefined' &&\r\n\t\t\t\t\toptions.layout.footer) {\r\n\t\t\t\t\t// create table foot element\r\n\t\t\t\t\tdatatable.tableFoot = $(datatable.table).find('tfoot');\r\n\t\t\t\t\tif ($(datatable.tableFoot).length === 0) {\r\n\t\t\t\t\t\tdatatable.tableFoot = $('<tfoot/>').appendTo(datatable.table);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Set column data before table manipulation.\r\n\t\t\t */\r\n\t\t\tsetupCellField: function(tableParts) {\r\n\t\t\t\tif (typeof tableParts === 'undefined') tableParts = $(datatable.table).children();\r\n\t\t\t\tvar columns = options.columns;\r\n\t\t\t\t$.each(tableParts, function(part, tablePart) {\r\n\t\t\t\t\t$(tablePart).find('.m-datatable__row').each(function(tri, tr) {\r\n\t\t\t\t\t\t// prepare data\r\n\t\t\t\t\t\t$(tr).find('.m-datatable__cell').each(function(tdi, td) {\r\n\t\t\t\t\t\t\tif (typeof columns[tdi] !== 'undefined') {\r\n\t\t\t\t\t\t\t\t$(td).data(columns[tdi]);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Set column template callback\r\n\t\t\t * @param tablePart\r\n\t\t\t */\r\n\t\t\tsetupTemplateCell: function(tablePart) {\r\n\t\t\t\tif (typeof tablePart === 'undefined') tablePart = datatable.tableBody;\r\n\t\t\t\tvar columns = options.columns;\r\n\t\t\t\t$(tablePart).find('.m-datatable__row').each(function(tri, tr) {\r\n\t\t\t\t\t// row data object, if any\r\n\t\t\t\t\tvar obj = $(tr).data('obj') || {};\r\n\r\n\t\t\t\t\t// @deprecated in v5.0.6\r\n\t\t\t\t\tobj['getIndex'] = function() {\r\n\t\t\t\t\t\treturn tri;\r\n\t\t\t\t\t};\r\n\t\t\t\t\t// @deprecated in v5.0.6\r\n\t\t\t\t\tobj['getDatatable'] = function() {\r\n\t\t\t\t\t\treturn datatable;\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\t// @deprecated in v5.0.6\r\n\t\t\t\t\tvar rowCallback = Plugin.getOption('rows.callback');\r\n\t\t\t\t\tif (typeof rowCallback === 'function') {\r\n\t\t\t\t\t\trowCallback($(tr), obj, tri);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// before template row callback\r\n\t\t\t\t\tvar beforeTemplate = Plugin.getOption('rows.beforeTemplate');\r\n\t\t\t\t\tif (typeof beforeTemplate === 'function') {\r\n\t\t\t\t\t\tbeforeTemplate($(tr), obj, tri);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// if data object is undefined, collect from table\r\n\t\t\t\t\tif (typeof obj === 'undefined') {\r\n\t\t\t\t\t\tobj = {};\r\n\t\t\t\t\t\t$(tr).find('.m-datatable__cell').each(function(tdi, td) {\r\n\t\t\t\t\t\t\t// get column settings by field\r\n\t\t\t\t\t\t\tvar column = $.grep(columns, function(n, i) {\r\n\t\t\t\t\t\t\t\treturn $(td).data('field') === n.field;\r\n\t\t\t\t\t\t\t})[0];\r\n\t\t\t\t\t\t\tif (typeof column !== 'undefined') {\r\n\t\t\t\t\t\t\t\tobj[column['field']] = $(td).text();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t$(tr).find('.m-datatable__cell').each(function(tdi, td) {\r\n\t\t\t\t\t\t// get column settings by field\r\n\t\t\t\t\t\tvar column = $.grep(columns, function(n, i) {\r\n\t\t\t\t\t\t\treturn $(td).data('field') === n.field;\r\n\t\t\t\t\t\t})[0];\r\n\t\t\t\t\t\tif (typeof column !== 'undefined') {\r\n\t\t\t\t\t\t\t// column template\r\n\t\t\t\t\t\t\tif (typeof column.template !== 'undefined') {\r\n\t\t\t\t\t\t\t\tvar finalValue = '';\r\n\t\t\t\t\t\t\t\t// template string\r\n\t\t\t\t\t\t\t\tif (typeof column.template === 'string') {\r\n\t\t\t\t\t\t\t\t\tfinalValue = Plugin.dataPlaceholder(column.template, obj);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t// template callback function\r\n\t\t\t\t\t\t\t\tif (typeof column.template === 'function') {\r\n\t\t\t\t\t\t\t\t\tfinalValue = column.template(obj, tri, datatable);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tvar span = $('<span/>').append(finalValue);\r\n\t\t\t\t\t\t\t\t// insert to cell, wrap with span\r\n\t\t\t\t\t\t\t\t$(td).html(span);\r\n\r\n\t\t\t\t\t\t\t\t// set span overflow\r\n\t\t\t\t\t\t\t\tif (typeof column.overflow !== 'undefined') {\r\n\t\t\t\t\t\t\t\t\t$(span).css('overflow', column.overflow);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t// after template row callback\r\n\t\t\t\t\tvar afterTemplate = Plugin.getOption('rows.afterTemplate');\r\n\t\t\t\t\tif (typeof afterTemplate === 'function') {\r\n\t\t\t\t\t\tafterTemplate($(tr), obj, tri);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Setup extra system column properties\r\n\t\t\t * Note: selector checkbox, subtable toggle\r\n\t\t\t */\r\n\t\t\tsetupSystemColumn: function() {\r\n\t\t\t\tdatatable.dataSet = datatable.dataSet || [];\r\n\t\t\t\t// no records available\r\n\t\t\t\tif (datatable.dataSet.length === 0) return;\r\n\r\n\t\t\t\tvar columns = options.columns;\r\n\t\t\t\t$(datatable.tableBody).\r\n\t\t\t\t\tfind('.m-datatable__row').\r\n\t\t\t\t\teach(function(tri, tr) {\r\n\t\t\t\t\t\t$(tr).find('.m-datatable__cell').each(function(tdi, td) {\r\n\t\t\t\t\t\t\t// get column settings by field\r\n\t\t\t\t\t\t\tvar column = $.grep(columns, function(n, i) {\r\n\t\t\t\t\t\t\t\treturn $(td).data('field') === n.field;\r\n\t\t\t\t\t\t\t})[0];\r\n\t\t\t\t\t\t\tif (typeof column !== 'undefined') {\r\n\t\t\t\t\t\t\t\tvar value = $(td).text();\r\n\r\n\t\t\t\t\t\t\t\t// enable column selector\r\n\t\t\t\t\t\t\t\tif (typeof column.selector !== 'undefined' &&\r\n\t\t\t\t\t\t\t\t\tcolumn.selector !== false) {\r\n\t\t\t\t\t\t\t\t\t// check if checkbox exist\r\n\t\t\t\t\t\t\t\t\tif ($(td).find('.m-checkbox [type=\"checkbox\"]').length > 0) return;\r\n\t\t\t\t\t\t\t\t\t$(td).addClass('m-datatable__cell--check');\r\n\t\t\t\t\t\t\t\t\t// append checkbox\r\n\t\t\t\t\t\t\t\t\tvar chk = $('<label/>').\r\n\t\t\t\t\t\t\t\t\t\taddClass('m-checkbox m-checkbox--single').\r\n\t\t\t\t\t\t\t\t\t\tappend($('<input/>').\r\n\t\t\t\t\t\t\t\t\t\t\tattr('type', 'checkbox').\r\n\t\t\t\t\t\t\t\t\t\t\tattr('value', value).\r\n\t\t\t\t\t\t\t\t\t\t\ton('click', function() {\r\n\t\t\t\t\t\t\t\t\t\t\t\tif ($(this).is(':checked')) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// add checkbox active row class\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tPlugin.setActive(this);\r\n\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// add checkbox active row class\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tPlugin.setInactive(this);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t})).\r\n\t\t\t\t\t\t\t\t\t\tappend($('<span/>'));\r\n\r\n\t\t\t\t\t\t\t\t\t// checkbox selector has outline style\r\n\t\t\t\t\t\t\t\t\tif (typeof column.selector.class !== 'undefined') {\r\n\t\t\t\t\t\t\t\t\t\t$(chk).addClass(column.selector.class);\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t$(td).children().html(chk);\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t// enable column subtable toggle\r\n\t\t\t\t\t\t\t\tif (typeof column.subtable !== 'undefined' && column.subtable) {\r\n\t\t\t\t\t\t\t\t\t// check if subtable toggle exist\r\n\t\t\t\t\t\t\t\t\tif ($(td).find('.m-datatable__toggle-subtable').length > 0) return;\r\n\t\t\t\t\t\t\t\t\t// append subtable toggle\r\n\t\t\t\t\t\t\t\t\t$(td).\r\n\t\t\t\t\t\t\t\t\t\tchildren().\r\n\t\t\t\t\t\t\t\t\t\thtml($('<a/>').\r\n\t\t\t\t\t\t\t\t\t\t\taddClass('m-datatable__toggle-subtable').\r\n\t\t\t\t\t\t\t\t\t\t\tattr('href', '#').\r\n\t\t\t\t\t\t\t\t\t\t\tattr('data-value', value).\r\n\t\t\t\t\t\t\t\t\t\t\tappend($('<i/>').\r\n\t\t\t\t\t\t\t\t\t\t\t\taddClass(Plugin.getOption('layout.icons.rowDetail.collapse'))));\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t// init checkbox for header/footer\r\n\t\t\t\tvar initCheckbox = function(tr) {\r\n\t\t\t\t\t// get column settings by field\r\n\t\t\t\t\tvar column = $.grep(columns, function(n, i) {\r\n\t\t\t\t\t\treturn typeof n.selector !== 'undefined' && n.selector !== false;\r\n\t\t\t\t\t})[0];\r\n\r\n\t\t\t\t\tif (typeof column !== 'undefined') {\r\n\t\t\t\t\t\t// enable column selector\r\n\t\t\t\t\t\tif (typeof column.selector !== 'undefined' && column.selector !== false) {\r\n\t\t\t\t\t\t\tvar td = $(tr).find('[data-field=\"' + column.field + '\"]');\r\n\t\t\t\t\t\t\t// check if checkbox exist\r\n\t\t\t\t\t\t\tif ($(td).find('.m-checkbox [type=\"checkbox\"]').length > 0) return;\r\n\t\t\t\t\t\t\t$(td).addClass('m-datatable__cell--check');\r\n\r\n\t\t\t\t\t\t\t// todo; check all, for server pagination\r\n\t\t\t\t\t\t\t// append checkbox\r\n\t\t\t\t\t\t\tvar chk = $('<label/>').\r\n\t\t\t\t\t\t\t\taddClass('m-checkbox m-checkbox--single m-checkbox--all').\r\n\t\t\t\t\t\t\t\tappend($('<input/>').\r\n\t\t\t\t\t\t\t\t\tattr('type', 'checkbox').\r\n\t\t\t\t\t\t\t\t\ton('click', function() {\r\n\t\t\t\t\t\t\t\t\t\tif ($(this).is(':checked')) {\r\n\t\t\t\t\t\t\t\t\t\t\tPlugin.setActiveAll(true);\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\tPlugin.setActiveAll(false);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t})).\r\n\t\t\t\t\t\t\t\tappend($('<span/>'));\r\n\r\n\t\t\t\t\t\t\t// checkbox selector has outline style\r\n\t\t\t\t\t\t\tif (typeof column.selector.class !== 'undefined') {\r\n\t\t\t\t\t\t\t\t$(chk).addClass(column.selector.class);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t$(td).children().html(chk);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\tif (options.layout.header) {\r\n\t\t\t\t\tinitCheckbox($(datatable.tableHead).find('.m-datatable__row').first());\r\n\t\t\t\t}\r\n\t\t\t\tif (options.layout.footer) {\r\n\t\t\t\t\tinitCheckbox($(datatable.tableFoot).find('.m-datatable__row').first());\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Adjust width to match container size\r\n\t\t\t */\r\n\t\t\tadjustCellsWidth: function() {\r\n\t\t\t\t// get table width\r\n\t\t\t\tvar containerWidth = $(datatable.tableHead).width();\r\n\r\n\t\t\t\t// offset reserved for sort icon\r\n\t\t\t\tvar sortOffset = 20;\r\n\r\n\t\t\t\t// get total number of columns\r\n\t\t\t\tvar columns = Plugin.getOneRow(datatable.tableHead, 1).length;\r\n\t\t\t\tif (columns > 0) {\r\n\t\t\t\t\t//  remove reserved sort icon width\r\n\t\t\t\t\tcontainerWidth = containerWidth - (sortOffset * columns);\r\n\t\t\t\t\tvar minWidth = Math.floor(containerWidth / columns);\r\n\r\n\t\t\t\t\t// minimum width\r\n\t\t\t\t\tif (minWidth <= Plugin.offset) {\r\n\t\t\t\t\t\tminWidth = Plugin.offset;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t$(datatable.table).\r\n\t\t\t\t\t\tfind('.m-datatable__row').\r\n\t\t\t\t\t\tfind('.m-datatable__cell').\r\n\t\t\t\t\t\teach(function(tdi, td) {\r\n\t\t\t\t\t\t\tvar width = minWidth;\r\n\t\t\t\t\t\t\tvar dataWidth = $(td).data('width');\r\n\t\t\t\t\t\t\tif (typeof dataWidth !== 'undefined') {\r\n\t\t\t\t\t\t\t\twidth = dataWidth;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t$(td).children().css('width', width);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Adjust height to match container size\r\n\t\t\t */\r\n\t\t\tadjustCellsHeight: function() {\r\n\t\t\t\t$.each($(datatable.table).children(), function(part, tablePart) {\r\n\t\t\t\t\tvar totalRows = $(tablePart).find('.m-datatable__row').first().parent().find('.m-datatable__row').length;\r\n\t\t\t\t\tfor (var i = 1; i <= totalRows; i++) {\r\n\t\t\t\t\t\tvar rows = $(tablePart).find('.m-datatable__row:nth-child(' + i + ')');\r\n\t\t\t\t\t\tif ($(rows).length > 0) {\r\n\t\t\t\t\t\t\tvar maxHeight = Math.max.apply(null, $(rows).map(function() {\r\n\t\t\t\t\t\t\t\treturn $(this).height();\r\n\t\t\t\t\t\t\t}).get());\r\n\t\t\t\t\t\t\t$(rows).css('height', Math.ceil(parseInt(maxHeight)));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Setup table DOM and classes\r\n\t\t\t */\r\n\t\t\tsetupDOM: function(table) {\r\n\t\t\t\t// set table classes\r\n\t\t\t\t$(table).find('> thead').addClass('m-datatable__head');\r\n\t\t\t\t$(table).find('> tbody').addClass('m-datatable__body');\r\n\t\t\t\t$(table).find('> tfoot').addClass('m-datatable__foot');\r\n\t\t\t\t$(table).find('tr').addClass('m-datatable__row');\r\n\t\t\t\t$(table).find('tr > th, tr > td').addClass('m-datatable__cell');\r\n\t\t\t\t$(table).find('tr > th, tr > td').each(function(i, td) {\r\n\t\t\t\t\tif ($(td).find('span').length === 0) {\r\n\t\t\t\t\t\t$(td).wrapInner($('<span/>').css('width', Plugin.offset));\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Default scrollbar\r\n\t\t\t * @returns {{tableLocked: null, init: init, onScrolling: onScrolling}}\r\n\t\t\t */\r\n\t\t\tscrollbar: function() {\r\n\t\t\t\tvar scroll = {\r\n\t\t\t\t\tscrollable: null,\r\n\t\t\t\t\ttableLocked: null,\r\n\t\t\t\t\tmcsOptions: {\r\n\t\t\t\t\t\tscrollInertia: 0,\r\n\t\t\t\t\t\tautoDraggerLength: true,\r\n\t\t\t\t\t\tautoHideScrollbar: true,\r\n\t\t\t\t\t\tautoExpandScrollbar: false,\r\n\t\t\t\t\t\talwaysShowScrollbar: 0,\r\n\t\t\t\t\t\tmouseWheel: {\r\n\t\t\t\t\t\t\tscrollAmount: 120,\r\n\t\t\t\t\t\t\tpreventDefault: false,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tadvanced: {\r\n\t\t\t\t\t\t\tupdateOnContentResize: true,\r\n\t\t\t\t\t\t\tautoExpandHorizontalScroll: true,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\ttheme: 'minimal-dark',\r\n\t\t\t\t\t},\r\n\t\t\t\t\tinit: function() {\r\n\t\t\t\t\t\t// destroy previous custom scrollbar\r\n\t\t\t\t\t\tPlugin.destroyScroller(scroll.scrollable);\r\n\t\t\t\t\t\tvar screen = mUtil.getViewPort().width;\r\n\t\t\t\t\t\t// setup scrollable datatable\r\n\t\t\t\t\t\tif (options.layout.scroll) {\r\n\t\t\t\t\t\t\t// add scrollable datatable class\r\n\t\t\t\t\t\t\t$(datatable.wrap).addClass('m-datatable--scroll');\r\n\r\n\t\t\t\t\t\t\tvar scrollable = $(datatable.tableBody).find('.m-datatable__lock--scroll');\r\n\r\n\t\t\t\t\t\t\t// check if scrollable area have rows\r\n\t\t\t\t\t\t\tif ($(scrollable).find('.m-datatable__row').length > 0 && $(scrollable).length > 0) {\r\n\t\t\t\t\t\t\t\tscroll.scrollHead = $(datatable.tableHead).find('> .m-datatable__lock--scroll > .m-datatable__row');\r\n\t\t\t\t\t\t\t\tscroll.scrollFoot = $(datatable.tableFoot).find('> .m-datatable__lock--scroll > .m-datatable__row');\r\n\t\t\t\t\t\t\t\tscroll.tableLocked = $(datatable.tableBody).find('.m-datatable__lock:not(.m-datatable__lock--scroll)');\r\n\t\t\t\t\t\t\t\tif (screen > mUtil.getBreakpoint('lg')) {\r\n\t\t\t\t\t\t\t\t\tscroll.mCustomScrollbar(scrollable);\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tscroll.defaultScrollbar(scrollable);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else if ($(datatable.tableBody).find('.m-datatable__row').length > 0) {\r\n\t\t\t\t\t\t\t\tscroll.scrollHead = $(datatable.tableHead).find('> .m-datatable__row');\r\n\t\t\t\t\t\t\t\tscroll.scrollFoot = $(datatable.tableFoot).find('> .m-datatable__row');\r\n\t\t\t\t\t\t\t\tif (screen > mUtil.getBreakpoint('lg')) {\r\n\t\t\t\t\t\t\t\t\tscroll.mCustomScrollbar(datatable.tableBody);\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tscroll.defaultScrollbar(datatable.tableBody);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t$(datatable.table).\r\n\t\t\t\t\t\t\t\t// css('height', 'auto').\r\n\t\t\t\t\t\t\t\tcss('overflow-x', 'auto');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tdefaultScrollbar: function(scrollable) {\r\n\t\t\t\t\t\t$(scrollable).\r\n\t\t\t\t\t\t\tcss('overflow', 'auto').\r\n\t\t\t\t\t\t\tcss('max-height', Plugin.getOption('layout.height')).\r\n\t\t\t\t\t\t\ton('scroll', scroll.onScrolling);\r\n\t\t\t\t\t},\r\n\t\t\t\t\tonScrolling: function(e) {\r\n\t\t\t\t\t\tvar left = $(this).scrollLeft();\r\n\t\t\t\t\t\tvar top = $(this).scrollTop();\r\n\t\t\t\t\t\t$(scroll.scrollHead).css('left', -left);\r\n\t\t\t\t\t\t$(scroll.scrollFoot).css('left', -left);\r\n\t\t\t\t\t\t$(scroll.tableLocked).each(function(i, table) {\r\n\t\t\t\t\t\t\t$(table).css('top', -top);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t},\r\n\t\t\t\t\tmCustomScrollbar: function(scrollable) {\r\n\t\t\t\t\t\tscroll.scrollable = scrollable;\r\n\t\t\t\t\t\tvar height = Plugin.getOption('layout.height');\r\n\t\t\t\t\t\t// vertical and horizontal scrollbar\r\n\t\t\t\t\t\tvar axis = 'xy';\r\n\t\t\t\t\t\tif (height === null) {\r\n\t\t\t\t\t\t\t// horizontal scrollbar\r\n\t\t\t\t\t\t\taxis = 'x';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar mcsOptions = $.extend({}, scroll.mcsOptions, {\r\n\t\t\t\t\t\t\taxis: axis,\r\n\t\t\t\t\t\t\tsetHeight: $(datatable.tableBody).height(),\r\n\t\t\t\t\t\t\tcallbacks: {\r\n\t\t\t\t\t\t\t\twhileScrolling: function() {\r\n\t\t\t\t\t\t\t\t\tvar mcs = this.mcs;\r\n\t\t\t\t\t\t\t\t\t$(scroll.scrollHead).css('left', mcs.left);\r\n\t\t\t\t\t\t\t\t\t$(scroll.scrollFoot).css('left', mcs.left);\r\n\t\t\t\t\t\t\t\t\t$(scroll.tableLocked).each(function(i, table) {\r\n\t\t\t\t\t\t\t\t\t\t$(table).css('top', mcs.top);\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t// stop hover when scrolling\r\n\t\t\t\t\t\t\t\t\tclearTimeout(Plugin.hoverTimer);\r\n\t\t\t\t\t\t\t\t\tPlugin.isScrolling = true;\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tif (Plugin.getOption('layout.smoothScroll.scrollbarShown') === true) {\r\n\t\t\t\t\t\t\t$(scrollable).attr('data-scrollbar-shown', 'true');\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// create a new instance for table body with scrollbar\r\n\t\t\t\t\t\tPlugin.mCustomScrollbar(scrollable, mcsOptions);\r\n\t\t\t\t\t},\r\n\t\t\t\t};\r\n\t\t\t\tscroll.init();\r\n\t\t\t\treturn scroll;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Init custom scrollbar and reset position\r\n\t\t\t * @param element\r\n\t\t\t * @param options\r\n\t\t\t */\r\n\t\t\tmCustomScrollbar: function(element, options) {\r\n\t\t\t\t$(datatable.tableBody).css('overflow', '');\r\n\t\t\t\t// check if any custom scrollbar exist in the element\r\n\t\t\t\tPlugin.destroyScroller($(datatable.table).find('.mCustomScrollbar'));\r\n\t\t\t\t$(element).mCustomScrollbar(options);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Set column title from options.columns settings\r\n\t\t\t */\r\n\t\t\tsetHeadTitle: function(tablePart) {\r\n\t\t\t\tif (typeof tablePart === 'undefined') tablePart = datatable.tableHead;\r\n\t\t\t\tvar columns = options.columns;\r\n\t\t\t\tvar row = $(tablePart).find('.m-datatable__row');\r\n\t\t\t\tvar ths = $(tablePart).find('.m-datatable__cell');\r\n\t\t\t\tif ($(row).length === 0) {\r\n\t\t\t\t\trow = $('<tr/>').appendTo(tablePart);\r\n\t\t\t\t}\r\n\t\t\t\t$.each(columns, function(i, column) {\r\n\t\t\t\t\tvar th = $(ths).eq(i);\r\n\t\t\t\t\tif ($(th).length === 0) {\r\n\t\t\t\t\t\tth = $('<th/>').appendTo(row);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// set column title\r\n\t\t\t\t\tif (typeof column['title'] !== 'undefined') {\r\n\t\t\t\t\t\t$(th).\r\n\t\t\t\t\t\t\thtml(column['title']).\r\n\t\t\t\t\t\t\tattr('data-field', column.field).\r\n\t\t\t\t\t\t\tdata(column);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// apply text align to thead/tfoot\r\n\t\t\t\t\tif (typeof column.textAlign !== 'undefined') {\r\n\t\t\t\t\t\tvar align = typeof datatable.textAlign[column.textAlign] !==\r\n\t\t\t\t\t\t'undefined' ? datatable.textAlign[column.textAlign] : '';\r\n\t\t\t\t\t\t$(th).addClass(align);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tPlugin.setupDOM(tablePart);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Initiate to get remote or local data via ajax\r\n\t\t\t */\r\n\t\t\tdataRender: function(action) {\r\n\t\t\t\t$(datatable.table).\r\n\t\t\t\t\tsiblings('.m-datatable__pager').\r\n\t\t\t\t\tremoveClass('m-datatable--paging-loaded');\r\n\r\n\t\t\t\tvar buildMeta = function() {\r\n\t\t\t\t\tdatatable.dataSet = datatable.dataSet || [];\r\n\t\t\t\t\tPlugin.localDataUpdate();\r\n\t\t\t\t\t// local pagination meta\r\n\t\t\t\t\tvar meta = Plugin.getDataSourceParam('pagination');\r\n\t\t\t\t\tif (meta.perpage === 0) {\r\n\t\t\t\t\t\tmeta.perpage = options.data.pageSize || 10;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tmeta.total = datatable.dataSet.length;\r\n\t\t\t\t\tvar start = Math.max(meta.perpage * (meta.page - 1), 0);\r\n\t\t\t\t\tvar end = Math.min(start + meta.perpage, meta.total);\r\n\t\t\t\t\tdatatable.dataSet = $(datatable.dataSet).slice(start, end);\r\n\t\t\t\t\treturn meta;\r\n\t\t\t\t};\r\n\r\n\t\t\t\tvar afterGetData = function(result) {\r\n\t\t\t\t\tvar localPagingCallback = function(ctx, meta) {\r\n\t\t\t\t\t\tif (!$(ctx.pager).hasClass('m-datatable--paging-loaded')) {\r\n\t\t\t\t\t\t\t$(ctx.pager).remove();\r\n\t\t\t\t\t\t\tctx.init(meta);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t$(ctx.pager).off().on('m-datatable--on-goto-page', function(e) {\r\n\t\t\t\t\t\t\t$(ctx.pager).remove();\r\n\t\t\t\t\t\t\tctx.init(meta);\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tvar start = Math.max(meta.perpage * (meta.page - 1), 0);\r\n\t\t\t\t\t\tvar end = Math.min(start + meta.perpage, meta.total);\r\n\r\n\t\t\t\t\t\tPlugin.localDataUpdate();\r\n\t\t\t\t\t\tdatatable.dataSet = $(datatable.dataSet).slice(start, end);\r\n\r\n\t\t\t\t\t\t// insert data into table content\r\n\t\t\t\t\t\tPlugin.insertData();\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\t$(datatable.wrap).removeClass('m-datatable--error');\r\n\t\t\t\t\t// pagination enabled\r\n\t\t\t\t\tif (options.pagination) {\r\n\t\t\t\t\t\tif (options.data.serverPaging && options.data.type !== 'local') {\r\n\t\t\t\t\t\t\t// server pagination\r\n\t\t\t\t\t\t\tvar serverMeta = Plugin.getObject('meta', result || null);\r\n\t\t\t\t\t\t\tif (serverMeta !== null) {\r\n\t\t\t\t\t\t\t\tPlugin.paging(serverMeta);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t// no meta object from server response, fallback to local pagination\r\n\t\t\t\t\t\t\t\tPlugin.paging(buildMeta(), localPagingCallback);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// local pagination can be used by remote data also\r\n\t\t\t\t\t\t\tPlugin.paging(buildMeta(), localPagingCallback);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// pagination is disabled\r\n\t\t\t\t\t\tPlugin.localDataUpdate();\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// insert data into table content\r\n\t\t\t\t\tPlugin.insertData();\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// get local datasource\r\n\t\t\t\tif (options.data.type === 'local'\r\n\t\t\t\t\t// for remote json datasource\r\n\t\t\t\t\t|| typeof options.data.source.read === 'undefined' &&\r\n\t\t\t\t\tdatatable.dataSet !== null\r\n\t\t\t\t\t// for remote datasource, server sorting is disabled and data already received from remote\r\n\t\t\t\t\t|| options.data.serverSorting === false && action === 'sort'\r\n\t\t\t\t) {\r\n\t\t\t\t\tafterGetData();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// getting data from remote only\r\n\t\t\t\tPlugin.getData().done(afterGetData);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Process ajax data\r\n\t\t\t */\r\n\t\t\tinsertData: function() {\r\n\t\t\t\tdatatable.dataSet = datatable.dataSet || [];\r\n\t\t\t\tvar params = Plugin.getDataSourceParam();\r\n\r\n\t\t\t\t// todo; fix performance\r\n\t\t\t\tvar tableBody = $('<tbody/>').\r\n\t\t\t\t\taddClass('m-datatable__body').\r\n\t\t\t\t\tcss('visibility', 'hidden');\r\n\t\t\t\tvar colLength = options.columns.length;\r\n\r\n\t\t\t\t$.each(datatable.dataSet, function(i, row) {\r\n\t\t\t\t\t// keep data object to row\r\n\t\t\t\t\tvar tr = $('<tr/>').attr('data-row', i).data('obj', row);\r\n\t\t\t\t\tvar i = 0;\r\n\t\t\t\t\tvar tds = [];\r\n\t\t\t\t\tfor (var a = 0; a < colLength; a += 1) {\r\n\t\t\t\t\t\tvar column = options.columns[a];\r\n\t\t\t\t\t\tvar classes = [];\r\n\t\t\t\t\t\t// add sorted class to cells\r\n\t\t\t\t\t\tif (Plugin.getObject('sort.field', params) === column.field) {\r\n\t\t\t\t\t\t\tclasses.push('m-datatable__cell--sorted');\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// apply text align\r\n\t\t\t\t\t\tif (typeof column.textAlign !== 'undefined') {\r\n\t\t\t\t\t\t\tvar align = typeof datatable.textAlign[column.textAlign] !==\r\n\t\t\t\t\t\t\t'undefined' ? datatable.textAlign[column.textAlign] : '';\r\n\t\t\t\t\t\t\tclasses.push(align);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\ttds[i++] = '<td data-field=\"' + column.field + '\"';\r\n\t\t\t\t\t\ttds[i++] = ' class=\"' + classes.join(' ') + '\"';\r\n\t\t\t\t\t\ttds[i++] = '>';\r\n\t\t\t\t\t\ttds[i++] = Plugin.getObject(column.field, row);\r\n\t\t\t\t\t\ttds[i++] = '</td>';\r\n\t\t\t\t\t}\r\n\t\t\t\t\t$(tr).append(tds.join(''));\r\n\t\t\t\t\t$(tableBody).append(tr);\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// display no records message\r\n\t\t\t\tif (datatable.dataSet.length === 0) {\r\n\t\t\t\t\tPlugin.destroyScroller($(datatable.table).find('.mCustomScrollbar'));\r\n\t\t\t\t\t$(tableBody).html($('<span/>').\r\n\t\t\t\t\t\taddClass('m-datatable--error').\r\n\t\t\t\t\t\thtml(Plugin.getOption('translate.records.noRecords')));\r\n\t\t\t\t\t$(datatable.wrap).addClass('m-datatable--error m-datatable--loaded');\r\n\t\t\t\t\tPlugin.spinnerCallback(false);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// replace existing table body\r\n\t\t\t\t$(datatable.tableBody).replaceWith(tableBody);\r\n\t\t\t\tdatatable.tableBody = tableBody;\r\n\r\n\t\t\t\t// layout update\r\n\t\t\t\tPlugin.setupDOM(datatable.table);\r\n\t\t\t\tPlugin.setupCellField([datatable.tableBody]);\r\n\t\t\t\tPlugin.setupTemplateCell(datatable.tableBody);\r\n\t\t\t\tPlugin.layoutUpdate();\r\n\t\t\t},\r\n\r\n\t\t\tupdateTableComponents: function() {\r\n\t\t\t\tdatatable.tableHead = $(datatable.table).children('thead');\r\n\t\t\t\tdatatable.tableBody = $(datatable.table).children('tbody');\r\n\t\t\t\tdatatable.tableFoot = $(datatable.table).children('tfoot');\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Call ajax for raw JSON data\r\n\t\t\t */\r\n\t\t\tgetData: function() {\r\n\t\t\t\tPlugin.spinnerCallback(true);\r\n\r\n\t\t\t\tvar ajaxParams = {\r\n\t\t\t\t\tdataType: 'json',\r\n\t\t\t\t\tmethod: 'GET',\r\n\t\t\t\t\tdata: {},\r\n\t\t\t\t\ttimeout: 30000,\r\n\t\t\t\t};\r\n\r\n\t\t\t\tif (options.data.type === 'local') {\r\n\t\t\t\t\tajaxParams.url = options.data.source;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (options.data.type === 'remote') {\r\n\t\t\t\t\tajaxParams.url = Plugin.getOption('data.source.read.url');\r\n\t\t\t\t\tif (typeof ajaxParams.url !== 'string') ajaxParams.url = Plugin.getOption('data.source.read');\r\n\t\t\t\t\tif (typeof ajaxParams.url !== 'string') ajaxParams.url = Plugin.getOption('data.source');\r\n\t\t\t\t\tajaxParams.headers = Plugin.getOption('data.source.read.headers');\r\n\t\t\t\t\tajaxParams.method = Plugin.getOption('data.source.read.method') || 'POST';\r\n\r\n\t\t\t\t\tvar data = Plugin.getDataSourceParam();\r\n\t\t\t\t\t// remove if server params is not enabled\r\n\t\t\t\t\tif (!Plugin.getOption('data.serverPaging')) {\r\n\t\t\t\t\t\tdelete data['pagination'];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!Plugin.getOption('data.serverSorting')) {\r\n\t\t\t\t\t\tdelete data['sort'];\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// deprecated in v5.0.7\r\n\t\t\t\t\tajaxParams.data['datatable'] = data;\r\n\t\t\t\t\tajaxParams.data = $.extend(true, ajaxParams.data, data, Plugin.getOption('data.source.read.params'));\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn $.ajax(ajaxParams).done(function(response, textStatus, jqXHR) {\r\n\t\t\t\t\tdatatable.lastResponse = response;\r\n\t\t\t\t\t// extendible data map callback for custom datasource\r\n\t\t\t\t\tdatatable.dataSet = datatable.originalDataSet = Plugin.dataMapCallback(response);\r\n\t\t\t\t\tPlugin.setAutoColumns();\r\n\t\t\t\t\t$(datatable).trigger('m-datatable--on-ajax-done', [datatable.dataSet]);\r\n\t\t\t\t}).fail(function(jqXHR, textStatus, errorThrown) {\r\n\t\t\t\t\tPlugin.destroyScroller($(datatable.table).find('.mCustomScrollbar'));\r\n\t\t\t\t\t$(datatable).trigger('m-datatable--on-ajax-fail', [jqXHR]);\r\n\t\t\t\t\t$(datatable.tableBody).html($('<span/>').\r\n\t\t\t\t\t\taddClass('m-datatable--error').\r\n\t\t\t\t\t\thtml(Plugin.getOption('translate.records.noRecords')));\r\n\t\t\t\t\t$(datatable.wrap).addClass('m-datatable--error m-datatable--loaded');\r\n\t\t\t\t\tPlugin.spinnerCallback(false);\r\n\t\t\t\t}).always(function() {\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Pagination object\r\n\t\t\t * @param meta if null, local pagination, otherwise remote pagination\r\n\t\t\t * @param callback for update data when navigating page\r\n\t\t\t */\r\n\t\t\tpaging: function(meta, callback) {\r\n\t\t\t\tvar pg = {\r\n\t\t\t\t\tmeta: null,\r\n\t\t\t\t\tpager: null,\r\n\t\t\t\t\tpaginateEvent: null,\r\n\t\t\t\t\tpagerLayout: {pagination: null, info: null},\r\n\t\t\t\t\tcallback: null,\r\n\t\t\t\t\tinit: function(meta) {\r\n\t\t\t\t\t\tpg.meta = meta;\r\n\r\n\t\t\t\t\t\t// todo; if meta object not exist will cause error\r\n\t\t\t\t\t\t// always recount total pages\r\n\t\t\t\t\t\tpg.meta.pages = Math.max(Math.ceil(pg.meta.total / pg.meta.perpage), 1);\r\n\r\n\t\t\t\t\t\t// current page must be not over than total pages\r\n\t\t\t\t\t\tif (pg.meta.page > pg.meta.pages) pg.meta.page = pg.meta.pages;\r\n\r\n\t\t\t\t\t\t// set unique event name between tables\r\n\t\t\t\t\t\tpg.paginateEvent = Plugin.getTablePrefix();\r\n\r\n\t\t\t\t\t\tpg.pager = $(datatable.table).siblings('.m-datatable__pager');\r\n\t\t\t\t\t\tif ($(pg.pager).hasClass('m-datatable--paging-loaded')) return;\r\n\r\n\t\t\t\t\t\t// if class .m-datatable--paging-loaded not exist, recreate pagination\r\n\t\t\t\t\t\t$(pg.pager).remove();\r\n\r\n\t\t\t\t\t\t// if no pages available\r\n\t\t\t\t\t\tif (pg.meta.pages === 0) return;\r\n\r\n\t\t\t\t\t\t// update datasource params\r\n\t\t\t\t\t\tPlugin.setDataSourceParam('pagination', {\r\n\t\t\t\t\t\t\tpage: pg.meta.page,\r\n\t\t\t\t\t\t\tpages: pg.meta.pages,\r\n\t\t\t\t\t\t\tperpage: pg.meta.perpage,\r\n\t\t\t\t\t\t\ttotal: pg.meta.total,\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t// default callback function, contains remote pagination handler\r\n\t\t\t\t\t\tpg.callback = pg.serverCallback;\r\n\t\t\t\t\t\t// custom callback function\r\n\t\t\t\t\t\tif (typeof callback === 'function') pg.callback = callback;\r\n\r\n\t\t\t\t\t\tpg.addPaginateEvent();\r\n\t\t\t\t\t\tpg.populate();\r\n\r\n\t\t\t\t\t\tpg.meta.page = Math.max(pg.meta.page || 1, pg.meta.page);\r\n\r\n\t\t\t\t\t\t$(datatable).trigger(pg.paginateEvent, pg.meta);\r\n\r\n\t\t\t\t\t\tpg.pagingBreakpoint.call();\r\n\t\t\t\t\t\t$(window).resize(pg.pagingBreakpoint);\r\n\t\t\t\t\t},\r\n\t\t\t\t\tserverCallback: function(ctx, meta) {\r\n\t\t\t\t\t\tPlugin.dataRender();\r\n\t\t\t\t\t},\r\n\t\t\t\t\tpopulate: function() {\r\n\t\t\t\t\t\tvar icons = Plugin.getOption('layout.icons.pagination');\r\n\t\t\t\t\t\tvar title = Plugin.getOption('translate.toolbar.pagination.items.default');\r\n\t\t\t\t\t\t// pager root element\r\n\t\t\t\t\t\tpg.pager = $('<div/>').addClass('m-datatable__pager m-datatable--paging-loaded clearfix');\r\n\t\t\t\t\t\t// numbering links\r\n\t\t\t\t\t\tvar pagerNumber = $('<ul/>').addClass('m-datatable__pager-nav');\r\n\t\t\t\t\t\tpg.pagerLayout['pagination'] = pagerNumber;\r\n\r\n\t\t\t\t\t\t// pager first/previous button\r\n\t\t\t\t\t\t$('<li/>').\r\n\t\t\t\t\t\t\tappend($('<a/>').\r\n\t\t\t\t\t\t\t\tattr('title', title.first).\r\n\t\t\t\t\t\t\t\taddClass('m-datatable__pager-link m-datatable__pager-link--first').\r\n\t\t\t\t\t\t\t\tappend($('<i/>').addClass(icons.first)).\r\n\t\t\t\t\t\t\t\ton('click', pg.gotoMorePage).\r\n\t\t\t\t\t\t\t\tattr('data-page', 1)).\r\n\t\t\t\t\t\t\tappendTo(pagerNumber);\r\n\t\t\t\t\t\t$('<li/>').\r\n\t\t\t\t\t\t\tappend($('<a/>').\r\n\t\t\t\t\t\t\t\tattr('title', title.prev).\r\n\t\t\t\t\t\t\t\taddClass('m-datatable__pager-link m-datatable__pager-link--prev').\r\n\t\t\t\t\t\t\t\tappend($('<i/>').addClass(icons.prev)).\r\n\t\t\t\t\t\t\t\ton('click', pg.gotoMorePage)).\r\n\t\t\t\t\t\t\tappendTo(pagerNumber);\r\n\r\n\t\t\t\t\t\t// more previous pages\r\n\t\t\t\t\t\t$('<li/>').\r\n\t\t\t\t\t\t\tappend($('<a/>').\r\n\t\t\t\t\t\t\t\tattr('title', title.more).\r\n\t\t\t\t\t\t\t\taddClass('m-datatable__pager-link m-datatable__pager-link--more-prev').\r\n\t\t\t\t\t\t\t\thtml($('<i/>').addClass(icons.more)).\r\n\t\t\t\t\t\t\t\ton('click', pg.gotoMorePage)).\r\n\t\t\t\t\t\t\tappendTo(pagerNumber);\r\n\r\n\t\t\t\t\t\t$('<li/>').\r\n\t\t\t\t\t\t\tappend($('<input/>').\r\n\t\t\t\t\t\t\t\tattr('type', 'text').\r\n\t\t\t\t\t\t\t\taddClass('m-pager-input form-control').\r\n\t\t\t\t\t\t\t\tattr('title', title.input).\r\n\t\t\t\t\t\t\t\ton('keyup', function() {\r\n\t\t\t\t\t\t\t\t\t// on keyup update [data-page]\r\n\t\t\t\t\t\t\t\t\t$(this).attr('data-page', Math.abs($(this).val()));\r\n\t\t\t\t\t\t\t\t}).\r\n\t\t\t\t\t\t\t\ton('keypress', function(e) {\r\n\t\t\t\t\t\t\t\t\t// on keypressed enter button\r\n\t\t\t\t\t\t\t\t\tif (e.which === 13) pg.gotoMorePage(e);\r\n\t\t\t\t\t\t\t\t})).\r\n\t\t\t\t\t\t\tappendTo(pagerNumber);\r\n\r\n\t\t\t\t\t\tvar pagesNumber = Plugin.getOption('toolbar.items.pagination.pages.desktop.pagesNumber');\r\n\t\t\t\t\t\tvar end = Math.ceil(pg.meta.page / pagesNumber) * pagesNumber;\r\n\t\t\t\t\t\tvar start = end - pagesNumber;\r\n\t\t\t\t\t\tif (end > pg.meta.pages) {\r\n\t\t\t\t\t\t\tend = pg.meta.pages;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfor (var x = start; x < end; x++) {\r\n\t\t\t\t\t\t\tvar pageNumber = x + 1;\r\n\t\t\t\t\t\t\t$('<li/>').\r\n\t\t\t\t\t\t\t\tappend($('<a/>').\r\n\t\t\t\t\t\t\t\t\taddClass('m-datatable__pager-link m-datatable__pager-link-number').\r\n\t\t\t\t\t\t\t\t\ttext(pageNumber).\r\n\t\t\t\t\t\t\t\t\tattr('data-page', pageNumber).\r\n\t\t\t\t\t\t\t\t\tattr('title', pageNumber).\r\n\t\t\t\t\t\t\t\t\ton('click', pg.gotoPage)).\r\n\t\t\t\t\t\t\t\tappendTo(pagerNumber);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// more next pages\r\n\t\t\t\t\t\t$('<li/>').\r\n\t\t\t\t\t\t\tappend($('<a/>').\r\n\t\t\t\t\t\t\t\tattr('title', title.more).\r\n\t\t\t\t\t\t\t\taddClass('m-datatable__pager-link m-datatable__pager-link--more-next').\r\n\t\t\t\t\t\t\t\thtml($('<i/>').addClass(icons.more)).\r\n\t\t\t\t\t\t\t\ton('click', pg.gotoMorePage)).\r\n\t\t\t\t\t\t\tappendTo(pagerNumber);\r\n\r\n\t\t\t\t\t\t// pager next/last button\r\n\t\t\t\t\t\t$('<li/>').\r\n\t\t\t\t\t\t\tappend($('<a/>').\r\n\t\t\t\t\t\t\t\tattr('title', title.next).\r\n\t\t\t\t\t\t\t\taddClass('m-datatable__pager-link m-datatable__pager-link--next').\r\n\t\t\t\t\t\t\t\tappend($('<i/>').addClass(icons.next)).\r\n\t\t\t\t\t\t\t\ton('click', pg.gotoMorePage)).\r\n\t\t\t\t\t\t\tappendTo(pagerNumber);\r\n\t\t\t\t\t\t$('<li/>').\r\n\t\t\t\t\t\t\tappend($('<a/>').\r\n\t\t\t\t\t\t\t\tattr('title', title.last).\r\n\t\t\t\t\t\t\t\taddClass('m-datatable__pager-link m-datatable__pager-link--last').\r\n\t\t\t\t\t\t\t\tappend($('<i/>').addClass(icons.last)).\r\n\t\t\t\t\t\t\t\ton('click', pg.gotoMorePage).\r\n\t\t\t\t\t\t\t\tattr('data-page', pg.meta.pages)).\r\n\t\t\t\t\t\t\tappendTo(pagerNumber);\r\n\r\n\t\t\t\t\t\t// page info\r\n\t\t\t\t\t\tif (Plugin.getOption('toolbar.items.info')) {\r\n\t\t\t\t\t\t\tpg.pagerLayout['info'] = $('<div/>').\r\n\t\t\t\t\t\t\t\taddClass('m-datatable__pager-info').\r\n\t\t\t\t\t\t\t\tappend($('<span/>').addClass('m-datatable__pager-detail'));\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t$.each(Plugin.getOption('toolbar.layout'), function(i, layout) {\r\n\t\t\t\t\t\t\t$(pg.pagerLayout[layout]).appendTo(pg.pager);\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t// page size select\r\n\t\t\t\t\t\tvar pageSizeSelect = $('<select/>').\r\n\t\t\t\t\t\t\taddClass('selectpicker m-datatable__pager-size').\r\n\t\t\t\t\t\t\tattr('title', Plugin.getOption('translate.toolbar.pagination.items.default.select')).\r\n\t\t\t\t\t\t\tattr('data-width', '70px').\r\n\t\t\t\t\t\t\tval(pg.meta.perpage).\r\n\t\t\t\t\t\t\ton('change', pg.updatePerpage).\r\n\t\t\t\t\t\t\tprependTo(pg.pagerLayout['info']);\r\n\r\n\t\t\t\t\t\tvar pageSizes = Plugin.getOption('toolbar.items.pagination.pageSizeSelect');\r\n\t\t\t\t\t\t// default value here, to fix override option by user\r\n\t\t\t\t\t\tif (pageSizes.length == 0) pageSizes = [10, 20, 30, 50, 100];\r\n\t\t\t\t\t\t$.each(pageSizes, function(i, size) {\r\n\t\t\t\t\t\t\tvar display = size;\r\n\t\t\t\t\t\t\tif (size === -1) display = 'All';\r\n\t\t\t\t\t\t\t$('<option/>').\r\n\t\t\t\t\t\t\t\tattr('value', size).\r\n\t\t\t\t\t\t\t\thtml(display).\r\n\t\t\t\t\t\t\t\tappendTo(pageSizeSelect);\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t// init selectpicker to dropdown\r\n\t\t\t\t\t\t$(datatable).ready(function() {\r\n\t\t\t\t\t\t\t$('.selectpicker').\r\n\t\t\t\t\t\t\t\tselectpicker().\r\n\t\t\t\t\t\t\t\tsiblings('.dropdown-toggle').\r\n\t\t\t\t\t\t\t\tattr('title', Plugin.getOption(\r\n\t\t\t\t\t\t\t\t\t'translate.toolbar.pagination.items.default.select'));\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tpg.paste();\r\n\t\t\t\t\t},\r\n\t\t\t\t\tpaste: function() {\r\n\t\t\t\t\t\t// insert pagination based on placement position, top|bottom\r\n\t\t\t\t\t\t$.each($.unique(Plugin.getOption('toolbar.placement')),\r\n\t\t\t\t\t\t\tfunction(i, position) {\r\n\t\t\t\t\t\t\t\tif (position === 'bottom') {\r\n\t\t\t\t\t\t\t\t\t$(pg.pager).clone(true).insertAfter(datatable.table);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (position === 'top') {\r\n\t\t\t\t\t\t\t\t\t// pager top need some extra space\r\n\t\t\t\t\t\t\t\t\t$(pg.pager).\r\n\t\t\t\t\t\t\t\t\t\tclone(true).\r\n\t\t\t\t\t\t\t\t\t\taddClass('m-datatable__pager--top').\r\n\t\t\t\t\t\t\t\t\t\tinsertBefore(datatable.table);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t},\r\n\t\t\t\t\tgotoMorePage: function(e) {\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t// $(this) is a link of .m-datatable__pager-link\r\n\r\n\t\t\t\t\t\tif ($(this).attr('disabled') === 'disabled') return false;\r\n\r\n\t\t\t\t\t\tvar page = $(this).attr('data-page');\r\n\r\n\t\t\t\t\t\t// event from text input\r\n\t\t\t\t\t\tif (typeof page === 'undefined') {\r\n\t\t\t\t\t\t\tpage = $(e.target).attr('data-page');\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tpg.openPage(parseInt(page));\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t},\r\n\t\t\t\t\tgotoPage: function(e) {\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t// prevent from click same page number\r\n\t\t\t\t\t\tif ($(this).hasClass('m-datatable__pager-link--active')) return;\r\n\r\n\t\t\t\t\t\tpg.openPage(parseInt($(this).data('page')));\r\n\t\t\t\t\t},\r\n\t\t\t\t\topenPage: function(page) {\r\n\t\t\t\t\t\t// currentPage is 1-based index\r\n\t\t\t\t\t\tpg.meta.page = parseInt(page);\r\n\r\n\t\t\t\t\t\t$(datatable).trigger(pg.paginateEvent, pg.meta);\r\n\t\t\t\t\t\tpg.callback(pg, pg.meta);\r\n\r\n\t\t\t\t\t\t// update page callback function\r\n\t\t\t\t\t\t$(pg.pager).trigger('m-datatable--on-goto-page', pg.meta);\r\n\t\t\t\t\t},\r\n\t\t\t\t\tupdatePerpage: function(e) {\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\tif (Plugin.getOption('layout.height') === null) {\r\n\t\t\t\t\t\t\t// fix white space, when perpage is set from many records to less records\r\n\t\t\t\t\t\t\t$('html, body').animate({scrollTop: $(datatable).position().top});\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tpg.pager = $(datatable.table).\r\n\t\t\t\t\t\t\tsiblings('.m-datatable__pager').\r\n\t\t\t\t\t\t\tremoveClass('m-datatable--paging-loaded');\r\n\r\n\t\t\t\t\t\t// on change select page size\r\n\t\t\t\t\t\tif (e.originalEvent) {\r\n\t\t\t\t\t\t\tpg.meta.perpage = parseInt($(this).val());\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t$(pg.pager).\r\n\t\t\t\t\t\t\tfind('select.m-datatable__pager-size').\r\n\t\t\t\t\t\t\tval(pg.meta.perpage).\r\n\t\t\t\t\t\t\tattr('data-selected', pg.meta.perpage);\r\n\r\n\t\t\t\t\t\t// update datasource params\r\n\t\t\t\t\t\tPlugin.setDataSourceParam('pagination', {\r\n\t\t\t\t\t\t\tpage: pg.meta.page,\r\n\t\t\t\t\t\t\tpages: pg.meta.pages,\r\n\t\t\t\t\t\t\tperpage: pg.meta.perpage,\r\n\t\t\t\t\t\t\ttotal: pg.meta.total,\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t// update page callback function\r\n\t\t\t\t\t\t$(pg.pager).trigger('m-datatable--on-update-perpage', pg.meta);\r\n\t\t\t\t\t\t$(datatable).trigger(pg.paginateEvent, pg.meta);\r\n\t\t\t\t\t\tpg.callback(pg, pg.meta);\r\n\r\n\t\t\t\t\t\t// update pagination info\r\n\t\t\t\t\t\tpg.updateInfo.call();\r\n\t\t\t\t\t},\r\n\t\t\t\t\taddPaginateEvent: function(e) {\r\n\t\t\t\t\t\t// pagination event\r\n\t\t\t\t\t\t$(datatable).\r\n\t\t\t\t\t\t\toff(pg.paginateEvent).\r\n\t\t\t\t\t\t\ton(pg.paginateEvent, function(e, meta) {\r\n\t\t\t\t\t\t\t\tPlugin.spinnerCallback(true);\r\n\r\n\t\t\t\t\t\t\t\tpg.pager = $(datatable.table).siblings('.m-datatable__pager');\r\n\t\t\t\t\t\t\t\tvar pagerNumber = $(pg.pager).find('.m-datatable__pager-nav');\r\n\r\n\t\t\t\t\t\t\t\t// set sync active page class\r\n\t\t\t\t\t\t\t\t$(pagerNumber).\r\n\t\t\t\t\t\t\t\t\tfind('.m-datatable__pager-link--active').\r\n\t\t\t\t\t\t\t\t\tremoveClass('m-datatable__pager-link--active');\r\n\t\t\t\t\t\t\t\t$(pagerNumber).\r\n\t\t\t\t\t\t\t\t\tfind('.m-datatable__pager-link-number[data-page=\"' + meta.page + '\"]').\r\n\t\t\t\t\t\t\t\t\taddClass('m-datatable__pager-link--active');\r\n\r\n\t\t\t\t\t\t\t\t// set next and previous link page number\r\n\t\t\t\t\t\t\t\t$(pagerNumber).\r\n\t\t\t\t\t\t\t\t\tfind('.m-datatable__pager-link--prev').\r\n\t\t\t\t\t\t\t\t\tattr('data-page', Math.max(meta.page - 1, 1));\r\n\t\t\t\t\t\t\t\t$(pagerNumber).\r\n\t\t\t\t\t\t\t\t\tfind('.m-datatable__pager-link--next').\r\n\t\t\t\t\t\t\t\t\tattr('data-page', Math.min(meta.page + 1, meta.pages));\r\n\r\n\t\t\t\t\t\t\t\t// current page input value sync\r\n\t\t\t\t\t\t\t\t$(pg.pager).each(function() {\r\n\t\t\t\t\t\t\t\t\t$(this).\r\n\t\t\t\t\t\t\t\t\t\tfind('.m-pager-input[type=\"text\"]').\r\n\t\t\t\t\t\t\t\t\t\tprop('value', meta.page);\r\n\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\t$(pg.pager).find('.m-datatable__pager-nav').show();\r\n\t\t\t\t\t\t\t\tif (meta.pages <= 1) {\r\n\t\t\t\t\t\t\t\t\t// hide pager if has 1 page\r\n\t\t\t\t\t\t\t\t\t$(pg.pager).find('.m-datatable__pager-nav').hide();\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t// update datasource params\r\n\t\t\t\t\t\t\t\tPlugin.setDataSourceParam('pagination', {\r\n\t\t\t\t\t\t\t\t\tpage: pg.meta.page,\r\n\t\t\t\t\t\t\t\t\tpages: pg.meta.pages,\r\n\t\t\t\t\t\t\t\t\tperpage: pg.meta.perpage,\r\n\t\t\t\t\t\t\t\t\ttotal: pg.meta.total,\r\n\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\t$(pg.pager).\r\n\t\t\t\t\t\t\t\t\tfind('select.m-datatable__pager-size').\r\n\t\t\t\t\t\t\t\t\tval(meta.perpage).\r\n\t\t\t\t\t\t\t\t\tattr('data-selected', meta.perpage);\r\n\r\n\t\t\t\t\t\t\t\t// clear active rows\r\n\t\t\t\t\t\t\t\t$(datatable.table).\r\n\t\t\t\t\t\t\t\t\tfind('.m-checkbox > [type=\"checkbox\"]').\r\n\t\t\t\t\t\t\t\t\tprop('checked', false);\r\n\t\t\t\t\t\t\t\t$(datatable.table).\r\n\t\t\t\t\t\t\t\t\tfind('.m-datatable__row--active').\r\n\t\t\t\t\t\t\t\t\tremoveClass('m-datatable__row--active');\r\n\r\n\t\t\t\t\t\t\t\tpg.updateInfo.call();\r\n\t\t\t\t\t\t\t\tpg.pagingBreakpoint.call();\r\n\t\t\t\t\t\t\t\t// Plugin.resetScroll();\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t},\r\n\t\t\t\t\tupdateInfo: function() {\r\n\t\t\t\t\t\tvar start = Math.max(pg.meta.perpage * (pg.meta.page - 1) + 1, 1);\r\n\t\t\t\t\t\tvar end = Math.min(start + pg.meta.perpage - 1, pg.meta.total);\r\n\t\t\t\t\t\t// page info update\r\n\t\t\t\t\t\t$(pg.pager).\r\n\t\t\t\t\t\t\tfind('.m-datatable__pager-info').\r\n\t\t\t\t\t\t\tfind('.m-datatable__pager-detail').\r\n\t\t\t\t\t\t\thtml(Plugin.dataPlaceholder(\r\n\t\t\t\t\t\t\t\tPlugin.getOption('translate.toolbar.pagination.items.info'), {\r\n\t\t\t\t\t\t\t\t\tstart: start,\r\n\t\t\t\t\t\t\t\t\tend: pg.meta.perpage === -1 ? pg.meta.total : end,\r\n\t\t\t\t\t\t\t\t\tpageSize: pg.meta.perpage === -1 ||\r\n\t\t\t\t\t\t\t\t\tpg.meta.perpage >= pg.meta.total\r\n\t\t\t\t\t\t\t\t\t\t? pg.meta.total\r\n\t\t\t\t\t\t\t\t\t\t: pg.meta.perpage,\r\n\t\t\t\t\t\t\t\t\ttotal: pg.meta.total,\r\n\t\t\t\t\t\t\t\t}));\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Update pagination layout breakpoint\r\n\t\t\t\t\t */\r\n\t\t\t\t\tpagingBreakpoint: function() {\r\n\t\t\t\t\t\t// keep page links reference\r\n\t\t\t\t\t\tvar pagerNumber = $(datatable.table).\r\n\t\t\t\t\t\t\tsiblings('.m-datatable__pager').\r\n\t\t\t\t\t\t\tfind('.m-datatable__pager-nav');\r\n\t\t\t\t\t\tif ($(pagerNumber).length === 0) return;\r\n\r\n\t\t\t\t\t\tvar currentPage = Plugin.getCurrentPage();\r\n\t\t\t\t\t\tvar pagerInput = $(pagerNumber).\r\n\t\t\t\t\t\t\tfind('.m-pager-input').\r\n\t\t\t\t\t\t\tclosest('li');\r\n\r\n\t\t\t\t\t\t// reset\r\n\t\t\t\t\t\t$(pagerNumber).find('li').show();\r\n\r\n\t\t\t\t\t\t// pagination update\r\n\t\t\t\t\t\t$.each(Plugin.getOption('toolbar.items.pagination.pages'),\r\n\t\t\t\t\t\t\tfunction(mode, option) {\r\n\t\t\t\t\t\t\t\tif (mUtil.isInResponsiveRange(mode)) {\r\n\t\t\t\t\t\t\t\t\tswitch (mode) {\r\n\t\t\t\t\t\t\t\t\t\tcase 'desktop':\r\n\t\t\t\t\t\t\t\t\t\tcase 'tablet':\r\n\t\t\t\t\t\t\t\t\t\t\tvar end = Math.ceil(currentPage / option.pagesNumber) *\r\n\t\t\t\t\t\t\t\t\t\t\t\toption.pagesNumber;\r\n\t\t\t\t\t\t\t\t\t\t\tvar start = end - option.pagesNumber;\r\n\t\t\t\t\t\t\t\t\t\t\t$(pagerInput).hide();\r\n\t\t\t\t\t\t\t\t\t\t\tpg.meta = Plugin.getDataSourceParam('pagination');\r\n\t\t\t\t\t\t\t\t\t\t\tpg.paginationUpdate();\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\t\t\tcase 'mobile':\r\n\t\t\t\t\t\t\t\t\t\t\t$(pagerInput).show();\r\n\t\t\t\t\t\t\t\t\t\t\t$(pagerNumber).\r\n\t\t\t\t\t\t\t\t\t\t\t\tfind('.m-datatable__pager-link--more-prev').\r\n\t\t\t\t\t\t\t\t\t\t\t\tclosest('li').\r\n\t\t\t\t\t\t\t\t\t\t\t\thide();\r\n\t\t\t\t\t\t\t\t\t\t\t$(pagerNumber).\r\n\t\t\t\t\t\t\t\t\t\t\t\tfind('.m-datatable__pager-link--more-next').\r\n\t\t\t\t\t\t\t\t\t\t\t\tclosest('li').\r\n\t\t\t\t\t\t\t\t\t\t\t\thide();\r\n\t\t\t\t\t\t\t\t\t\t\t$(pagerNumber).\r\n\t\t\t\t\t\t\t\t\t\t\t\tfind('.m-datatable__pager-link-number').\r\n\t\t\t\t\t\t\t\t\t\t\t\tclosest('li').\r\n\t\t\t\t\t\t\t\t\t\t\t\thide();\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Update pagination number and button display\r\n\t\t\t\t\t */\r\n\t\t\t\t\tpaginationUpdate: function() {\r\n\t\t\t\t\t\tvar pager = $(datatable.table).\r\n\t\t\t\t\t\t\t\tsiblings('.m-datatable__pager').\r\n\t\t\t\t\t\t\t\tfind('.m-datatable__pager-nav'),\r\n\t\t\t\t\t\t\tpagerMorePrev = $(pager).\r\n\t\t\t\t\t\t\t\tfind('.m-datatable__pager-link--more-prev'),\r\n\t\t\t\t\t\t\tpagerMoreNext = $(pager).\r\n\t\t\t\t\t\t\t\tfind('.m-datatable__pager-link--more-next'),\r\n\t\t\t\t\t\t\tpagerFirst = $(pager).find('.m-datatable__pager-link--first'),\r\n\t\t\t\t\t\t\tpagerPrev = $(pager).find('.m-datatable__pager-link--prev'),\r\n\t\t\t\t\t\t\tpagerNext = $(pager).find('.m-datatable__pager-link--next'),\r\n\t\t\t\t\t\t\tpagerLast = $(pager).find('.m-datatable__pager-link--last');\r\n\r\n\t\t\t\t\t\t// get visible page\r\n\t\t\t\t\t\tvar pagerNumber = $(pager).find('.m-datatable__pager-link-number');\r\n\t\t\t\t\t\t// get page before of first visible\r\n\t\t\t\t\t\tvar morePrevPage = Math.max($(pagerNumber).first().data('page') - 1,\r\n\t\t\t\t\t\t\t1);\r\n\t\t\t\t\t\t$(pagerMorePrev).each(function(i, prev) {\r\n\t\t\t\t\t\t\t$(prev).attr('data-page', morePrevPage);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t// show/hide <li>\r\n\t\t\t\t\t\tif (morePrevPage === 1) {\r\n\t\t\t\t\t\t\t$(pagerMorePrev).parent().hide();\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t$(pagerMorePrev).parent().show();\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// get page after of last visible\r\n\t\t\t\t\t\tvar moreNextPage = Math.min($(pagerNumber).last().data('page') + 1,\r\n\t\t\t\t\t\t\tpg.meta.pages);\r\n\t\t\t\t\t\t$(pagerMoreNext).each(function(i, prev) {\r\n\t\t\t\t\t\t\t$(pagerMoreNext).attr('data-page', moreNextPage).show();\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t// show/hide <li>\r\n\t\t\t\t\t\tif (moreNextPage === pg.meta.pages\r\n\t\t\t\t\t\t\t// missing dot fix when last hidden page is one left\r\n\t\t\t\t\t\t\t&& moreNextPage === $(pagerNumber).last().data('page')) {\r\n\t\t\t\t\t\t\t$(pagerMoreNext).parent().hide();\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t$(pagerMoreNext).parent().show();\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// begin/end of pages\r\n\t\t\t\t\t\tif (pg.meta.page === 1) {\r\n\t\t\t\t\t\t\t$(pagerFirst).\r\n\t\t\t\t\t\t\t\tattr('disabled', true).\r\n\t\t\t\t\t\t\t\taddClass('m-datatable__pager-link--disabled');\r\n\t\t\t\t\t\t\t$(pagerPrev).\r\n\t\t\t\t\t\t\t\tattr('disabled', true).\r\n\t\t\t\t\t\t\t\taddClass('m-datatable__pager-link--disabled');\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t$(pagerFirst).\r\n\t\t\t\t\t\t\t\tremoveAttr('disabled').\r\n\t\t\t\t\t\t\t\tremoveClass('m-datatable__pager-link--disabled');\r\n\t\t\t\t\t\t\t$(pagerPrev).\r\n\t\t\t\t\t\t\t\tremoveAttr('disabled').\r\n\t\t\t\t\t\t\t\tremoveClass('m-datatable__pager-link--disabled');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (pg.meta.page === pg.meta.pages) {\r\n\t\t\t\t\t\t\t$(pagerNext).\r\n\t\t\t\t\t\t\t\tattr('disabled', true).\r\n\t\t\t\t\t\t\t\taddClass('m-datatable__pager-link--disabled');\r\n\t\t\t\t\t\t\t$(pagerLast).\r\n\t\t\t\t\t\t\t\tattr('disabled', true).\r\n\t\t\t\t\t\t\t\taddClass('m-datatable__pager-link--disabled');\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t$(pagerNext).\r\n\t\t\t\t\t\t\t\tremoveAttr('disabled').\r\n\t\t\t\t\t\t\t\tremoveClass('m-datatable__pager-link--disabled');\r\n\t\t\t\t\t\t\t$(pagerLast).\r\n\t\t\t\t\t\t\t\tremoveAttr('disabled').\r\n\t\t\t\t\t\t\t\tremoveClass('m-datatable__pager-link--disabled');\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// display more buttons\r\n\t\t\t\t\t\tvar nav = Plugin.getOption('toolbar.items.pagination.navigation');\r\n\t\t\t\t\t\tif (!nav.first) $(pagerFirst).remove();\r\n\t\t\t\t\t\tif (!nav.prev) $(pagerPrev).remove();\r\n\t\t\t\t\t\tif (!nav.next) $(pagerNext).remove();\r\n\t\t\t\t\t\tif (!nav.last) $(pagerLast).remove();\r\n\t\t\t\t\t},\r\n\t\t\t\t};\r\n\t\t\t\tpg.init(meta);\r\n\t\t\t\treturn pg;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Hide/show table cell defined by options[columns][i][responsive][visible/hidden]\r\n\t\t\t */\r\n\t\t\tcolumnHide: function() {\r\n\t\t\t\tvar screen = mUtil.getViewPort().width;\r\n\t\t\t\t// foreach columns setting\r\n\t\t\t\t$.each(options.columns, function(i, column) {\r\n\t\t\t\t\tif (typeof column.responsive !== 'undefined') {\r\n\t\t\t\t\t\tvar field = column.field;\r\n\t\t\t\t\t\tvar tds = $.grep($(datatable.table).find('.m-datatable__cell'), function(n, i) {\r\n\t\t\t\t\t\t\treturn field === $(n).data('field');\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tif (mUtil.getBreakpoint(column.responsive.hidden) >= screen) {\r\n\t\t\t\t\t\t\t$(tds).hide();\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t$(tds).show();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (mUtil.getBreakpoint(column.responsive.visible) <= screen) {\r\n\t\t\t\t\t\t\t$(tds).show();\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t$(tds).hide();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Setup sub datatable\r\n\t\t\t */\r\n\t\t\tsetupSubDatatable: function() {\r\n\t\t\t\tvar subTableCallback = Plugin.getOption('detail.content');\r\n\t\t\t\tif (typeof subTableCallback !== 'function') return;\r\n\r\n\t\t\t\t// subtable already exist\r\n\t\t\t\tif ($(datatable.table).find('.m-datatable__subtable').length > 0) return;\r\n\r\n\t\t\t\t$(datatable.wrap).addClass('m-datatable--subtable');\r\n\r\n\t\t\t\toptions.columns[0]['subtable'] = true;\r\n\r\n\t\t\t\t// toggle on open sub table\r\n\t\t\t\tvar toggleSubTable = function(e) {\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t// get parent row of this subtable\r\n\t\t\t\t\tvar parentRow = $(this).closest('.m-datatable__row');\r\n\r\n\t\t\t\t\t// get subtable row for sub table\r\n\t\t\t\t\tvar subTableRow = $(parentRow).next('.m-datatable__row-subtable');\r\n\t\t\t\t\tif ($(subTableRow).length === 0) {\r\n\t\t\t\t\t\t// prepare DOM for sub table, each <tr> as parent and add <tr> as child table\r\n\t\t\t\t\t\tsubTableRow = $('<tr/>').\r\n\t\t\t\t\t\t\taddClass('m-datatable__row-subtable m-datatable__row-loading').\r\n\t\t\t\t\t\t\thide().\r\n\t\t\t\t\t\t\tappend($('<td/>').\r\n\t\t\t\t\t\t\t\taddClass('m-datatable__subtable').\r\n\t\t\t\t\t\t\t\tattr('colspan', Plugin.getTotalColumns()));\r\n\t\t\t\t\t\t$(parentRow).after(subTableRow);\r\n\t\t\t\t\t\t// add class to even row\r\n\t\t\t\t\t\tif ($(parentRow).hasClass('m-datatable__row--even')) {\r\n\t\t\t\t\t\t\t$(subTableRow).addClass('m-datatable__row-subtable--even');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t$(subTableRow).toggle();\r\n\r\n\t\t\t\t\tvar subTable = $(subTableRow).find('.m-datatable__subtable');\r\n\r\n\t\t\t\t\t// get id from first column of parent row\r\n\t\t\t\t\tvar primaryKey = $(this).\r\n\t\t\t\t\t\tclosest('[data-field]:first-child').\r\n\t\t\t\t\t\tfind('.m-datatable__toggle-subtable').\r\n\t\t\t\t\t\tdata('value');\r\n\r\n\t\t\t\t\tvar icon = $(this).find('i').removeAttr('class');\r\n\r\n\t\t\t\t\t// prevent duplicate datatable init\r\n\t\t\t\t\tif ($(parentRow).hasClass('m-datatable__row--subtable-expanded')) {\r\n\t\t\t\t\t\t$(icon).addClass(Plugin.getOption('layout.icons.rowDetail.collapse'));\r\n\t\t\t\t\t\t// remove expand class from parent row\r\n\t\t\t\t\t\t$(parentRow).removeClass('m-datatable__row--subtable-expanded');\r\n\t\t\t\t\t\t// trigger event on collapse\r\n\t\t\t\t\t\t$(datatable).trigger('m-datatable--on-collapse-subtable', [parentRow]);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// expand and run callback function\r\n\t\t\t\t\t\t$(icon).addClass(Plugin.getOption('layout.icons.rowDetail.expand'));\r\n\t\t\t\t\t\t// add expand class to parent row\r\n\t\t\t\t\t\t$(parentRow).addClass('m-datatable__row--subtable-expanded');\r\n\t\t\t\t\t\t// trigger event on expand\r\n\t\t\t\t\t\t$(datatable).trigger('m-datatable--on-expand-subtable', [parentRow]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// prevent duplicate datatable init\r\n\t\t\t\t\tif ($(subTable).find('.m-datatable').length === 0) {\r\n\t\t\t\t\t\t// get data by primary id\r\n\t\t\t\t\t\t$.map(datatable.dataSet, function(n, i) {\r\n\t\t\t\t\t\t\tif (primaryKey === n[options.columns[0].field]) {\r\n\t\t\t\t\t\t\t\te.data = n;\r\n\t\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t// deprecated in v5.0.6\r\n\t\t\t\t\t\te.detailCell = subTable;\r\n\r\n\t\t\t\t\t\te.parentRow = parentRow;\r\n\t\t\t\t\t\te.subTable = subTable;\r\n\r\n\t\t\t\t\t\t// run callback with event\r\n\t\t\t\t\t\tsubTableCallback(e);\r\n\r\n\t\t\t\t\t\t$(subTable).children('.m-datatable').on('m-datatable--on-init', function(e) {\r\n\t\t\t\t\t\t\t$(subTableRow).removeClass('m-datatable__row-loading');\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tif (Plugin.getOption('data.type') === 'local') {\r\n\t\t\t\t\t\t\t$(subTableRow).removeClass('m-datatable__row-loading');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\tvar columns = options.columns;\r\n\t\t\t\t$(datatable.tableBody).\r\n\t\t\t\t\tfind('.m-datatable__row').\r\n\t\t\t\t\teach(function(tri, tr) {\r\n\t\t\t\t\t\t$(tr).find('.m-datatable__cell').each(function(tdi, td) {\r\n\t\t\t\t\t\t\t// get column settings by field\r\n\t\t\t\t\t\t\tvar column = $.grep(columns, function(n, i) {\r\n\t\t\t\t\t\t\t\treturn $(td).data('field') === n.field;\r\n\t\t\t\t\t\t\t})[0];\r\n\t\t\t\t\t\t\tif (typeof column !== 'undefined') {\r\n\t\t\t\t\t\t\t\tvar value = $(td).text();\r\n\t\t\t\t\t\t\t\t// enable column subtable toggle\r\n\t\t\t\t\t\t\t\tif (typeof column.subtable !== 'undefined' && column.subtable) {\r\n\t\t\t\t\t\t\t\t\t// check if subtable toggle exist\r\n\t\t\t\t\t\t\t\t\tif ($(td).find('.m-datatable__toggle-subtable').length > 0) return;\r\n\t\t\t\t\t\t\t\t\t// append subtable toggle\r\n\t\t\t\t\t\t\t\t\t$(td).html($('<a/>').\r\n\t\t\t\t\t\t\t\t\t\taddClass('m-datatable__toggle-subtable').\r\n\t\t\t\t\t\t\t\t\t\tattr('href', '#').\r\n\t\t\t\t\t\t\t\t\t\tattr('data-value', value).\r\n\t\t\t\t\t\t\t\t\t\tattr('title', Plugin.getOption('detail.title')).\r\n\t\t\t\t\t\t\t\t\t\ton('click', toggleSubTable).\r\n\t\t\t\t\t\t\t\t\t\tappend($('<i/>').\r\n\t\t\t\t\t\t\t\t\t\t\tcss('width', $(td).data('width')).\r\n\t\t\t\t\t\t\t\t\t\t\taddClass(Plugin.getOption('layout.icons.rowDetail.collapse'))));\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t// $(datatable.tableHead).find('.m-datatable__row').first()\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Datasource mapping callback\r\n\t\t\t */\r\n\t\t\tdataMapCallback: function(raw) {\r\n\t\t\t\t// static dataset array\r\n\t\t\t\tvar dataSet = raw;\r\n\t\t\t\t// dataset mapping callback\r\n\t\t\t\tif (typeof Plugin.getOption('data.source.read.map') === 'function') {\r\n\t\t\t\t\treturn Plugin.getOption('data.source.read.map')(raw);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// default data mapping fallback\r\n\t\t\t\t\tif (typeof raw.data !== 'undefined') {\r\n\t\t\t\t\t\tdataSet = raw.data;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn dataSet;\r\n\t\t\t},\r\n\r\n\t\t\tisSpinning: false,\r\n\t\t\t/**\r\n\t\t\t * BlockUI spinner callback\r\n\t\t\t * @param block\r\n\t\t\t */\r\n\t\t\tspinnerCallback: function(block) {\r\n\t\t\t\tif (block) {\r\n\t\t\t\t\tif (!Plugin.isSpinning) {\r\n\t\t\t\t\t\t// get spinner options\r\n\t\t\t\t\t\tvar spinnerOptions = Plugin.getOption('layout.spinner');\r\n\t\t\t\t\t\tif (spinnerOptions.message === true) {\r\n\t\t\t\t\t\t\t// use default spinner message from translation\r\n\t\t\t\t\t\t\tspinnerOptions.message = Plugin.getOption('translate.records.processing');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tPlugin.isSpinning = true;\r\n\t\t\t\t\t\tif (typeof mApp !== 'undefined') {\r\n\t\t\t\t\t\t\tmApp.block(datatable, spinnerOptions);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tPlugin.isSpinning = false;\r\n\t\t\t\t\tif (typeof mApp !== 'undefined') {\r\n\t\t\t\t\t\tmApp.unblock(datatable);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Default sort callback function\r\n\t\t\t * @param data\r\n\t\t\t * @param sort\r\n\t\t\t * @param column\r\n\t\t\t * @returns {*|Array.<T>|{sort, field}|{asc, desc}}\r\n\t\t\t */\r\n\t\t\tsortCallback: function(data, sort, column) {\r\n\t\t\t\tvar type = column['type'] || 'string';\r\n\t\t\t\tvar format = column['format'] || '';\r\n\t\t\t\tvar field = column['field'];\r\n\r\n\t\t\t\tif (type === 'date' && typeof moment === 'undefined') {\r\n\t\t\t\t\tthrow new Error('Moment.js is required.');\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn $(data).sort(function(a, b) {\r\n\t\t\t\t\tvar aField = a[field];\r\n\t\t\t\t\tvar bField = b[field];\r\n\r\n\t\t\t\t\tswitch (type) {\r\n\t\t\t\t\t\tcase 'date':\r\n\t\t\t\t\t\t\tvar diff = moment(aField, format).diff(moment(bField, format));\r\n\t\t\t\t\t\t\tif (sort === 'asc') {\r\n\t\t\t\t\t\t\t\treturn diff > 0 ? 1 : diff < 0 ? -1 : 0;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\treturn diff < 0 ? 1 : diff > 0 ? -1 : 0;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'number':\r\n\t\t\t\t\t\t\tif (isNaN(parseFloat(aField)) && aField != null) {\r\n\t\t\t\t\t\t\t\taField = Number(aField.replace(/[^0-9\\.-]+/g, ''));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (isNaN(parseFloat(bField)) && bField != null) {\r\n\t\t\t\t\t\t\t\tbField = Number(bField.replace(/[^0-9\\.-]+/g, ''));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\taField = parseFloat(aField);\r\n\t\t\t\t\t\t\tbField = parseFloat(bField);\r\n\t\t\t\t\t\t\tif (sort === 'asc') {\r\n\t\t\t\t\t\t\t\treturn aField > bField ? 1 : aField < bField ? -1 : 0;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\treturn aField < bField ? 1 : aField > bField ? -1 : 0;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'string':\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tif (sort === 'asc') {\r\n\t\t\t\t\t\t\t\treturn aField > bField ? 1 : aField < bField ? -1 : 0;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\treturn aField < bField ? 1 : aField > bField ? -1 : 0;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Custom debug log\r\n\t\t\t * @param text\r\n\t\t\t * @param obj\r\n\t\t\t */\r\n\t\t\tlog: function(text, obj) {\r\n\t\t\t\tif (typeof obj === 'undefined') obj = '';\r\n\t\t\t\tif (datatable.debug) {\r\n\t\t\t\t\tconsole.log(text, obj);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Auto hide columnds overflow in row\r\n\t\t\t */\r\n\t\t\tautoHide: function() {\r\n\t\t\t\t$(datatable.table).find('.m-datatable__cell').show();\r\n\t\t\t\t$(datatable.tableBody).each(function() {\r\n\t\t\t\t\twhile ($(this)[0].offsetWidth < $(this)[0].scrollWidth) {\r\n\t\t\t\t\t\t$(this).find('.m-datatable__row').each(function(i) {\r\n\t\t\t\t\t\t\tvar cell = $(this).find('.m-datatable__cell').not(':hidden').last();\r\n\t\t\t\t\t\t\t$(cell).hide();\r\n\t\t\t\t\t\t\tif (i === 0) {\r\n\t\t\t\t\t\t\t\t$(datatable.tableHead).find('.m-datatable__cell').eq($(cell).index()).hide();\r\n\t\t\t\t\t\t\t\t$(datatable.tableFoot).find('.m-datatable__cell').eq($(cell).index()).hide();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tvar toggleHiddenColumns = function(e) {\r\n\t\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\t\tvar row = $(this).closest('.m-datatable__row');\r\n\t\t\t\t\tvar detailRow = $(row).next();\r\n\r\n\t\t\t\t\tif (!$(detailRow).hasClass('m-datatable__row-detail')) {\r\n\t\t\t\t\t\t$(this).find('i').\r\n\t\t\t\t\t\t\tremoveClass(Plugin.getOption('layout.icons.rowDetail.collapse')).\r\n\t\t\t\t\t\t\taddClass(Plugin.getOption('layout.icons.rowDetail.expand'));\r\n\r\n\t\t\t\t\t\tvar hidden = $(row).find('.m-datatable__cell:hidden').clone().show();\r\n\r\n\t\t\t\t\t\tdetailRow = $('<tr/>').addClass('m-datatable__row-detail').insertAfter(row);\r\n\t\t\t\t\t\tvar detailRowTd = $('<td/>').\r\n\t\t\t\t\t\t\taddClass('m-datatable__detail').\r\n\t\t\t\t\t\t\tattr('colspan', Plugin.getTotalColumns()).appendTo(detailRow);\r\n\r\n\t\t\t\t\t\tvar detailSubTable = $('<table/>');\r\n\t\t\t\t\t\t$(hidden).each(function() {\r\n\t\t\t\t\t\t\tvar field = $(this).data('field');\r\n\t\t\t\t\t\t\tvar column = $.grep(options.columns, function(n, i) {\r\n\t\t\t\t\t\t\t\treturn field === n.field;\r\n\t\t\t\t\t\t\t})[0];\r\n\t\t\t\t\t\t\t$(detailSubTable).\r\n\t\t\t\t\t\t\t\tappend($('<tr class=\"m-datatable__row\"></tr>').\r\n\t\t\t\t\t\t\t\t\tappend($('<td class=\"m-datatable__cell\"></td>').\r\n\t\t\t\t\t\t\t\t\t\tappend($('<span/>').\r\n\t\t\t\t\t\t\t\t\t\t\tcss('width', Plugin.offset).\r\n\t\t\t\t\t\t\t\t\t\t\tappend(column.title))).\r\n\t\t\t\t\t\t\t\t\tappend(this));\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t$(detailRowTd).append(detailSubTable);\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$(this).find('i').\r\n\t\t\t\t\t\t\tremoveClass(Plugin.getOption('layout.icons.rowDetail.expand')).\r\n\t\t\t\t\t\t\taddClass(Plugin.getOption('layout.icons.rowDetail.collapse'));\r\n\t\t\t\t\t\t$(detailRow).remove();\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// toggle show hidden columns\r\n\t\t\t\t$(datatable.tableBody).find('.m-datatable__row').each(function() {\r\n\t\t\t\t\t$(this).prepend($('<td/>').addClass('m-datatable__cell m-datatable__toggle--detail').\r\n\t\t\t\t\t\tappend($('<a/>').\r\n\t\t\t\t\t\t\taddClass('m-datatable__toggle-detail').\r\n\t\t\t\t\t\t\tattr('href', '#').\r\n\t\t\t\t\t\t\ton('click', toggleHiddenColumns).\r\n\t\t\t\t\t\t\tappend($('<i/>').\r\n\t\t\t\t\t\t\t\tcss('width', '21px').// maintain width for both icons expand and collapse\r\n\t\t\t\t\t\t\t\taddClass(Plugin.getOption('layout.icons.rowDetail.collapse')))));\r\n\r\n\t\t\t\t\t// check if subtable toggle exist\r\n\t\t\t\t\tif ($(datatable.tableHead).find('.m-datatable__toggle-detail').length === 0) {\r\n\t\t\t\t\t\t$(datatable.tableHead).\r\n\t\t\t\t\t\t\tfind('.m-datatable__row').\r\n\t\t\t\t\t\t\tfirst().\r\n\t\t\t\t\t\t\tprepend('<th class=\"m-datatable__cell m-datatable__toggle-detail\"><span style=\"width: 21px\"></span></th>');\r\n\t\t\t\t\t\t$(datatable.tableFoot).\r\n\t\t\t\t\t\t\tfind('.m-datatable__row').\r\n\t\t\t\t\t\t\tfirst().\r\n\t\t\t\t\t\t\tprepend('<th class=\"m-datatable__cell m-datatable__toggle-detail\"><span style=\"width: 21px\"></span></th>');\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$(datatable.tableHead).find('.m-datatable__toggle-detail').find('span').css('width', '21px');\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * todo; implement hover column\r\n\t\t\t */\r\n\t\t\thoverColumn: function() {\r\n\t\t\t\t$(datatable.tableBody).on('mouseenter', '.m-datatable__cell', function() {\r\n\t\t\t\t\tvar colIdx = $(Plugin.cell(this).nodes()).index();\r\n\t\t\t\t\t$(Plugin.cells().nodes()).removeClass('m-datatable__cell--hover');\r\n\t\t\t\t\t$(Plugin.column(colIdx).nodes()).addClass('m-datatable__cell--hover');\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * To enable auto columns features for remote data source\r\n\t\t\t */\r\n\t\t\tsetAutoColumns: function() {\r\n\t\t\t\tif (Plugin.getOption('data.autoColumns')) {\r\n\t\t\t\t\t$.each(datatable.dataSet[0], function(k, v) {\r\n\t\t\t\t\t\tvar found = $.grep(options.columns, function(n, i) {\r\n\t\t\t\t\t\t\treturn k === n.field;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tif (found.length === 0) {\r\n\t\t\t\t\t\t\toptions.columns.push({field: k, title: k});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\t$(datatable.tableHead).find('.m-datatable__row').remove();\r\n\t\t\t\t\tPlugin.setHeadTitle();\r\n\t\t\t\t\tif (Plugin.getOption('layout.footer')) {\r\n\t\t\t\t\t\t$(datatable.tableFoot).find('.m-datatable__row').remove();\r\n\t\t\t\t\t\tPlugin.setHeadTitle(datatable.tableFoot);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t/********************\r\n\t\t\t ** HELPERS\r\n\t\t\t ********************/\r\n\r\n\t\t\t/**\r\n\t\t\t * Check if table is a locked colums table\r\n\t\t\t */\r\n\t\t\tisLocked: function() {\r\n\t\t\t\treturn $(datatable.wrap).hasClass('m-datatable--lock') || false;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Insert html into table content, take count mCustomScrollbar DOM to prevent replace\r\n\t\t\t * @param html\r\n\t\t\t * @param tablePart\r\n\t\t\t */\r\n\t\t\treplaceTableContent: function(html, tablePart) {\r\n\t\t\t\tif (typeof tablePart === 'undefined') tablePart = datatable.tableBody;\r\n\t\t\t\tif ($(tablePart).hasClass('mCustomScrollbar')) {\r\n\t\t\t\t\t$(tablePart).find('.mCSB_container').html(html);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$(tablePart).html(html);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Get total extra space of an element for width calculation, including padding, margin, border\r\n\t\t\t * @param element\r\n\t\t\t * @returns {number}\r\n\t\t\t */\r\n\t\t\tgetExtraSpace: function(element) {\r\n\t\t\t\tvar padding = parseInt($(element).css('paddingRight')) +\r\n\t\t\t\t\tparseInt($(element).css('paddingLeft'));\r\n\t\t\t\tvar margin = parseInt($(element).css('marginRight')) +\r\n\t\t\t\t\tparseInt($(element).css('marginLeft'));\r\n\t\t\t\tvar border = Math.ceil(\r\n\t\t\t\t\t$(element).css('border-right-width').replace('px', ''));\r\n\t\t\t\treturn padding + margin + border;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Insert data of array into {{ }} template placeholder\r\n\t\t\t * @param template\r\n\t\t\t * @param data\r\n\t\t\t * @returns {*}\r\n\t\t\t */\r\n\t\t\tdataPlaceholder: function(template, data) {\r\n\t\t\t\tvar result = template;\r\n\t\t\t\t$.each(data, function(key, val) {\r\n\t\t\t\t\tresult = result.replace('{{' + key + '}}', val);\r\n\t\t\t\t});\r\n\t\t\t\treturn result;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Get table unique ID\r\n\t\t\t * Note: table unique change each time refreshed\r\n\t\t\t * @param suffix\r\n\t\t\t * @returns {*}\r\n\t\t\t */\r\n\t\t\tgetTableId: function(suffix) {\r\n\t\t\t\tif (typeof suffix === 'undefined') suffix = '';\r\n\t\t\t\tvar id = $(datatable).attr('id');\r\n\t\t\t\tif (typeof id === 'undefined') {\r\n\t\t\t\t\tid = $(datatable).attr('class').split(' ')[0];\r\n\t\t\t\t}\r\n\t\t\t\treturn id + suffix;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Get table prefix with depth number\r\n\t\t\t */\r\n\t\t\tgetTablePrefix: function(suffix) {\r\n\t\t\t\tif (typeof suffix !== 'undefined') suffix = '-' + suffix;\r\n\t\t\t\treturn Plugin.getTableId() + '-' + Plugin.getDepth() + suffix;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Get current table depth of sub table\r\n\t\t\t * @returns {number}\r\n\t\t\t */\r\n\t\t\tgetDepth: function() {\r\n\t\t\t\tvar depth = 0;\r\n\t\t\t\tvar table = datatable.table;\r\n\t\t\t\tdo {\r\n\t\t\t\t\ttable = $(table).parents('.m-datatable__table');\r\n\t\t\t\t\tdepth++;\r\n\t\t\t\t} while ($(table).length > 0);\r\n\t\t\t\treturn depth;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Keep state item\r\n\t\t\t * @param key\r\n\t\t\t * @param value\r\n\t\t\t */\r\n\t\t\tstateKeep: function(key, value) {\r\n\t\t\t\tkey = Plugin.getTablePrefix(key);\r\n\t\t\t\tif (Plugin.getOption('data.saveState') === false) return;\r\n\t\t\t\tif (Plugin.getOption('data.saveState.webstorage') && localStorage) {\r\n\t\t\t\t\tlocalStorage.setItem(key, JSON.stringify(value));\r\n\t\t\t\t}\r\n\t\t\t\tif (Plugin.getOption('data.saveState.cookie')) {\r\n\t\t\t\t\tCookies.set(key, JSON.stringify(value));\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Get state item\r\n\t\t\t * @param key\r\n\t\t\t * @param defValue\r\n\t\t\t */\r\n\t\t\tstateGet: function(key, defValue) {\r\n\t\t\t\tkey = Plugin.getTablePrefix(key);\r\n\t\t\t\tif (Plugin.getOption('data.saveState') === false) return;\r\n\t\t\t\tvar value = null;\r\n\t\t\t\tif (Plugin.getOption('data.saveState.webstorage') && localStorage) {\r\n\t\t\t\t\tvalue = localStorage.getItem(key);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvalue = Cookies.get(key);\r\n\t\t\t\t}\r\n\t\t\t\tif (typeof value !== 'undefined' && value !== null) {\r\n\t\t\t\t\treturn JSON.parse(value);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Update data in state without clear existing\r\n\t\t\t * @param key\r\n\t\t\t * @param value\r\n\t\t\t */\r\n\t\t\tstateUpdate: function(key, value) {\r\n\t\t\t\tvar ori = Plugin.stateGet(key);\r\n\t\t\t\tif (typeof ori === 'undefined' || ori === null) ori = {};\r\n\t\t\t\tPlugin.stateKeep(key, $.extend({}, ori, value));\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Remove state item\r\n\t\t\t * @param key\r\n\t\t\t */\r\n\t\t\tstateRemove: function(key) {\r\n\t\t\t\tkey = Plugin.getTablePrefix(key);\r\n\t\t\t\tif (localStorage) {\r\n\t\t\t\t\tlocalStorage.removeItem(key);\r\n\t\t\t\t}\r\n\t\t\t\tCookies.remove(key);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Get total columns.\r\n\t\t\t */\r\n\t\t\tgetTotalColumns: function(tablePart) {\r\n\t\t\t\tif (typeof tablePart === 'undefined') tablePart = datatable.tableBody;\r\n\t\t\t\treturn $(tablePart).\r\n\t\t\t\t\tfind('.m-datatable__row').\r\n\t\t\t\t\tfirst().\r\n\t\t\t\t\tfind('.m-datatable__cell').length;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Get table row. Useful to get row when current table is in lock mode.\r\n\t\t\t * Can be used for both lock and normal table mode.\r\n\t\t\t * By default, returning result will be in a list of <td>.\r\n\t\t\t * @param tablePart\r\n\t\t\t * @param row 1-based index\r\n\t\t\t * @param tdOnly Optional. Default true\r\n\t\t\t * @returns {*}\r\n\t\t\t */\r\n\t\t\tgetOneRow: function(tablePart, row, tdOnly) {\r\n\t\t\t\tif (typeof tdOnly === 'undefined') tdOnly = true;\r\n\t\t\t\t// get list of <tr>\r\n\t\t\t\tvar result = $(tablePart).find('.m-datatable__row:not(.m-datatable__row-detail):nth-child(' + row + ')');\r\n\t\t\t\tif (tdOnly) {\r\n\t\t\t\t\t// get list of <td> or <th>\r\n\t\t\t\t\tresult = result.find('.m-datatable__cell');\r\n\t\t\t\t}\r\n\t\t\t\treturn result;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Check if element has vertical overflow\r\n\t\t\t * @param element\r\n\t\t\t * @returns {boolean}\r\n\t\t\t */\r\n\t\t\thasOverflowY: function(element) {\r\n\t\t\t\tvar children = $(element).find('.m-datatable__row');\r\n\t\t\t\tvar maxHeight = 0;\r\n\r\n\t\t\t\tif (children.length > 0) {\r\n\t\t\t\t\t$(children).each(function(tdi, td) {\r\n\t\t\t\t\t\tmaxHeight += Math.floor($(td).innerHeight());\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\treturn maxHeight > $(element).innerHeight();\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn false;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Sort table row at HTML level by column index.\r\n\t\t\t * todo; Not in use.\r\n\t\t\t * @param header Header sort clicked\r\n\t\t\t * @param sort asc|desc. Optional. Default asc\r\n\t\t\t * @param int Boolean. Optional. Comparison value parse to integer. Default false\r\n\t\t\t */\r\n\t\t\tsortColumn: function(header, sort, int) {\r\n\t\t\t\tif (typeof sort === 'undefined') sort = 'asc'; // desc\r\n\t\t\t\tif (typeof int === 'undefined') int = false;\r\n\r\n\t\t\t\tvar column = $(header).index();\r\n\t\t\t\tvar rows = $(datatable.tableBody).find('.m-datatable__row');\r\n\t\t\t\tvar hIndex = $(header).closest('.m-datatable__lock').index();\r\n\t\t\t\tif (hIndex !== -1) {\r\n\t\t\t\t\trows = $(datatable.tableBody).\r\n\t\t\t\t\t\tfind('.m-datatable__lock:nth-child(' + (hIndex + 1) + ')').\r\n\t\t\t\t\t\tfind('.m-datatable__row');\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar container = $(rows).parent();\r\n\t\t\t\t$(rows).sort(function(a, b) {\r\n\t\t\t\t\tvar tda = $(a).find('td:nth-child(' + column + ')').text();\r\n\t\t\t\t\tvar tdb = $(b).find('td:nth-child(' + column + ')').text();\r\n\r\n\t\t\t\t\tif (int) {\r\n\t\t\t\t\t\t// useful for integer type sorting\r\n\t\t\t\t\t\ttda = parseInt(tda);\r\n\t\t\t\t\t\ttdb = parseInt(tdb);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (sort === 'asc') {\r\n\t\t\t\t\t\treturn tda > tdb ? 1 : tda < tdb ? -1 : 0;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn tda < tdb ? 1 : tda > tdb ? -1 : 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t}).appendTo(container);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Perform sort remote and local\r\n\t\t\t */\r\n\t\t\tsorting: function() {\r\n\t\t\t\tvar sortObj = {\r\n\t\t\t\t\tinit: function() {\r\n\t\t\t\t\t\tif (options.sortable) {\r\n\t\t\t\t\t\t\t$(datatable.tableHead).\r\n\t\t\t\t\t\t\t\tfind('.m-datatable__cell:not(.m-datatable__cell--check)').\r\n\t\t\t\t\t\t\t\taddClass('m-datatable__cell--sort').\r\n\t\t\t\t\t\t\t\toff('click').\r\n\t\t\t\t\t\t\t\ton('click', sortObj.sortClick);\r\n\t\t\t\t\t\t\t// first init\r\n\t\t\t\t\t\t\tsortObj.setIcon();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tsetIcon: function() {\r\n\t\t\t\t\t\tvar meta = Plugin.getDataSourceParam('sort');\r\n\t\t\t\t\t\tif ($.isEmptyObject(meta)) return;\r\n\r\n\t\t\t\t\t\t// sort icon beside column header\r\n\t\t\t\t\t\tvar td = $(datatable.tableHead).\r\n\t\t\t\t\t\t\tfind('.m-datatable__cell[data-field=\"' + meta.field + '\"]').\r\n\t\t\t\t\t\t\tattr('data-sort', meta.sort);\r\n\t\t\t\t\t\tvar sorting = $(td).find('span');\r\n\t\t\t\t\t\tvar icon = $(sorting).find('i');\r\n\r\n\t\t\t\t\t\tvar icons = Plugin.getOption('layout.icons.sort');\r\n\t\t\t\t\t\t// update sort icon; desc & asc\r\n\t\t\t\t\t\tif ($(icon).length > 0) {\r\n\t\t\t\t\t\t\t$(icon).removeAttr('class').addClass(icons[meta.sort]);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t$(sorting).append($('<i/>').addClass(icons[meta.sort]));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tsortClick: function(e) {\r\n\t\t\t\t\t\tvar meta = Plugin.getDataSourceParam('sort');\r\n\t\t\t\t\t\tvar field = $(this).data('field');\r\n\t\t\t\t\t\tvar column = Plugin.getColumnByField(field);\r\n\t\t\t\t\t\t// sort is disabled for this column\r\n\t\t\t\t\t\tif (typeof column.sortable !== 'undefined' &&\r\n\t\t\t\t\t\t\tcolumn.sortable === false) return;\r\n\r\n\t\t\t\t\t\t$(datatable.tableHead).\r\n\t\t\t\t\t\t\tfind('.m-datatable__cell > span > i').\r\n\t\t\t\t\t\t\tremove();\r\n\r\n\t\t\t\t\t\tif (options.sortable) {\r\n\t\t\t\t\t\t\tPlugin.spinnerCallback(true);\r\n\r\n\t\t\t\t\t\t\tvar sort = 'desc';\r\n\t\t\t\t\t\t\tif (Plugin.getObject('field', meta) === field) {\r\n\t\t\t\t\t\t\t\tsort = Plugin.getObject('sort', meta);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// toggle sort\r\n\t\t\t\t\t\t\tsort = typeof sort === 'undefined' || sort === 'desc'\r\n\t\t\t\t\t\t\t\t? 'asc'\r\n\t\t\t\t\t\t\t\t: 'desc';\r\n\r\n\t\t\t\t\t\t\t// update field and sort params\r\n\t\t\t\t\t\t\tmeta = {field: field, sort: sort};\r\n\t\t\t\t\t\t\tPlugin.setDataSourceParam('sort', meta);\r\n\r\n\t\t\t\t\t\t\tsortObj.setIcon();\r\n\r\n\t\t\t\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\t\t\t\tPlugin.dataRender('sort');\r\n\t\t\t\t\t\t\t\t$(datatable).trigger('m-datatable--on-sort', meta);\r\n\t\t\t\t\t\t\t}, 300);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t};\r\n\t\t\t\tsortObj.init();\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Update JSON data list linked with sort, filter and pagination.\r\n\t\t\t * Call this method, before using dataSet variable.\r\n\t\t\t * @returns {*|null}\r\n\t\t\t */\r\n\t\t\tlocalDataUpdate: function() {\r\n\t\t\t\t// todo; fix twice execution\r\n\t\t\t\tvar params = Plugin.getDataSourceParam();\r\n\t\t\t\tif (typeof datatable.originalDataSet === 'undefined') {\r\n\t\t\t\t\tdatatable.originalDataSet = datatable.dataSet;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar field = Plugin.getObject('sort.field', params);\r\n\t\t\t\tvar sort = Plugin.getObject('sort.sort', params);\r\n\t\t\t\tvar column = Plugin.getColumnByField(field);\r\n\t\t\t\tif (typeof column !== 'undefined' && Plugin.getOption('data.serverSorting') !== true) {\r\n\t\t\t\t\tif (typeof column.sortCallback === 'function') {\r\n\t\t\t\t\t\tdatatable.dataSet = column.sortCallback(datatable.originalDataSet, sort, column);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdatatable.dataSet = Plugin.sortCallback(datatable.originalDataSet, sort, column);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdatatable.dataSet = datatable.originalDataSet;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// if server filter enable, don't pass local filter\r\n\t\t\t\tif (typeof params.query === 'object' && !Plugin.getOption('data.serverFiltering')) {\r\n\t\t\t\t\tparams.query = params.query || {};\r\n\r\n\t\t\t\t\tvar search = $(Plugin.getOption('search.input')).val();\r\n\t\t\t\t\tif (typeof search !== 'undefined' && search !== '') {\r\n\t\t\t\t\t\tsearch = search.toLowerCase();\r\n\t\t\t\t\t\tdatatable.dataSet = $.grep(datatable.dataSet, function(obj) {\r\n\t\t\t\t\t\t\tfor (var field in obj) {\r\n\t\t\t\t\t\t\t\tif (!obj.hasOwnProperty(field)) continue;\r\n\t\t\t\t\t\t\t\tif (typeof obj[field] === 'string') {\r\n\t\t\t\t\t\t\t\t\tif (obj[field].toLowerCase().indexOf(search) > -1) {\r\n\t\t\t\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t// remove generalSearch as we don't need this for next columns filter\r\n\t\t\t\t\t\tdelete params.query[Plugin.getGeneralSearchKey()];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// remove empty element from array\r\n\t\t\t\t\t$.each(params.query, function(k, v) {\r\n\t\t\t\t\t\tif (v === '') {\r\n\t\t\t\t\t\t\tdelete params.query[k];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t// filter array by query\r\n\t\t\t\t\tdatatable.dataSet = Plugin.filterArray(datatable.dataSet, params.query);\r\n\r\n\t\t\t\t\t// reset array index\r\n\t\t\t\t\tdatatable.dataSet = datatable.dataSet.filter(function() {\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn datatable.dataSet;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Utility helper to filter array by object pair of {key:value}\r\n\t\t\t * @param list\r\n\t\t\t * @param args\r\n\t\t\t * @param operator\r\n\t\t\t * @returns {*}\r\n\t\t\t */\r\n\t\t\tfilterArray: function(list, args, operator) {\r\n\t\t\t\tif (typeof list !== 'object') {\r\n\t\t\t\t\treturn [];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (typeof operator === 'undefined') operator = 'AND';\r\n\r\n\t\t\t\tif (typeof args !== 'object') {\r\n\t\t\t\t\treturn list;\r\n\t\t\t\t}\r\n\r\n\t\t\t\toperator = operator.toUpperCase();\r\n\r\n\t\t\t\tif ($.inArray(operator, ['AND', 'OR', 'NOT']) === -1) {\r\n\t\t\t\t\treturn [];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar count = Object.keys(args).length;\r\n\t\t\t\tvar filtered = [];\r\n\r\n\t\t\t\t$.each(list, function(key, obj) {\r\n\t\t\t\t\tvar to_match = obj;\r\n\r\n\t\t\t\t\tvar matched = 0;\r\n\t\t\t\t\t$.each(args, function(m_key, m_value) {\r\n\t\t\t\t\t\tif (to_match.hasOwnProperty(m_key) && m_value == to_match[m_key].toLowerCase()) {\r\n\t\t\t\t\t\t\tmatched++;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tif (('AND' == operator && matched == count) ||\r\n\t\t\t\t\t\t('OR' == operator && matched > 0) ||\r\n\t\t\t\t\t\t('NOT' == operator && 0 == matched)) {\r\n\t\t\t\t\t\tfiltered[key] = obj;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tlist = filtered;\r\n\r\n\t\t\t\treturn list;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Reset lock column scroll to 0 when resize\r\n\t\t\t */\r\n\t\t\tresetScroll: function() {\r\n\t\t\t\tif (typeof options.detail === 'undefined' && Plugin.getDepth() === 1) {\r\n\t\t\t\t\t$(datatable.table).find('.m-datatable__row').css('left', 0);\r\n\t\t\t\t\t$(datatable.table).find('.m-datatable__lock').css('top', 0);\r\n\t\t\t\t\t$(datatable.tableBody).scrollTop(0);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Get column options by field\r\n\t\t\t * @param field\r\n\t\t\t * @returns {boolean}\r\n\t\t\t */\r\n\t\t\tgetColumnByField: function(field) {\r\n\t\t\t\tif (typeof field === 'undefined') return;\r\n\t\t\t\tvar result;\r\n\t\t\t\t$.each(options.columns, function(i, column) {\r\n\t\t\t\t\tif (field === column.field) {\r\n\t\t\t\t\t\tresult = column;\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\treturn result;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Get default sort column\r\n\t\t\t */\r\n\t\t\tgetDefaultSortColumn: function() {\r\n\t\t\t\tvar result;\r\n\t\t\t\t$.each(options.columns, function(i, column) {\r\n\t\t\t\t\tif (typeof column.sortable !== 'undefined'\r\n\t\t\t\t\t\t&& $.inArray(column.sortable, ['asc', 'desc']) !== -1) {\r\n\t\t\t\t\t\tresult = {sort: column.sortable, field: column.field};\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\treturn result;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Helper to get element dimensions, when the element is hidden\r\n\t\t\t * @param element\r\n\t\t\t * @param includeMargin\r\n\t\t\t * @returns {{width: number, height: number, innerWidth: number, innerHeight: number, outerWidth: number, outerHeight: number}}\r\n\t\t\t */\r\n\t\t\tgetHiddenDimensions: function(element, includeMargin) {\r\n\t\t\t\tvar props = {\r\n\t\t\t\t\t\tposition: 'absolute',\r\n\t\t\t\t\t\tvisibility: 'hidden',\r\n\t\t\t\t\t\tdisplay: 'block',\r\n\t\t\t\t\t},\r\n\t\t\t\t\tdim = {\r\n\t\t\t\t\t\twidth: 0,\r\n\t\t\t\t\t\theight: 0,\r\n\t\t\t\t\t\tinnerWidth: 0,\r\n\t\t\t\t\t\tinnerHeight: 0,\r\n\t\t\t\t\t\touterWidth: 0,\r\n\t\t\t\t\t\touterHeight: 0,\r\n\t\t\t\t\t},\r\n\t\t\t\t\thiddenParents = $(element).parents().addBack().not(':visible');\r\n\t\t\t\tincludeMargin = (typeof includeMargin === 'boolean')\r\n\t\t\t\t\t? includeMargin\r\n\t\t\t\t\t: false;\r\n\r\n\t\t\t\tvar oldProps = [];\r\n\t\t\t\thiddenParents.each(function() {\r\n\t\t\t\t\tvar old = {};\r\n\r\n\t\t\t\t\tfor (var name in props) {\r\n\t\t\t\t\t\told[name] = this.style[name];\r\n\t\t\t\t\t\tthis.style[name] = props[name];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\toldProps.push(old);\r\n\t\t\t\t});\r\n\r\n\t\t\t\tdim.width = $(element).width();\r\n\t\t\t\tdim.outerWidth = $(element).outerWidth(includeMargin);\r\n\t\t\t\tdim.innerWidth = $(element).innerWidth();\r\n\t\t\t\tdim.height = $(element).height();\r\n\t\t\t\tdim.innerHeight = $(element).innerHeight();\r\n\t\t\t\tdim.outerHeight = $(element).outerHeight(includeMargin);\r\n\r\n\t\t\t\thiddenParents.each(function(i) {\r\n\t\t\t\t\tvar old = oldProps[i];\r\n\t\t\t\t\tfor (var name in props) {\r\n\t\t\t\t\t\tthis.style[name] = old[name];\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\treturn dim;\r\n\t\t\t},\r\n\r\n\t\t\tgetGeneralSearchKey: function() {\r\n\t\t\t\tvar searchInput = $(Plugin.getOption('search.input'));\r\n\t\t\t\treturn $(searchInput).prop('name') || $(searchInput).prop('id');\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Get value by dot notation path string and to prevent undefined errors\r\n\t\t\t * @param path String Dot notation path in string\r\n\t\t\t * @param object Object to iterate\r\n\t\t\t * @returns {*}\r\n\t\t\t */\r\n\t\t\tgetObject: function(path, object) {\r\n\t\t\t\treturn path.split('.').reduce(function(obj, i) {\r\n\t\t\t\t\treturn obj !== null && typeof obj[i] !== 'undefined' ? obj[i] : null;\r\n\t\t\t\t}, object);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Extend object\r\n\t\t\t * @param obj\r\n\t\t\t * @param path\r\n\t\t\t * @param value\r\n\t\t\t * @returns {*}\r\n\t\t\t */\r\n\t\t\textendObj: function(obj, path, value) {\r\n\t\t\t\tvar levels = path.split('.'),\r\n\t\t\t\t\ti = 0;\r\n\r\n\t\t\t\tfunction createLevel(child) {\r\n\t\t\t\t\tvar name = levels[i++];\r\n\t\t\t\t\tif (typeof child[name] !== 'undefined' && child[name] !== null) {\r\n\t\t\t\t\t\tif (typeof child[name] !== 'object' &&\r\n\t\t\t\t\t\t\ttypeof child[name] !== 'function') {\r\n\t\t\t\t\t\t\tchild[name] = {};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tchild[name] = {};\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (i === levels.length) {\r\n\t\t\t\t\t\tchild[name] = value;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcreateLevel(child[name]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcreateLevel(obj);\r\n\t\t\t\treturn obj;\r\n\t\t\t},\r\n\r\n\t\t\t/********************\r\n\t\t\t ** PUBLIC API METHODS\r\n\t\t\t ********************/\r\n\r\n\t\t\t// delay timer\r\n\t\t\ttimer: 0,\r\n\r\n\t\t\t/**\r\n\t\t\t * Redraw datatable by recalculating its DOM elements, etc.\r\n\t\t\t * @returns {jQuery}\r\n\t\t\t */\r\n\t\t\tredraw: function() {\r\n\t\t\t\tPlugin.adjustCellsWidth.call();\r\n\t\t\t\tif (Plugin.isLocked()) {\r\n\t\t\t\t\tPlugin.adjustCellsHeight.call();\r\n\t\t\t\t}\r\n\t\t\t\tPlugin.adjustLockContainer.call();\r\n\t\t\t\tPlugin.initHeight.call();\r\n\t\t\t\treturn datatable;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Shortcode to reload\r\n\t\t\t * @returns {jQuery}\r\n\t\t\t */\r\n\t\t\tload: function() {\r\n\t\t\t\tPlugin.reload();\r\n\t\t\t\treturn datatable;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Datasource reload\r\n\t\t\t * @returns {jQuery}\r\n\t\t\t */\r\n\t\t\treload: function() {\r\n\t\t\t\tvar delay = (function() {\r\n\t\t\t\t\treturn function(callback, ms) {\r\n\t\t\t\t\t\tclearTimeout(Plugin.timer);\r\n\t\t\t\t\t\tPlugin.timer = setTimeout(callback, ms);\r\n\t\t\t\t\t};\r\n\t\t\t\t})();\r\n\t\t\t\tdelay(function() {\r\n\t\t\t\t\t// local only. remote pagination will skip this block\r\n\t\t\t\t\tif (!options.data.serverFiltering) {\r\n\t\t\t\t\t\tPlugin.localDataUpdate();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tPlugin.dataRender();\r\n\t\t\t\t\t$(datatable).trigger('m-datatable--on-reloaded');\r\n\t\t\t\t}, Plugin.getOption('search.delay'));\r\n\t\t\t\treturn datatable;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Get record by record ID\r\n\t\t\t * @param id\r\n\t\t\t * @returns {jQuery}\r\n\t\t\t */\r\n\t\t\tgetRecord: function(id) {\r\n\t\t\t\tif (typeof datatable.tableBody === 'undefined') datatable.tableBody = $(datatable.table).children('tbody');\r\n\t\t\t\t$(datatable.tableBody).find('.m-datatable__cell:first-child').each(function(i, cell) {\r\n\t\t\t\t\tif (id == $(cell).text()) {\r\n\t\t\t\t\t\tvar rowNumber = $(cell).closest('.m-datatable__row').index() + 1;\r\n\t\t\t\t\t\tdatatable.API.record = datatable.API.value = Plugin.getOneRow(datatable.tableBody, rowNumber);\r\n\t\t\t\t\t\treturn datatable;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\treturn datatable;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * @deprecated in v5.0.6\r\n\t\t\t * Get column of current record ID\r\n\t\t\t * @param columnName\r\n\t\t\t * @returns {jQuery}\r\n\t\t\t */\r\n\t\t\tgetColumn: function(columnName) {\r\n\t\t\t\tPlugin.setSelectedRecords();\r\n\t\t\t\tdatatable.API.value = $(datatable.API.record).find('[data-field=\"' + columnName + '\"]');\r\n\t\t\t\treturn datatable;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Destroy datatable to original DOM state before datatable was initialized\r\n\t\t\t * @returns {jQuery}\r\n\t\t\t */\r\n\t\t\tdestroy: function() {\r\n\t\t\t\t$(datatable).parent().find('.m-datatable__pager').remove();\r\n\t\t\t\tvar initialDatatable = $(datatable.initialDatatable).addClass('m-datatable--destroyed').show();\r\n\t\t\t\t$(datatable).replaceWith(initialDatatable);\r\n\t\t\t\tdatatable = initialDatatable;\r\n\t\t\t\t$(datatable).trigger('m-datatable--on-destroy');\r\n\t\t\t\tPlugin.isInit = false;\r\n\t\t\t\tinitialDatatable = null;\r\n\t\t\t\treturn initialDatatable;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Sort by column field\r\n\t\t\t * @param field\r\n\t\t\t * @param sort\r\n\t\t\t */\r\n\t\t\tsort: function(field, sort) {\r\n\t\t\t\tif (typeof sort === 'undefined') sort = 'asc';\r\n\t\t\t\t$(datatable.tableHead).\r\n\t\t\t\t\tfind('.m-datatable__cell[data-field=\"' + field + '\"]').\r\n\t\t\t\t\ttrigger('click');\r\n\t\t\t\treturn datatable;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * @deprecated in v5.0.6\r\n\t\t\t * Get current selected column value\r\n\t\t\t * @returns {jQuery}\r\n\t\t\t */\r\n\t\t\tgetValue: function() {\r\n\t\t\t\treturn $(datatable.API.value).text();\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Set checkbox active\r\n\t\t\t * @param cell JQuery selector or checkbox ID\r\n\t\t\t */\r\n\t\t\tsetActive: function(cell) {\r\n\t\t\t\tif (typeof cell === 'string') {\r\n\t\t\t\t\t// set by checkbox id\r\n\t\t\t\t\tcell = $(datatable.tableBody).\r\n\t\t\t\t\t\tfind('.m-checkbox--single > [type=\"checkbox\"][value=\"' + cell + '\"]');\r\n\t\t\t\t}\r\n\r\n\t\t\t\t$(cell).prop('checked', true);\r\n\r\n\t\t\t\t// normal table\r\n\t\t\t\tvar row = $(cell).\r\n\t\t\t\t\tclosest('.m-datatable__row').\r\n\t\t\t\t\taddClass('m-datatable__row--active');\r\n\r\n\t\t\t\tvar index = $(row).index() + 1;\r\n\t\t\t\t// lock table\r\n\t\t\t\t$(row).\r\n\t\t\t\t\tclosest('.m-datatable__lock').\r\n\t\t\t\t\tparent().\r\n\t\t\t\t\tfind('.m-datatable__row:nth-child(' + index + ')').\r\n\t\t\t\t\taddClass('m-datatable__row--active');\r\n\r\n\t\t\t\tvar ids = [];\r\n\t\t\t\t$(row).each(function(i, td) {\r\n\t\t\t\t\tvar id = $(td).find('.m-checkbox--single:not(.m-checkbox--all) > [type=\"checkbox\"]').val();\r\n\t\t\t\t\tif (typeof id !== 'undefined') {\r\n\t\t\t\t\t\tids.push(id);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\t$(datatable).trigger('m-datatable--on-check', [ids]);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Set checkbox inactive\r\n\t\t\t * @param cell JQuery selector or checkbox ID\r\n\t\t\t */\r\n\t\t\tsetInactive: function(cell) {\r\n\t\t\t\tif (typeof cell === 'string') {\r\n\t\t\t\t\t// set by checkbox id\r\n\t\t\t\t\tcell = $(datatable.tableBody).\r\n\t\t\t\t\t\tfind('.m-checkbox--single > [type=\"checkbox\"][value=\"' + cell + '\"]');\r\n\t\t\t\t}\r\n\r\n\t\t\t\t$(cell).prop('checked', false);\r\n\r\n\t\t\t\t// normal table\r\n\t\t\t\tvar row = $(cell).\r\n\t\t\t\t\tclosest('.m-datatable__row').\r\n\t\t\t\t\tremoveClass('m-datatable__row--active');\r\n\t\t\t\tvar index = $(row).index() + 1;\r\n\r\n\t\t\t\t// lock table\r\n\t\t\t\t$(row).\r\n\t\t\t\t\tclosest('.m-datatable__lock').\r\n\t\t\t\t\tparent().\r\n\t\t\t\t\tfind('.m-datatable__row:nth-child(' + index + ')').\r\n\t\t\t\t\tremoveClass('m-datatable__row--active');\r\n\r\n\t\t\t\tvar ids = [];\r\n\t\t\t\t$(row).each(function(i, td) {\r\n\t\t\t\t\tvar id = $(td).find('.m-checkbox--single:not(.m-checkbox--all) > [type=\"checkbox\"]').val();\r\n\t\t\t\t\tif (typeof id !== 'undefined') {\r\n\t\t\t\t\t\tids.push(id);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\t$(datatable).trigger('m-datatable--on-uncheck', [ids]);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Set all checkboxes active or inactive\r\n\t\t\t * @param active\r\n\t\t\t */\r\n\t\t\tsetActiveAll: function(active) {\r\n\t\t\t\t// todo; check if child table also will set active?\r\n\t\t\t\tvar checkboxes = $(datatable.table).find('.m-datatable__body .m-datatable__row').\r\n\t\t\t\t\tfind('.m-datatable__cell .m-checkbox [type=\"checkbox\"]');\r\n\t\t\t\tif (active) {\r\n\t\t\t\t\tPlugin.setActive(checkboxes);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tPlugin.setInactive(checkboxes);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * @deprecated in v5.0.6\r\n\t\t\t * Get selected rows which are active\r\n\t\t\t * @returns {jQuery}\r\n\t\t\t */\r\n\t\t\tsetSelectedRecords: function() {\r\n\t\t\t\tdatatable.API.record = $(datatable.tableBody).find('.m-datatable__row--active');\r\n\t\t\t\treturn datatable;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Get selected records\r\n\t\t\t * @returns {null}\r\n\t\t\t */\r\n\t\t\tgetSelectedRecords: function() {\r\n\t\t\t\t// support old method\r\n\t\t\t\tPlugin.setSelectedRecords();\r\n\t\t\t\tdatatable.API.record = datatable.rows('.m-datatable__row--active').nodes();\r\n\t\t\t\treturn datatable.API.record;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Get options by dots notation path\r\n\t\t\t * @param path String Dot notation path in string\r\n\t\t\t * @returns {*}\r\n\t\t\t */\r\n\t\t\tgetOption: function(path) {\r\n\t\t\t\treturn Plugin.getObject(path, options);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Set global options nodes by dots notation path\r\n\t\t\t * @param path\r\n\t\t\t * @param object\r\n\t\t\t */\r\n\t\t\tsetOption: function(path, object) {\r\n\t\t\t\toptions = Plugin.extendObj(options, path, object);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Search filter for local & remote\r\n\t\t\t * @param value\r\n\t\t\t * @param columns. Optional list of columns to be filtered.\r\n\t\t\t */\r\n\t\t\tsearch: function(value, columns) {\r\n\t\t\t\tif (typeof columns !== 'undefined') columns = $.makeArray(columns);\r\n\t\t\t\tvar delay = (function() {\r\n\t\t\t\t\treturn function(callback, ms) {\r\n\t\t\t\t\t\tclearTimeout(Plugin.timer);\r\n\t\t\t\t\t\tPlugin.timer = setTimeout(callback, ms);\r\n\t\t\t\t\t};\r\n\t\t\t\t})();\r\n\r\n\t\t\t\tdelay(function() {\r\n\t\t\t\t\t// get query parameters\r\n\t\t\t\t\tvar query = Plugin.getDataSourceQuery();\r\n\r\n\t\t\t\t\t// search not by columns\r\n\t\t\t\t\tif (typeof columns === 'undefined' && typeof value !== 'undefined') {\r\n\t\t\t\t\t\tvar key = Plugin.getGeneralSearchKey();\r\n\t\t\t\t\t\tquery[key] = value;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// search by columns, support multiple columns\r\n\t\t\t\t\tif (typeof columns === 'object') {\r\n\t\t\t\t\t\t$.each(columns, function(k, column) {\r\n\t\t\t\t\t\t\tquery[column] = value;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t// remove empty element from arrays\r\n\t\t\t\t\t\t$.each(query, function(k, v) {\r\n\t\t\t\t\t\t\tif (v === '') {\r\n\t\t\t\t\t\t\t\tdelete query[k];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tPlugin.setDataSourceQuery(query);\r\n\r\n\t\t\t\t\t// local filter only. remote pagination will skip this block\r\n\t\t\t\t\tif (!options.data.serverFiltering) {\r\n\t\t\t\t\t\tPlugin.localDataUpdate();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tPlugin.dataRender();\r\n\t\t\t\t}, Plugin.getOption('search.delay'));\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Set datasource params\r\n\t\t\t * @param param\r\n\t\t\t * @param value\r\n\t\t\t */\r\n\t\t\tsetDataSourceParam: function(param, value) {\r\n\t\t\t\tdatatable.API.params = $.extend({}, {\r\n\t\t\t\t\tpagination: {page: 1, perpage: Plugin.getOption('data.pageSize')},\r\n\t\t\t\t\tsort: Plugin.getDefaultSortColumn(),\r\n\t\t\t\t\tquery: {},\r\n\t\t\t\t}, datatable.API.params, Plugin.stateGet(Plugin.stateId));\r\n\r\n\t\t\t\tdatatable.API.params = Plugin.extendObj(datatable.API.params, param, value);\r\n\r\n\t\t\t\tPlugin.stateKeep(Plugin.stateId, datatable.API.params);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Get datasource params\r\n\t\t\t * @param param\r\n\t\t\t */\r\n\t\t\tgetDataSourceParam: function(param) {\r\n\t\t\t\tdatatable.API.params = $.extend({}, {\r\n\t\t\t\t\tpagination: {page: 1, perpage: Plugin.getOption('data.pageSize')},\r\n\t\t\t\t\tsort: Plugin.getDefaultSortColumn(),\r\n\t\t\t\t\tquery: {},\r\n\t\t\t\t}, datatable.API.params, Plugin.stateGet(Plugin.stateId));\r\n\r\n\t\t\t\tif (typeof param === 'string') {\r\n\t\t\t\t\treturn Plugin.getObject(param, datatable.API.params);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn datatable.API.params;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Shortcode to datatable.getDataSourceParam('query');\r\n\t\t\t * @returns {*}\r\n\t\t\t */\r\n\t\t\tgetDataSourceQuery: function() {\r\n\t\t\t\treturn Plugin.getDataSourceParam('query') || {};\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Shortcode to datatable.setDataSourceParam('query', query);\r\n\t\t\t * @param query\r\n\t\t\t */\r\n\t\t\tsetDataSourceQuery: function(query) {\r\n\t\t\t\tPlugin.setDataSourceParam('query', query);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Get current page number\r\n\t\t\t * @returns {number}\r\n\t\t\t */\r\n\t\t\tgetCurrentPage: function() {\r\n\t\t\t\treturn $(datatable.table).\r\n\t\t\t\t\tsiblings('.m-datatable__pager').\r\n\t\t\t\t\tlast().\r\n\t\t\t\t\tfind('.m-datatable__pager-nav').\r\n\t\t\t\t\tfind('.m-datatable__pager-link.m-datatable__pager-link--active').\r\n\t\t\t\t\tdata('page') || 1;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Get selected dropdown page size\r\n\t\t\t * @returns {*|number}\r\n\t\t\t */\r\n\t\t\tgetPageSize: function() {\r\n\t\t\t\treturn $(datatable.table).\r\n\t\t\t\t\tsiblings('.m-datatable__pager').\r\n\t\t\t\t\tlast().\r\n\t\t\t\t\tfind('.m-datatable__pager-size').\r\n\t\t\t\t\tval() || 10;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Get total rows\r\n\t\t\t */\r\n\t\t\tgetTotalRows: function() {\r\n\t\t\t\treturn datatable.API.params.pagination.total;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Get full dataset in grid\r\n\t\t\t * @returns {*|null|Array}\r\n\t\t\t */\r\n\t\t\tgetDataSet: function() {\r\n\t\t\t\treturn datatable.originalDataSet;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * @deprecated in v5.0.6\r\n\t\t\t * Hide column by column's field name\r\n\t\t\t * @param fieldName\r\n\t\t\t */\r\n\t\t\thideColumn: function(fieldName) {\r\n\t\t\t\t// add hide option for this column\r\n\t\t\t\t$.map(options.columns, function(column) {\r\n\t\t\t\t\tif (fieldName === column.field) {\r\n\t\t\t\t\t\tcolumn.responsive = {hidden: 'xl'};\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn column;\r\n\t\t\t\t});\r\n\t\t\t\t// hide current displayed column\r\n\t\t\t\tvar tds = $.grep($(datatable.table).find('.m-datatable__cell'), function(n, i) {\r\n\t\t\t\t\treturn fieldName === $(n).data('field');\r\n\t\t\t\t});\r\n\t\t\t\t$(tds).hide();\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * @deprecated in v5.0.6\r\n\t\t\t * Show column by column's field name\r\n\t\t\t * @param fieldName\r\n\t\t\t */\r\n\t\t\tshowColumn: function(fieldName) {\r\n\t\t\t\t// add hide option for this column\r\n\t\t\t\t$.map(options.columns, function(column) {\r\n\t\t\t\t\tif (fieldName === column.field) {\r\n\t\t\t\t\t\tdelete column.responsive;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn column;\r\n\t\t\t\t});\r\n\t\t\t\t// hide current displayed column\r\n\t\t\t\tvar tds = $.grep($(datatable.table).find('.m-datatable__cell'), function(n, i) {\r\n\t\t\t\t\treturn fieldName === $(n).data('field');\r\n\t\t\t\t});\r\n\t\t\t\t$(tds).show();\r\n\t\t\t},\r\n\r\n\t\t\tdestroyScroller: function(element) {\r\n\t\t\t\tif (typeof element === 'undefined') element = datatable.tableBody;\r\n\t\t\t\t$(element).each(function() {\r\n\t\t\t\t\tif ($(this).hasClass('mCustomScrollbar')) {\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tmApp.destroyScroller($(this));\r\n\t\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\t\tconsole.log(e);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * NEW API\r\n\t\t\t */\r\n\r\n\t\t\tnodeTr: [],\r\n\t\t\tnodeTd: [],\r\n\t\t\tnodeCols: [],\r\n\t\t\trecentNode: [],\r\n\r\n\t\t\ttable: function() {\r\n\t\t\t\treturn datatable.table;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Select a single row from the table\r\n\t\t\t * @param selector\r\n\t\t\t * @returns {jQuery}\r\n\t\t\t */\r\n\t\t\trow: function(selector) {\r\n\t\t\t\tPlugin.rows(selector);\r\n\t\t\t\tPlugin.nodeTr = Plugin.recentNode = $(Plugin.nodeTr).first();\r\n\t\t\t\treturn datatable;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Select multiple rows from the table\r\n\t\t\t * @param selector\r\n\t\t\t * @returns {jQuery}\r\n\t\t\t */\r\n\t\t\trows: function(selector) {\r\n\t\t\t\tPlugin.nodeTr = Plugin.recentNode = $(datatable.tableBody).find(selector).filter('.m-datatable__row');\r\n\t\t\t\treturn datatable;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Select a single column from the table\r\n\t\t\t * @param index zero-based index\r\n\t\t\t * @returns {jQuery}\r\n\t\t\t */\r\n\t\t\tcolumn: function(index) {\r\n\t\t\t\tPlugin.nodeCols = Plugin.recentNode = $(datatable.tableBody).find('.m-datatable__cell:nth-child(' + (index + 1) + ')');\r\n\t\t\t\treturn datatable;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Select multiple columns from the table\r\n\t\t\t * @param selector\r\n\t\t\t * @returns {jQuery}\r\n\t\t\t */\r\n\t\t\tcolumns: function(selector) {\r\n\t\t\t\tvar context = datatable.table;\r\n\t\t\t\tif (Plugin.nodeTr === Plugin.recentNode) {\r\n\t\t\t\t\tcontext = Plugin.nodeTr;\r\n\t\t\t\t}\r\n\t\t\t\tvar columns = $(context).find('.m-datatable__cell[data-field=\"' + selector + '\"]');\r\n\t\t\t\tif (columns.length > 0) {\r\n\t\t\t\t\tPlugin.nodeCols = Plugin.recentNode = columns;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tPlugin.nodeCols = Plugin.recentNode = $(context).find(selector).filter('.m-datatable__cell');\r\n\t\t\t\t}\r\n\t\t\t\treturn datatable;\r\n\t\t\t},\r\n\r\n\t\t\tcell: function(selector) {\r\n\t\t\t\tPlugin.cells(selector);\r\n\t\t\t\tPlugin.nodeTd = Plugin.recentNode = $(Plugin.nodeTd).first();\r\n\t\t\t\treturn datatable;\r\n\t\t\t},\r\n\r\n\t\t\tcells: function(selector) {\r\n\t\t\t\tvar cells = $(datatable.tableBody).find('.m-datatable__cell');\r\n\t\t\t\tif (typeof selector !== 'undefined') {\r\n\t\t\t\t\tcells = $(cells).filter(selector);\r\n\t\t\t\t}\r\n\t\t\t\tPlugin.nodeTd = Plugin.recentNode = cells;\r\n\t\t\t\treturn datatable;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Delete the selected row from the table\r\n\t\t\t * @returns {jQuery}\r\n\t\t\t */\r\n\t\t\tremove: function() {\r\n\t\t\t\tif ($(Plugin.nodeTr.length) && Plugin.nodeTr === Plugin.recentNode) {\r\n\t\t\t\t\t$(Plugin.nodeTr).remove();\r\n\t\t\t\t}\r\n\t\t\t\treturn datatable;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Show or hide the columns or rows\r\n\t\t\t */\r\n\t\t\tvisible: function(bool) {\r\n\t\t\t\tif ($(Plugin.recentNode.length)) {\r\n\t\t\t\t\tif (bool) {\r\n\t\t\t\t\t\tif (Plugin.recentNode === Plugin.nodeCols) {\r\n\t\t\t\t\t\t\tPlugin.setOption('columns.' + Plugin.recentNode.index() + '.responsive', {});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t$(Plugin.recentNode).show();\r\n\t\t\t\t\t\tPlugin.redraw();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (Plugin.recentNode === Plugin.nodeCols) {\r\n\t\t\t\t\t\t\tPlugin.setOption('columns.' + Plugin.recentNode.index() + '.responsive', {hidden: 'xl'});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t$(Plugin.recentNode).hide();\r\n\t\t\t\t\t\tPlugin.redraw();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Get the the DOM element for the selected rows or columns\r\n\t\t\t * @returns {Array}\r\n\t\t\t */\r\n\t\t\tnodes: function() {\r\n\t\t\t\treturn Plugin.recentNode;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * will be implemented soon\r\n\t\t\t * @returns {jQuery}\r\n\t\t\t */\r\n\t\t\tdataset: function() {\r\n\t\t\t\treturn datatable;\r\n\t\t\t},\r\n\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Public API methods can be used directly by datatable\r\n\t\t */\r\n\t\t$.each(Plugin, function(funcName, func) {\r\n\t\t\tdatatable[funcName] = func;\r\n\t\t});\r\n\r\n\t\t// initialize main datatable plugin\r\n\t\tif (typeof options !== 'undefined') {\r\n\t\t\tif (typeof options === 'string') {\r\n\t\t\t\tvar method = options;\r\n\t\t\t\tdatatable = $(this).data('mDatatable');\r\n\t\t\t\tif (typeof datatable !== 'undefined') {\r\n\t\t\t\t\toptions = datatable.options;\r\n\t\t\t\t\tPlugin[method].apply(this, Array.prototype.slice.call(arguments, 1));\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (!datatable.data('mDatatable') && !$(this).hasClass('m-datatable--loaded')) {\r\n\t\t\t\t\tdatatable.dataSet = null;\r\n\t\t\t\t\tdatatable.textAlign = {\r\n\t\t\t\t\t\tleft: 'm-datatable__cell--left',\r\n\t\t\t\t\t\tcenter: 'm-datatable__cell--center',\r\n\t\t\t\t\t\tright: 'm-datatable__cell--right',\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\t// merge default and user defined options\r\n\t\t\t\t\toptions = $.extend(true, {}, $.fn.mDatatable.defaults, options);\r\n\r\n\t\t\t\t\tdatatable.options = options;\r\n\r\n\t\t\t\t\t// init plugin process\r\n\t\t\t\t\tPlugin.init.apply(this, [options]);\r\n\r\n\t\t\t\t\t$(datatable.wrap).data('mDatatable', datatable);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// get existing instance datatable\r\n\t\t\tdatatable = $(this).data('mDatatable');\r\n\t\t\tif (typeof datatable === 'undefined') {\r\n\t\t\t\t$.error('mDatatable not initialized');\r\n\t\t\t}\r\n\t\t\toptions = datatable.options;\r\n\t\t}\r\n\r\n\t\treturn datatable;\r\n\t};\r\n\r\n\t// default options\r\n\t$.fn.mDatatable.defaults = {\r\n\t\t// datasource definition\r\n\t\tdata: {\r\n\t\t\ttype: 'local',\r\n\t\t\tsource: null,\r\n\t\t\tpageSize: 10, // display records per page\r\n\t\t\tsaveState: {\r\n\t\t\t\t// save datatable state(pagination, filtering, sorting, etc) in cookie or browser webstorage\r\n\t\t\t\tcookie: false,\r\n\t\t\t\twebstorage: true,\r\n\t\t\t},\r\n\r\n\t\t\tserverPaging: false,\r\n\t\t\tserverFiltering: false,\r\n\t\t\tserverSorting: false,\r\n\r\n\t\t\tautoColumns: false,\r\n\t\t},\r\n\r\n\t\t// layout definition\r\n\t\tlayout: {\r\n\t\t\ttheme: 'default', // datatable will support multiple themes and designs\r\n\t\t\tclass: 'm-datatable--brand', // custom wrapper class\r\n\t\t\tscroll: false, // enable/disable datatable scroll both horizontal and vertical when needed.\r\n\t\t\theight: null, // datatable's body's fixed height\r\n\t\t\tminHeight: 300,\r\n\t\t\tfooter: false, // display/hide footer\r\n\t\t\theader: true, // display/hide header\r\n\r\n\t\t\t// datatable custom scroll params\r\n\t\t\tsmoothScroll: {\r\n\t\t\t\tscrollbarShown: true,\r\n\t\t\t},\r\n\r\n\t\t\t// datatable spinner\r\n\t\t\tspinner: {\r\n\t\t\t\toverlayColor: '#000000',\r\n\t\t\t\topacity: 0,\r\n\t\t\t\ttype: 'loader',\r\n\t\t\t\tstate: 'brand',\r\n\t\t\t\tmessage: true,\r\n\t\t\t},\r\n\r\n\t\t\t// datatable UI icons\r\n\t\t\ticons: {\r\n\t\t\t\tsort: {asc: 'la la-arrow-up', desc: 'la la-arrow-down'},\r\n\t\t\t\tpagination: {\r\n\t\t\t\t\tnext: 'la la-angle-right',\r\n\t\t\t\t\tprev: 'la la-angle-left',\r\n\t\t\t\t\tfirst: 'la la-angle-double-left',\r\n\t\t\t\t\tlast: 'la la-angle-double-right',\r\n\t\t\t\t\tmore: 'la la-ellipsis-h',\r\n\t\t\t\t},\r\n\t\t\t\trowDetail: {expand: 'fa fa-caret-down', collapse: 'fa fa-caret-right'},\r\n\t\t\t},\r\n\t\t},\r\n\r\n\t\t// column sorting\r\n\t\tsortable: true,\r\n\r\n\t\t// resize column size with mouse drag coming soon)\r\n\t\tresizable: false,\r\n\r\n\t\t// column based filtering (coming soon)\r\n\t\tfilterable: false,\r\n\r\n\t\tpagination: true,\r\n\r\n\t\t// inline and bactch editing (cooming soon)\r\n\t\teditable: false,\r\n\r\n\t\t// columns definition\r\n\t\tcolumns: [],\r\n\r\n\t\tsearch: {\r\n\t\t\t// enable trigger search by keyup enter\r\n\t\t\tonEnter: false,\r\n\t\t\t// input text for search\r\n\t\t\tinput: null,\r\n\t\t\t// search delay in milliseconds\r\n\t\t\tdelay: 400,\r\n\t\t},\r\n\r\n\t\trows: {\r\n\t\t\t// deprecated\r\n\t\t\tcallback: function() {},\r\n\t\t\t// call before row template\r\n\t\t\tbeforeTemplate: function() {},\r\n\t\t\t// call after row template\r\n\t\t\tafterTemplate: function() {},\r\n\t\t\t// auto hide columns, if rows overflow. work on non locked columns\r\n\t\t\tautoHide: false,\r\n\t\t},\r\n\r\n\t\t// toolbar\r\n\t\ttoolbar: {\r\n\t\t\t// place pagination and displayInfo blocks according to the array order\r\n\t\t\tlayout: ['pagination', 'info'],\r\n\r\n\t\t\t// toolbar placement can be at top or bottom or both top and bottom repeated\r\n\t\t\tplacement: ['bottom'],  //'top', 'bottom'\r\n\r\n\t\t\t// toolbar items\r\n\t\t\titems: {\r\n\t\t\t\t// pagination\r\n\t\t\t\tpagination: {\r\n\t\t\t\t\t// pagination type(default or scroll)\r\n\t\t\t\t\ttype: 'default',\r\n\r\n\t\t\t\t\t// number of pages to display by breakpoints\r\n\t\t\t\t\tpages: {\r\n\t\t\t\t\t\tdesktop: {\r\n\t\t\t\t\t\t\tlayout: 'default',\r\n\t\t\t\t\t\t\tpagesNumber: 6,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\ttablet: {\r\n\t\t\t\t\t\t\tlayout: 'default',\r\n\t\t\t\t\t\t\tpagesNumber: 3,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tmobile: {\r\n\t\t\t\t\t\t\tlayout: 'compact',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\t// navigation buttons\r\n\t\t\t\t\tnavigation: {\r\n\t\t\t\t\t\tprev: true, // display prev link\r\n\t\t\t\t\t\tnext: true, // display next link\r\n\t\t\t\t\t\tfirst: true, // display first link\r\n\t\t\t\t\t\tlast: true // display last link\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\t// page size select\r\n\t\t\t\t\tpageSizeSelect: [] // display dropdown to select pagination size. -1 is used for \"ALl\" option\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// records info\r\n\t\t\t\tinfo: true,\r\n\t\t\t},\r\n\t\t},\r\n\r\n\t\t// here we will keep all strings and message used by datatable UI so developer can easiliy translate to any language.\r\n\t\t// By default the stirngs will be in the plugin source and here can override it\r\n\t\ttranslate: {\r\n\t\t\trecords: {\r\n\t\t\t\tprocessing: 'Please wait...',\r\n\t\t\t\tnoRecords: 'No records found',\r\n\t\t\t},\r\n\t\t\ttoolbar: {\r\n\t\t\t\tpagination: {\r\n\t\t\t\t\titems: {\r\n\t\t\t\t\t\tdefault: {\r\n\t\t\t\t\t\t\tfirst: 'First',\r\n\t\t\t\t\t\t\tprev: 'Previous',\r\n\t\t\t\t\t\t\tnext: 'Next',\r\n\t\t\t\t\t\t\tlast: 'Last',\r\n\t\t\t\t\t\t\tmore: 'More pages',\r\n\t\t\t\t\t\t\tinput: 'Page number',\r\n\t\t\t\t\t\t\tselect: 'Select page size',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tinfo: 'Displaying {{start}} - {{end}} of {{total}} records',\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\r\n\t\textensions: {},\r\n\t};\r\n\r\n}(jQuery));\n// jquery extension to add animation class into element\r\njQuery.fn.extend({\r\n    animateClass: function(animationName, callback) {\r\n        var animationEnd = 'webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend';\r\n        jQuery(this).addClass('animated ' + animationName).one(animationEnd, function() {\r\n            jQuery(this).removeClass('animated ' + animationName);\r\n        });\r\n\r\n        if (callback) {\r\n            jQuery(this).one(animationEnd, callback);\r\n        }\r\n    },\r\n    animateDelay: function(value) {\r\n        var vendors = ['webkit-', 'moz-', 'ms-', 'o-', ''];\r\n        for (var i = 0; i < vendors.length; i++) {\r\n            jQuery(this).css(vendors[i] + 'animation-delay', value);\r\n        }\r\n    },\r\n    animateDuration: function(value) {\r\n        var vendors = ['webkit-', 'moz-', 'ms-', 'o-', ''];\r\n        for (var i = 0; i < vendors.length; i++) {\r\n            jQuery(this).css(vendors[i] + 'animation-duration', value);\r\n        }\r\n    }\r\n});\n(function ($) {\r\n    // Plugin function\r\n    $.fn.mDropdown = function (options) {\r\n        // Plugin scope variable\r\n        var dropdown = {};\r\n        var element = $(this);\r\n\r\n        // Plugin class\r\n        var Plugin = {\r\n            /**\r\n             * Run\r\n             */\r\n            run: function (options) {\r\n                if (!element.data('dropdown')) {                      \r\n                    // create instance\r\n                    Plugin.init(options);\r\n                    Plugin.build();\r\n                    Plugin.setup();\r\n                    \r\n                    // assign instance to the element                    \r\n                    element.data('dropdown', dropdown);\r\n                } else {\r\n                    // get instance from the element\r\n                    dropdown = element.data('dropdown');\r\n                }               \r\n\r\n                return dropdown;\r\n            },\r\n\r\n            /**\r\n             * Initialize\r\n             */\r\n            init: function(options) {\r\n                dropdown.events = [];\r\n                dropdown.eventOne = false;\r\n                dropdown.close = element.find('.m-dropdown__close');\r\n                dropdown.toggle = element.find('.m-dropdown__toggle');\r\n                dropdown.arrow = element.find('.m-dropdown__arrow');\r\n                dropdown.wrapper = element.find('.m-dropdown__wrapper');\r\n                dropdown.scrollable = element.find('.m-dropdown__scrollable');\r\n                dropdown.defaultDropPos = element.hasClass('m-dropdown--up') ? 'up' : 'down';\r\n                dropdown.currentDropPos = dropdown.defaultDropPos;\r\n\r\n                dropdown.options = $.extend(true, {}, $.fn.mDropdown.defaults, options);\r\n                if (element.data('drop-auto') === true) {\r\n                    dropdown.options.dropAuto = true;\r\n                } else if (element.data('drop-auto') === false) {\r\n                    dropdown.options.dropAuto = false;\r\n                }               \r\n\r\n                if (dropdown.scrollable.length > 0) {\r\n                    if (dropdown.scrollable.data('min-height')) {\r\n                        dropdown.options.minHeight = dropdown.scrollable.data('min-height');\r\n                    }\r\n\r\n                    if (dropdown.scrollable.data('max-height')) {\r\n                        dropdown.options.maxHeight = dropdown.scrollable.data('max-height');\r\n                    }\r\n                }                \r\n            },\r\n\r\n            /**\r\n             * Build DOM and init event handlers\r\n             */\r\n            build: function () {\r\n                if (mUtil.isMobileDevice()) {\r\n                    if (element.data('dropdown-toggle') == 'hover' || element.data('dropdown-toggle') == 'click') { \r\n                        dropdown.options.toggle = 'click';\r\n                    } else {\r\n                        dropdown.options.toggle = 'click'; \r\n                        dropdown.toggle.click(Plugin.toggle); \r\n                    }\r\n                } else {\r\n                    if (element.data('dropdown-toggle') == 'hover') {     \r\n                        dropdown.options.toggle = 'hover';              \r\n                        element.mouseleave(Plugin.hide);\r\n                    } else if(element.data('dropdown-toggle') == 'click') {\r\n                        dropdown.options.toggle = 'click';                  \r\n                    } else {\r\n                        if (dropdown.options.toggle == 'hover') {\r\n                            element.mouseenter(Plugin.show);\r\n                            element.mouseleave(Plugin.hide);\r\n                        } else {\r\n                            dropdown.toggle.click(Plugin.toggle);      \r\n                        }\r\n                    }\r\n                }                \r\n\r\n                // handle dropdown close icon\r\n                if (dropdown.close.length) {\r\n                    dropdown.close.on('click', Plugin.hide);\r\n                }\r\n\r\n                // disable dropdown close\r\n                Plugin.disableClose();\r\n            }, \r\n\r\n            /**\r\n             * Setup dropdown\r\n             */\r\n            setup: function () {\r\n                if (dropdown.options.placement) {\r\n                    element.addClass('m-dropdown--' + dropdown.options.placement);\r\n                }\r\n\r\n                if (dropdown.options.align) {\r\n                    element.addClass('m-dropdown--align-' + dropdown.options.align);\r\n                } \r\n\r\n                if (dropdown.options.width) {\r\n                    dropdown.wrapper.css('width', dropdown.options.width);\r\n                }\r\n\r\n                if (element.data('dropdown-persistent')) {\r\n                    dropdown.options.persistent = true;\r\n                }\r\n        \r\n                // handle height\r\n                if (dropdown.options.minHeight) {\r\n                    dropdown.scrollable.css('min-height', dropdown.options.minHeight);                    \r\n                } \r\n\r\n                if (dropdown.options.maxHeight) {\r\n                    dropdown.scrollable.css('max-height', dropdown.options.maxHeight);     \r\n                    dropdown.scrollable.css('overflow-y', 'auto'); \r\n\r\n                    if (mUtil.isDesktopDevice()) {\r\n                        mApp.initScroller(dropdown.scrollable, {});                \r\n                    }   \r\n                }      \r\n\r\n                // set zindex\r\n                Plugin.setZindex();\r\n            },\r\n\r\n            /**\r\n             * sync \r\n             */\r\n            sync: function () {\r\n                $(element).data('dropdown', dropdown);\r\n            }, \r\n\r\n            /**\r\n             * Sync dropdown object with jQuery element\r\n             */\r\n            disableClose: function () {\r\n                element.on('click', '.m-dropdown--disable-close, .mCSB_1_scrollbar', function (e) {\r\n                    e.preventDefault();\r\n                    e.stopPropagation();\r\n                });\r\n            },\r\n\r\n            /**\r\n             * Toggle dropdown\r\n             */\r\n            toggle: function () {\r\n                if (dropdown.open) {\r\n                    return Plugin.hide();\r\n                } else {\r\n                    return Plugin.show();\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Set content\r\n             */\r\n            setContent: function (content) {\r\n                element.find('.m-dropdown__content').html(content);\r\n                \r\n                return dropdown;\r\n            },\r\n\r\n            /**\r\n             * Show dropdown\r\n             */\r\n            show: function() {\r\n                if (dropdown.options.toggle == 'hover' && element.data('hover')) {\r\n                    Plugin.clearHovered(); \r\n                    return dropdown;\r\n                }\r\n\r\n                if (dropdown.open) {\r\n                    return dropdown;\r\n                }\r\n\r\n                if (dropdown.arrow.length > 0) {\r\n                    Plugin.adjustArrowPos();\r\n                }\r\n\r\n                Plugin.eventTrigger('beforeShow'); \r\n\r\n                Plugin.hideOpened();\r\n\r\n                element.addClass('m-dropdown--open');\r\n\r\n                if (mUtil.isMobileDevice() && dropdown.options.mobileOverlay) {\r\n                    var zIndex = dropdown.wrapper.css('zIndex') - 1;\r\n                    var dropdownoff = $('<div class=\"m-dropdown__dropoff\"></div>');\r\n\r\n                    dropdownoff.css('zIndex', zIndex);\r\n                    dropdownoff.data('dropdown', element);\r\n                    element.data('dropoff', dropdownoff);\r\n                    element.after(dropdownoff);\r\n                    dropdownoff.click(function(e) {\r\n                        Plugin.hide();\r\n                        $(this).remove();                    \r\n                        e.preventDefault();\r\n                    });\r\n                } \r\n\r\n                element.focus();\r\n                element.attr('aria-expanded', 'true');\r\n                dropdown.open = true;\r\n\r\n                Plugin.handleDropPosition();          \r\n\r\n                Plugin.eventTrigger('afterShow');\r\n\r\n                return dropdown;\r\n            },\r\n\r\n            /**\r\n             * Clear dropdown hover\r\n             */\r\n            clearHovered: function () {\r\n                element.removeData('hover');\r\n                var timeout = element.data('timeout');\r\n                element.removeData('timeout');\r\n                clearTimeout(timeout);\r\n            },\r\n\r\n            /**\r\n             * Hide hovered dropdown\r\n             */\r\n            hideHovered: function(force) {\r\n                if (force) {\r\n                    if (Plugin.eventTrigger('beforeHide') === false) {\r\n                        // cancel hide\r\n                        return;\r\n                    }  \r\n\r\n                    Plugin.clearHovered();        \r\n                    element.removeClass('m-dropdown--open');\r\n                    dropdown.open = false;\r\n                    Plugin.eventTrigger('afterHide');\r\n                } else {\r\n                    if (Plugin.eventTrigger('beforeHide') === false) {\r\n                        // cancel hide\r\n                        return;\r\n                    }\r\n                    var timeout = setTimeout(function() {\r\n                        if (element.data('hover')) {\r\n                            Plugin.clearHovered();        \r\n                            element.removeClass('m-dropdown--open');\r\n                            dropdown.open = false;\r\n                            Plugin.eventTrigger('afterHide');\r\n                        }\r\n                    }, dropdown.options.hoverTimeout);\r\n\r\n                    element.data('hover', true);\r\n                    element.data('timeout', timeout); \r\n                }     \r\n            },\r\n\r\n            /**\r\n             * Hide clicked dropdown\r\n             */\r\n            hideClicked: function() {    \r\n                if (Plugin.eventTrigger('beforeHide') === false) {\r\n                    // cancel hide\r\n                    return;\r\n                }             \r\n                element.removeClass('m-dropdown--open');\r\n                if (element.data('dropoff')) {\r\n                    element.data('dropoff').remove();\r\n                }\r\n                dropdown.open = false;\r\n                Plugin.eventTrigger('afterHide');\r\n            },\r\n\r\n            /**\r\n             * Hide dropdown\r\n             */\r\n            hide: function(force) {\r\n                if (dropdown.open === false) {\r\n                    return dropdown;\r\n                }\r\n\r\n                if (dropdown.options.toggle == 'hover') {\r\n                    Plugin.hideHovered(force);\r\n                } else {\r\n                    Plugin.hideClicked();\r\n                }\r\n\r\n                if (dropdown.defaultDropPos == 'down' && dropdown.currentDropPos == 'up') {\r\n                    element.removeClass('m-dropdown--up');\r\n                    dropdown.arrow.prependTo(dropdown.wrapper);\r\n                    dropdown.currentDropPos = 'down';\r\n                }\r\n\r\n                return dropdown;                \r\n            },\r\n\r\n            /**\r\n             * Hide opened dropdowns\r\n             */\r\n            hideOpened: function() {\r\n                $('.m-dropdown.m-dropdown--open').each(function() {\r\n                    $(this).mDropdown().hide(true);\r\n                });\r\n            },\r\n\r\n            /**\r\n             * Adjust dropdown arrow positions\r\n             */\r\n            adjustArrowPos: function() {\r\n                var width = element.outerWidth();\r\n                var alignment = dropdown.arrow.hasClass('m-dropdown__arrow--right') ? 'right' : 'left';\r\n                var pos = 0;\r\n\r\n                if (dropdown.arrow.length > 0) {\r\n                    if (mUtil.isInResponsiveRange('mobile') && element.hasClass('m-dropdown--mobile-full-width')) {\r\n                        pos = element.offset().left + (width / 2) - Math.abs(dropdown.arrow.width() / 2) - parseInt(dropdown.wrapper.css('left'));\r\n                        dropdown.arrow.css('right', 'auto');    \r\n                        dropdown.arrow.css('left', pos);    \r\n                        dropdown.arrow.css('margin-left', 'auto');\r\n                        dropdown.arrow.css('margin-right', 'auto');\r\n                    } else if (dropdown.arrow.hasClass('m-dropdown__arrow--adjust')) {\r\n                        pos = width / 2 - Math.abs(dropdown.arrow.width() / 2);\r\n                        if (element.hasClass('m-dropdown--align-push')) {\r\n                            pos = pos + 20;\r\n                        }\r\n                        if (alignment == 'right') { \r\n                            dropdown.arrow.css('left', 'auto');  \r\n                            dropdown.arrow.css('right', pos);\r\n                        } else {                            \r\n                            dropdown.arrow.css('right', 'auto');  \r\n                            dropdown.arrow.css('left', pos);\r\n                        }  \r\n                    }                    \r\n                }\r\n            },\r\n\r\n            /**\r\n             * Change dropdown drop position\r\n             */\r\n            handleDropPosition: function() {\r\n                return;\r\n                \r\n                if (dropdown.options.dropAuto == true) {\r\n                    if (Plugin.isInVerticalViewport() === false) {\r\n                        if (dropdown.currentDropPos == 'up') {\r\n                            element.removeClass('m-dropdown--up');\r\n                            dropdown.arrow.prependTo(dropdown.wrapper);\r\n                            dropdown.currentDropPos = 'down';\r\n                        } else if (dropdown.currentDropPos == 'down') {\r\n                            element.addClass('m-dropdown--up');\r\n                            dropdown.arrow.appendTo(dropdown.wrapper);\r\n                            dropdown.currentDropPos = 'up'; \r\n                        }\r\n                    }\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Get zindex\r\n             */\r\n            setZindex: function() {\r\n                var oldZindex = dropdown.wrapper.css('z-index');\r\n                var newZindex = mUtil.getHighestZindex(element);\r\n                if (newZindex > oldZindex) {\r\n                    dropdown.wrapper.css('z-index', zindex);\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Check persistent\r\n             */\r\n            isPersistent: function () {\r\n                return dropdown.options.persistent;\r\n            },\r\n\r\n            /**\r\n             * Check persistent\r\n             */\r\n            isShown: function () {\r\n                return dropdown.open;\r\n            },\r\n\r\n            /**\r\n             * Check if dropdown is in viewport\r\n             */\r\n            isInVerticalViewport: function() {\r\n                var el = dropdown.wrapper;\r\n                var offset = el.offset();\r\n                var height = el.outerHeight();\r\n                var width = el.width();\r\n                var scrollable = el.find('[data-scrollable]');\r\n\r\n                if (scrollable.length) {\r\n                    if (scrollable.data('max-height')) {\r\n                        height += parseInt(scrollable.data('max-height'));\r\n                    } else if(scrollable.data('height')) {\r\n                        height += parseInt(scrollable.data('height'));\r\n                    }\r\n                }\r\n\r\n                return (offset.top + height < $(window).scrollTop() + $(window).height());\r\n            },\r\n\r\n            /**\r\n             * Trigger events\r\n             */\r\n            eventTrigger: function(name) {\r\n                for (i = 0; i < dropdown.events.length; i++) {\r\n                    var event = dropdown.events[i];\r\n                    if (event.name == name) {\r\n                        if (event.one == true) {\r\n                            if (event.fired == false) {\r\n                                dropdown.events[i].fired = true;\r\n                                return event.handler.call(this, dropdown);\r\n                            }\r\n                        } else {\r\n                            return  event.handler.call(this, dropdown);\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n\r\n            addEvent: function(name, handler, one) {\r\n                dropdown.events.push({\r\n                    name: name,\r\n                    handler: handler,\r\n                    one: one,\r\n                    fired: false\r\n                });\r\n\r\n                Plugin.sync();\r\n\r\n                return dropdown;\r\n            }\r\n        };\r\n\r\n        // Run plugin\r\n        Plugin.run.apply(this, [options]);\r\n\r\n        //////////////////////\r\n        // ** Public API ** //\r\n        //////////////////////\r\n       \r\n        /**\r\n         * Show dropdown\r\n         * @returns {mDropdown}\r\n         */\r\n        dropdown.show = function () {\r\n            return Plugin.show();\r\n        };\r\n\r\n        /**\r\n         * Hide dropdown\r\n         * @returns {mDropdown}\r\n         */\r\n        dropdown.hide = function () {\r\n            return Plugin.hide();\r\n        };\r\n\r\n        /**\r\n         * Toggle dropdown\r\n         * @returns {mDropdown}\r\n         */\r\n        dropdown.toggle = function () {\r\n            return Plugin.toggle();\r\n        };\r\n\r\n        /**\r\n         * Toggle dropdown\r\n         * @returns {mDropdown}\r\n         */\r\n        dropdown.isPersistent = function () {\r\n            return Plugin.isPersistent();\r\n        };\r\n\r\n        /**\r\n         * Check shown state\r\n         * @returns {mDropdown}\r\n         */\r\n        dropdown.isShown = function () {\r\n            return Plugin.isShown();\r\n        };\r\n\r\n        /**\r\n         * Check shown state\r\n         * @returns {mDropdown}\r\n         */\r\n        dropdown.fixDropPosition = function () {\r\n            return Plugin.handleDropPosition();\r\n        };\r\n\r\n        /**\r\n         * Set dropdown content\r\n         * @returns {mDropdown}\r\n         */\r\n        dropdown.setContent = function (content) {\r\n            return Plugin.setContent(content);\r\n        };\r\n\r\n        /**\r\n         * Set dropdown content\r\n         * @returns {mDropdown}\r\n         */\r\n        dropdown.on =  function (name, handler) {\r\n            return Plugin.addEvent(name, handler);\r\n        };\r\n\r\n        /**\r\n         * Set dropdown content\r\n         * @returns {mDropdown}\r\n         */\r\n        dropdown.one =  function (name, handler) {\r\n            return Plugin.addEvent(name, handler, true);\r\n        };        \r\n\r\n        return dropdown;\r\n    };\r\n\r\n    // default options\r\n    $.fn.mDropdown.defaults = {\r\n        toggle: 'click',\r\n        hoverTimeout: 300,\r\n        skin: 'default',\r\n        height: 'auto',\r\n        dropAuto: true,\r\n        maxHeight: false,\r\n        minHeight: false,\r\n        persistent: false,\r\n        mobileOverlay: true\r\n    };\r\n\r\n    // global init\r\n    if (mUtil.isMobileDevice()) {\r\n        $(document).on('click', '[data-dropdown-toggle=\"click\"] .m-dropdown__toggle, [data-dropdown-toggle=\"hover\"] .m-dropdown__toggle', function(e) { \r\n            e.preventDefault(); \r\n            $(this).parent('.m-dropdown').mDropdown().toggle(); \r\n        });\r\n    } else {\r\n        $(document).on('click', '[data-dropdown-toggle=\"click\"] .m-dropdown__toggle', function(e) { \r\n            e.preventDefault();\r\n            $(this).parent('.m-dropdown').mDropdown().toggle();   \r\n        });\r\n        $(document).on('mouseenter', '[data-dropdown-toggle=\"hover\"]', function(e) { \r\n             e.preventDefault();\r\n            $(this).mDropdown().toggle();\r\n        });\r\n    }\r\n\r\n    // handle global document click\r\n    $(document).on('click', function(e) {\r\n        $('.m-dropdown.m-dropdown--open').each(function() {\r\n            if (!$(this).data('dropdown')) {\r\n                return;\r\n            }        \r\n            \r\n            var target = $(e.target);\r\n            var dropdown = $(this).mDropdown();\r\n            var toggle = $(this).find('.m-dropdown__toggle');\r\n\r\n            if (toggle.length > 0 && target.is(toggle) !== true && toggle.find(target).length === 0 && target.find(toggle).length === 0 && dropdown.isPersistent() == false) {\r\n                dropdown.hide();     \r\n            } else if ($(this).find(target).length === 0) {\r\n                dropdown.hide();       \r\n            }\r\n        });\r\n    });\r\n}(jQuery));\n(function ($) {\r\n    // Plugin function\r\n    $.fn.mExample = function (options) {\r\n        // Plugin scope variable\r\n        var example = {};\r\n        var element = $(this);\r\n\r\n        // Plugin class\r\n        var Plugin = {\r\n            /**\r\n             * Run\r\n             */\r\n            run: function (options) {\r\n                if (!element.data('example')) {                      \r\n                    // create instance\r\n                    Plugin.init(options);\r\n                    Plugin.build();\r\n                    Plugin.setup();\r\n                    \r\n                    // assign instance to the element                    \r\n                    element.data('example', example);\r\n                } else {\r\n                    // get instance from the element\r\n                    example = element.data('example');\r\n                }               \r\n\r\n                return example;\r\n            },\r\n\r\n            /**\r\n             * Initialize\r\n             */\r\n            init: function(options) {\r\n                example.events = [];\r\n                example.scrollable = element.find('.m-example__scrollable');\r\n                example.options = $.extend(true, {}, $.fn.mExample.defaults, options);\r\n                if (example.scrollable.length > 0) {\r\n                    if (example.scrollable.data('data-min-height')) {\r\n                        example.options.minHeight = example.scrollable.data('data-min-height');\r\n                    }\r\n\r\n                    if (example.scrollable.data('data-max-height')) {\r\n                        example.options.maxHeight = example.scrollable.data('data-max-height');\r\n                    }\r\n                }                \r\n            },\r\n\r\n            /**\r\n             * Build DOM and init event handlers\r\n             */\r\n            build: function () {\r\n                if (mUtil.isMobileDevice()) {\r\n                    \r\n                } else {\r\n                    \r\n                }                \r\n            }, \r\n\r\n            /**\r\n             * Setup example\r\n             */\r\n            setup: function () {\r\n               \r\n            },\r\n\r\n            /**\r\n             * Trigger events\r\n             */\r\n            eventTrigger: function(name) {\r\n                for (i = 0; i < example.events.length; i++) {\r\n                    var event = example.events[i];\r\n                    if (event.name == name) {\r\n                        if (event.one == true) {\r\n                            if (event.fired == false) {\r\n                                example.events[i].fired = true;\r\n                                return event.handler.call(this, example);\r\n                            }\r\n                        } else {\r\n                            return  event.handler.call(this, example);\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n\r\n            addEvent: function(name, handler, one) {\r\n                example.events.push({\r\n                    name: name,\r\n                    handler: handler,\r\n                    one: one,\r\n                    fired: false\r\n                });\r\n\r\n                Plugin.sync();\r\n            }\r\n        };\r\n\r\n        // Run plugin\r\n        Plugin.run.apply(this, [options]);\r\n\r\n        //////////////////////\r\n        // ** Public API ** //\r\n        //////////////////////\r\n       \r\n\r\n        /**\r\n         * Set example content\r\n         * @returns {mExample}\r\n         */\r\n        example.on =  function (name, handler) {\r\n            return Plugin.addEvent(name, handler);\r\n        };\r\n\r\n        /**\r\n         * Set example content\r\n         * @returns {mExample}\r\n         */\r\n        example.one =  function (name, handler) {\r\n            return Plugin.addEvent(name, handler, true);\r\n        };        \r\n\r\n        return example;\r\n    };\r\n\r\n    // default options\r\n    $.fn.mExample.defaults = {\r\n       \r\n    };\r\n}(jQuery));\n(function($) {\r\n\r\n    // Plugin function\r\n    $.fn.mHeader = function(options) {\r\n        // Plugin scope variable\r\n        var header = this;\r\n        var element = $(this);\r\n\r\n        // Plugin class\r\n        var Plugin = {\r\n            /**\r\n             * Run plugin\r\n             * @returns {mHeader}\r\n             */\r\n            run: function(options) { \r\n                if (element.data('header')) {\r\n                    header = element.data('header');                \r\n                } else {\r\n                    // reset header\r\n                    Plugin.init(options);\r\n\r\n                    // reset header\r\n                    Plugin.reset();\r\n\r\n                    // build header\r\n                    Plugin.build();\r\n\r\n                    element.data('header', header);\r\n                } \r\n\r\n                return header;\r\n            },\r\n\r\n            /**\r\n             * Handles subheader click toggle\r\n             * @returns {mHeader}\r\n             */\r\n            init: function(options) {                \r\n                header.options = $.extend(true, {}, $.fn.mHeader.defaults, options);\r\n            },\r\n\r\n            /**\r\n             * Reset header\r\n             * @returns {mHeader}\r\n             */\r\n            build: function() {\r\n                Plugin.toggle();                   \r\n            },\r\n\r\n            toggle: function() {\r\n                var lastScrollTop = 0;\r\n\r\n                if (header.options.minimize.mobile === false && header.options.minimize.desktop === false) {\r\n                    return;\r\n                }          \r\n\r\n                $(window).scroll(function() {\r\n                    var offset = 0;\r\n\r\n                    if (mUtil.isInResponsiveRange('desktop')) {\r\n                        offset = header.options.offset.desktop;\r\n                        on = header.options.minimize.desktop.on;\r\n                        off = header.options.minimize.desktop.off;\r\n                    } else if (mUtil.isInResponsiveRange('tablet-and-mobile')) {\r\n                        offset = header.options.offset.mobile;\r\n                        on = header.options.minimize.mobile.on;\r\n                        off = header.options.minimize.mobile.off;\r\n                    }\r\n\r\n                    var st = $(this).scrollTop();\r\n\r\n                    if (\r\n                        (mUtil.isInResponsiveRange('tablet-and-mobile') && header.options.classic && header.options.classic.mobile) ||\r\n                        (mUtil.isInResponsiveRange('desktop') && header.options.classic && header.options.classic.desktop)\r\n                        \r\n                        ) {\r\n                        if (st > offset){ // down scroll mode\r\n                            $(\"body\").addClass(on);\r\n                            $(\"body\").removeClass(off);\r\n                        } else { // back scroll mode\r\n                            $(\"body\").addClass(off);\r\n                            $(\"body\").removeClass(on);\r\n                        }\r\n                    } else {\r\n                        if (st > offset && lastScrollTop < st){ // down scroll mode\r\n                            $(\"body\").addClass(on);\r\n                            $(\"body\").removeClass(off);\r\n                        } else { // back scroll mode\r\n                            $(\"body\").addClass(off);\r\n                            $(\"body\").removeClass(on);\r\n                        }\r\n                        \r\n                        lastScrollTop = st;\r\n                    }\r\n                });\r\n            },\r\n\r\n            /**\r\n             * Reset menu\r\n             * @returns {mMenu}\r\n             */\r\n            reset: function() {\r\n            }\r\n        };\r\n\r\n        // Run plugin\r\n        Plugin.run.apply(header, [options]);\r\n\r\n        //////////////////////\r\n        // ** Public API ** //\r\n        //////////////////////\r\n\r\n        /**\r\n         * Disable header for given time\r\n         * @returns {jQuery}\r\n         */\r\n        header.publicMethod = function() {\r\n        \t//return Plugin.publicMethod();\r\n        };\r\n\r\n        // Return plugin instance\r\n        return header;\r\n    };\r\n\r\n    // Plugin default options\r\n    $.fn.mHeader.defaults = {\r\n        classic: false,\r\n        offset: {\r\n            mobile: 150,\r\n            desktop: 200        \r\n        },\r\n        minimize: {\r\n            mobile: false,\r\n            desktop: false\r\n        }\r\n    }; \r\n}(jQuery));\n(function($) {\r\n\r\n    // Plugin function\r\n    $.fn.mMenu = function(options) {\r\n        // Plugin scope variable\r\n        var menu = this;\r\n        var element = $(this);\r\n\r\n        // Plugin class\r\n        var Plugin = {\r\n            /**\r\n             * Run plugin\r\n             * @returns {mMenu}\r\n             */\r\n            run: function(options, reinit) { \r\n                if (element.data('menu') && reinit !== true) {\r\n                    menu = element.data('menu');                \r\n                } else {\r\n                    // reset menu\r\n                    Plugin.init(options);\r\n                    \r\n                    // reset menu\r\n                    Plugin.reset();\r\n\r\n                    // build menu\r\n                    Plugin.build();\r\n\r\n                    element.data('menu', menu);\r\n                } \r\n\r\n                return menu;\r\n            },\r\n\r\n            /**\r\n             * Handles submenu click toggle\r\n             * @returns {mMenu}\r\n             */\r\n            init: function(options) { \r\n                menu.events = [];\r\n\r\n                // merge default and user defined options\r\n                menu.options = $.extend(true, {}, $.fn.mMenu.defaults, options);\r\n\r\n                // pause menu\r\n                menu.pauseDropdownHoverTime = 0;\r\n            },\r\n\r\n            /**\r\n             * Reset menu\r\n             * @returns {mMenu}\r\n             */\r\n            build: function() {\r\n                element.on('click', '.m-menu__toggle', Plugin.handleSubmenuAccordion);                \r\n\r\n                // dropdown mode(hoverable)\r\n                if (Plugin.getSubmenuMode() === 'dropdown' || Plugin.isConditionalSubmenuDropdown()) {   \r\n                \t// dropdown submenu - hover toggle\r\n\t                element.on({mouseenter: Plugin.handleSubmenuDrodownHoverEnter, mouseleave: Plugin.handleSubmenuDrodownHoverExit}, '[data-menu-submenu-toggle=\"hover\"]');\r\n\r\n\t                // dropdown submenu - click toggle\r\n\t                element.on('click', '[data-menu-submenu-toggle=\"click\"] > .m-menu__toggle, [data-menu-submenu-toggle=\"click\"] > .m-menu__link .m-menu__toggle', Plugin.handleSubmenuDropdownClick);\r\n                    element.on('click', '[data-menu-submenu-toggle=\"tab\"] > .m-menu__toggle, [data-menu-submenu-toggle=\"tab\"] > .m-menu__link .m-menu__toggle', Plugin.handleSubmenuDropdownTabClick);\r\n                }\r\n\r\n                element.find('.m-menu__item:not(.m-menu__item--submenu) > .m-menu__link:not(.m-menu__toggle):not(.m-menu__link--toggle-skip)').click(Plugin.handleLinkClick);             \r\n            },\r\n\r\n            /**\r\n             * Reset menu\r\n             * @returns {mMenu}\r\n             */\r\n            reset: function() {\r\n            \t// remove accordion handler\r\n            \telement.off('click', '.m-menu__toggle', Plugin.handleSubmenuAccordion);\r\n\r\n            \t// remove dropdown handlers\r\n            \telement.off({mouseenter: Plugin.handleSubmenuDrodownHoverEnter, mouseleave: Plugin.handleSubmenuDrodownHoverExit}, '[data-menu-submenu-toggle=\"hover\"]');\r\n\r\n                // dropdown submenu - click toggle\r\n                element.off('click', '[data-menu-submenu-toggle=\"click\"] > .m-menu__toggle, [data-menu-submenu-toggle=\"click\"] > .m-menu__link .m-menu__toggle', Plugin.handleSubmenuDropdownClick);\r\n                element.off('click', '[data-menu-submenu-toggle=\"tab\"] > .m-menu__toggle, [data-menu-submenu-toggle=\"tab\"] > .m-menu__link .m-menu__toggle', Plugin.handleSubmenuDropdownTabClick);\r\n\r\n                // reset mobile menu attributes\r\n                menu.find('.m-menu__submenu, .m-menu__inner').css('display', '');\r\n                menu.find('.m-menu__item--hover:not(.m-menu__item--tabs)').removeClass('m-menu__item--hover');\r\n                menu.find('.m-menu__item--open:not(.m-menu__item--expanded)').removeClass('m-menu__item--open');\r\n            },\r\n\r\n            /**\r\n            * Get submenu mode for current breakpoint and menu state\r\n            * @returns {mMenu}\r\n            */\r\n            getSubmenuMode: function() {                \r\n                if (mUtil.isInResponsiveRange('desktop')) {\r\n                    if (mUtil.isset(menu.options.submenu, 'desktop.state.body')) {\r\n                        if ($('body').hasClass(menu.options.submenu.desktop.state.body)) {\r\n                            return menu.options.submenu.desktop.state.mode;\r\n                        } else {\r\n                            return menu.options.submenu.desktop.default;\r\n                        }\r\n                    } else if (mUtil.isset(menu.options.submenu, 'desktop') ){\r\n                        return menu.options.submenu.desktop;\r\n                    }\r\n                } else if (mUtil.isInResponsiveRange('tablet') && mUtil.isset(menu.options.submenu, 'tablet')) {\r\n                    return menu.options.submenu.tablet;\r\n                } else if (mUtil.isInResponsiveRange('mobile') && mUtil.isset(menu.options.submenu, 'mobile')) {\r\n                    return menu.options.submenu.mobile;\r\n                } else {\r\n                    return false;\r\n                }\r\n            },\r\n\r\n            /**\r\n            * Get submenu mode for current breakpoint and menu state\r\n            * @returns {mMenu}\r\n            */\r\n            isConditionalSubmenuDropdown: function() {\r\n                if (mUtil.isInResponsiveRange('desktop') && mUtil.isset(menu.options.submenu, 'desktop.state.body')) {\r\n                    return true;\r\n                } else {\r\n                    return false;    \r\n                }                \r\n            },\r\n\r\n            /**\r\n             * Handles menu link click\r\n             * @returns {mMenu}\r\n             */\r\n            handleLinkClick: function(e) {    \r\n                if (Plugin.eventTrigger('linkClick', $(this)) === false) {\r\n                    e.preventDefault();\r\n                };\r\n\r\n                if (Plugin.getSubmenuMode() === 'dropdown' || Plugin.isConditionalSubmenuDropdown()) { \r\n                    Plugin.handleSubmenuDropdownClose(e, $(this));\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Handles submenu hover toggle\r\n             * @returns {mMenu}\r\n             */\r\n            handleSubmenuDrodownHoverEnter: function(e) {\r\n                if (Plugin.getSubmenuMode() === 'accordion') {\r\n                    return;\r\n                }\r\n\r\n                if (menu.resumeDropdownHover() === false) {\r\n                    return;\r\n                }               \r\n\r\n                var item = $(this);\r\n\r\n                Plugin.showSubmenuDropdown(item);\r\n\r\n                if (item.data('hover') == true) {\r\n                    Plugin.hideSubmenuDropdown(item, false);\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Handles submenu hover toggle\r\n             * @returns {mMenu}\r\n             */\r\n            handleSubmenuDrodownHoverExit: function(e) {\r\n                if (menu.resumeDropdownHover() === false) {\r\n                    return;\r\n                }\r\n\r\n                if (Plugin.getSubmenuMode() === 'accordion') {\r\n                    return;\r\n                }\r\n\r\n                var item = $(this);\r\n                var time = menu.options.dropdown.timeout;\r\n\r\n                var timeout = setTimeout(function() {\r\n                    if (item.data('hover') == true) {\r\n                        Plugin.hideSubmenuDropdown(item, true);\r\n                    }\r\n                }, time);\r\n\r\n                item.data('hover', true);\r\n                item.data('timeout', timeout);\r\n            },\r\n\r\n            /**\r\n             * Handles submenu click toggle\r\n             * @returns {mMenu}\r\n             */\r\n            handleSubmenuDropdownClick: function(e) {\r\n                if (Plugin.getSubmenuMode() === 'accordion') {\r\n                    return;\r\n                }\r\n\r\n                var item = $(this).closest('.m-menu__item');\r\n\r\n                if (item.data('menu-submenu-mode') == 'accordion') {\r\n                    return;   \r\n                }\r\n\r\n                if (item.hasClass('m-menu__item--hover') == false) {\r\n                    item.addClass('m-menu__item--open-dropdown');\r\n                    Plugin.showSubmenuDropdown(item);\r\n                } else {\r\n                    item.removeClass('m-menu__item--open-dropdown');\r\n                    Plugin.hideSubmenuDropdown(item, true);\r\n                }\r\n\r\n                e.preventDefault();\r\n            },\r\n\r\n            /**\r\n             * Handles tab click toggle\r\n             * @returns {mMenu}\r\n             */\r\n            handleSubmenuDropdownTabClick: function(e) {\r\n                if (Plugin.getSubmenuMode() === 'accordion') {\r\n                    return;\r\n                }\r\n\r\n                var item = $(this).closest('.m-menu__item');\r\n\r\n                if (item.data('menu-submenu-mode') == 'accordion') {\r\n                    return;   \r\n                }\r\n\r\n                if (item.hasClass('m-menu__item--hover') == false) {\r\n                    item.addClass('m-menu__item--open-dropdown');\r\n                    Plugin.showSubmenuDropdown(item);\r\n                } \r\n\r\n                e.preventDefault();\r\n            },\r\n\r\n            /**\r\n             * Handles submenu dropdown close on link click\r\n             * @returns {mMenu}\r\n             */\r\n            handleSubmenuDropdownClose: function(e, el) {\r\n                // exit if its not submenu dropdown mode\r\n                if (Plugin.getSubmenuMode() === 'accordion') {\r\n                    return;\r\n                }\r\n\r\n                var shown = element.find('.m-menu__item.m-menu__item--submenu.m-menu__item--hover:not(.m-menu__item--tabs)');\r\n\r\n                // check if currently clicked link's parent item ha\r\n                if (shown.length > 0 && el.hasClass('m-menu__toggle') === false && el.find('.m-menu__toggle').length === 0) {\r\n                    // close opened dropdown menus\r\n                    shown.each(function() {\r\n                        Plugin.hideSubmenuDropdown($(this), true);    \r\n                    });                     \r\n                }\r\n            },\r\n\r\n            /**\r\n             * helper functions\r\n             * @returns {mMenu}\r\n             */\r\n            handleSubmenuAccordion: function(e, el) {\r\n                var item = el ? $(el) : $(this);\r\n\r\n                if (Plugin.getSubmenuMode() === 'dropdown' && item.closest('.m-menu__item').data('menu-submenu-mode') != 'accordion') {\r\n                    e.preventDefault();\r\n                    return;\r\n                }\r\n\r\n                var li = item.closest('li');\r\n                var submenu = li.children('.m-menu__submenu, .m-menu__inner');\r\n\r\n                if (item.closest('.m-menu__item').hasClass('m-menu__item--open-always')) {\r\n                    return;\r\n                }\r\n\r\n                if (submenu.length > 0) {\r\n                    e.preventDefault();\r\n                    var speed = menu.options.accordion.slideSpeed;\r\n                    var hasClosables = false;\r\n                    \r\n                    if (li.hasClass('m-menu__item--open') === false) {\r\n                        // hide other accordions\r\n                        if (menu.options.accordion.expandAll === false) {\r\n                            var closables = item.closest('.m-menu__nav, .m-menu__subnav').find('> .m-menu__item.m-menu__item--open.m-menu__item--submenu:not(.m-menu__item--expanded):not(.m-menu__item--open-always)');\r\n                            closables.each(function() {\r\n                                $(this).children('.m-menu__submenu').slideUp(speed, function() {\r\n                                    Plugin.scrollToItem(item);\r\n                                });                                \r\n                                $(this).removeClass('m-menu__item--open');\r\n                            });\r\n\r\n                            if (closables.length > 0) {\r\n                                hasClosables = true;\r\n                            }\r\n                        }                         \r\n\r\n                        if (hasClosables) {\r\n                            submenu.slideDown(speed, function() {\r\n                                Plugin.scrollToItem(item);\r\n                            }); \r\n                            li.addClass('m-menu__item--open');\r\n                        } else {\r\n                            submenu.slideDown(speed, function() {\r\n                                Plugin.scrollToItem(item);\r\n                            });\r\n                            li.addClass('m-menu__item--open');\r\n                        }                        \r\n                    } else {  \r\n                        submenu.slideUp(speed, function() {\r\n                             Plugin.scrollToItem(item);\r\n                        });                        \r\n                        li.removeClass('m-menu__item--open');                  \r\n                    }\r\n                }\r\n            },     \r\n\r\n            /**\r\n             * scroll to item function\r\n             * @returns {mMenu}\r\n             */\r\n            scrollToItem: function(item) {\r\n                // handle auto scroll for accordion submenus\r\n                if (mUtil.isInResponsiveRange('desktop') && menu.options.accordion.autoScroll && !element.data('menu-scrollable')) {                        \r\n                    mApp.scrollToViewport(item);\r\n                }\r\n            },\r\n\r\n            /**\r\n             * helper functions\r\n             * @returns {mMenu}\r\n             */\r\n            hideSubmenuDropdown: function(item, classAlso) {\r\n                // remove submenu activation class\r\n                if (classAlso) {\r\n                    item.removeClass('m-menu__item--hover');\r\n                    item.removeClass('m-menu__item--active-tab');\r\n                }\r\n                // clear timeout\r\n                item.removeData('hover');\r\n                if (item.data('menu-dropdown-toggle-class')) {\r\n                    $('body').removeClass(item.data('menu-dropdown-toggle-class'));\r\n                }\r\n                var timeout = item.data('timeout');\r\n                item.removeData('timeout');\r\n                clearTimeout(timeout);\r\n            },\r\n\r\n            /**\r\n             * helper functions\r\n             * @returns {mMenu}\r\n             */\r\n            showSubmenuDropdown: function(item) {\r\n                // close active submenus\r\n                element.find('.m-menu__item--submenu.m-menu__item--hover, .m-menu__item--submenu.m-menu__item--active-tab').each(function() {\r\n                    var el = $(this);\r\n                    if (item.is(el) || el.find(item).length > 0 || item.find(el).length > 0) {\r\n                        return;\r\n                    } else {\r\n                        Plugin.hideSubmenuDropdown(el, true); \r\n                    }\r\n                });\r\n\r\n                // adjust submenu position\r\n                Plugin.adjustSubmenuDropdownArrowPos(item);\r\n                \r\n                // add submenu activation class\r\n                item.addClass('m-menu__item--hover');\r\n\r\n                if (item.data('menu-dropdown-toggle-class')) {\r\n                    $('body').addClass(item.data('menu-dropdown-toggle-class'));\r\n                } \r\n\r\n                // handle auto scroll for accordion submenus\r\n                if (Plugin.getSubmenuMode() === 'accordion' && menu.options.accordion.autoScroll) {\r\n                    mApp.scrollTo(item.children('.m-menu__item--submenu'));\r\n                }              \r\n            },                \r\n\r\n            /**\r\n             * Handles submenu click toggle\r\n             * @returns {mMenu}\r\n             */\r\n            resize: function(e) {\r\n                if (Plugin.getSubmenuMode() !== 'dropdown') {\r\n                    return;\r\n                }\r\n\r\n                var resize = element.find('> .m-menu__nav > .m-menu__item--resize');\r\n                var submenu = resize.find('> .m-menu__submenu');\r\n                var breakpoint;\r\n                var currentWidth = mUtil.getViewPort().width;\r\n                var itemsNumber = element.find('> .m-menu__nav > .m-menu__item').length - 1;\r\n                var check;\r\n\r\n                if (\r\n                    Plugin.getSubmenuMode() == 'dropdown' && \r\n                    (\r\n                        (mUtil.isInResponsiveRange('desktop') && mUtil.isset(menu.options, 'resize.desktop') && (check = menu.options.resize.desktop) && currentWidth <= (breakpoint = resize.data('menu-resize-desktop-breakpoint'))) ||\r\n                        (mUtil.isInResponsiveRange('tablet') && mUtil.isset(menu.options, 'resize.tablet') && (check = menu.options.resize.tablet) && currentWidth <= (breakpoint = resize.data('menu-resize-tablet-breakpoint'))) ||\r\n                        (mUtil.isInResponsiveRange('mobile') && mUtil.isset(menu.options, 'resize.mobile') && (check = menu.options.resize.mobile) && currentWidth <= (breakpoint = resize.data('menu-resize-mobile-breakpoint')))\r\n                    )\r\n                    ) {\r\n                 \r\n                    var moved = submenu.find('> .m-menu__subnav > .m-menu__item').length; // currently move\r\n                    var left = element.find('> .m-menu__nav > .m-menu__item:not(.m-menu__item--resize)').length; // currently left\r\n                    var total = moved + left;\r\n\r\n                    if (check.apply() === true) {\r\n                        // return\r\n                        if (moved > 0) {\r\n                            submenu.find('> .m-menu__subnav > .m-menu__item').each(function() {\r\n                                var item = $(this);\r\n\r\n                                var elementsNumber = submenu.find('> .m-menu__nav > .m-menu__item:not(.m-menu__item--resize)').length;\r\n                                element.find('> .m-menu__nav > .m-menu__item:not(.m-menu__item--resize)').eq(elementsNumber - 1).after(item);\r\n\r\n                                if (check.apply() === false) {\r\n                                    item.appendTo(submenu.find('> .m-menu__subnav'));\r\n                                    return false;\r\n                                }         \r\n\r\n                                moved--;\r\n                                left++;                        \r\n                            });\r\n                        }\r\n                    } else {\r\n                        // move\r\n                        if (left > 0) {\r\n                            var items = element.find('> .m-menu__nav > .m-menu__item:not(.m-menu__item--resize)');\r\n                            var index = items.length - 1;\r\n                                \r\n                            for(var i = 0; i < items.length; i++) {\r\n                                var item = $(items.get(index)); \r\n                                index--;\r\n\r\n                                if (check.apply() === true) {\r\n                                    break;\r\n                                }\r\n\r\n                                item.appendTo(submenu.find('> .m-menu__subnav'));\r\n\r\n                                moved++;\r\n                                left--; \r\n                            } \r\n                        }\r\n                    }\r\n\r\n                    if (moved > 0) {\r\n                        resize.show();  \r\n                    } else {\r\n                        resize.hide();\r\n                    }                   \r\n                } else {    \r\n                    submenu.find('> .m-menu__subnav > .m-menu__item').each(function() {\r\n                        var elementsNumber = submenu.find('> .m-menu__subnav > .m-menu__item').length;\r\n                        element.find('> .m-menu__nav > .m-menu__item').get(elementsNumber).after($(this));\r\n                    });\r\n\r\n                    resize.hide();\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Handles submenu slide toggle\r\n             * @returns {mMenu}\r\n             */\r\n            createSubmenuDropdownClickDropoff: function(el) {\r\n                var zIndex = el.find('> .m-menu__submenu').css('zIndex') - 1;\r\n                var dropoff = $('<div class=\"m-menu__dropoff\" style=\"background: transparent; position: fixed; top: 0; bottom: 0; left: 0; right: 0; z-index: ' + zIndex + '\"></div>');\r\n                $('body').after(dropoff);\r\n                dropoff.on('click', function(e) {\r\n                    e.stopPropagation();\r\n                    e.preventDefault();\r\n                    $(this).remove();\r\n                    Plugin.hideSubmenuDropdown(el, true);                    \r\n                });\r\n            },\r\n\r\n            /**\r\n             * Handles submenu click toggle\r\n             * @returns {mMenu}\r\n             */\r\n            adjustSubmenuDropdownArrowPos: function(item) {                \r\n                var arrow = item.find('> .m-menu__submenu > .m-menu__arrow.m-menu__arrow--adjust');\r\n                var submenu = item.find('> .m-menu__submenu');\r\n                var subnav = item.find('> .m-menu__submenu > .m-menu__subnav');\r\n                \r\n                if (arrow.length > 0) {\r\n                    var pos;\r\n                    var link = item.children('.m-menu__link');\r\n\r\n                    if (submenu.hasClass('m-menu__submenu--classic') || submenu.hasClass('m-menu__submenu--fixed')) { \r\n                        if (submenu.hasClass('m-menu__submenu--right')) {\r\n                            pos = item.outerWidth() / 2;\r\n                            if (submenu.hasClass('m-menu__submenu--pull')) {\r\n                                pos = pos + Math.abs(parseInt(submenu.css('margin-right')));    \r\n                            }  \r\n                            pos = submenu.width() - pos;\r\n                        } else if (submenu.hasClass('m-menu__submenu--left')) {\r\n                            pos = item.outerWidth() / 2;\r\n                            if (submenu.hasClass('m-menu__submenu--pull')) {\r\n                                pos = pos + Math.abs(parseInt(submenu.css('margin-left')));    \r\n                            } \r\n                        }\r\n                    } else  {\r\n                        if (submenu.hasClass('m-menu__submenu--center') || submenu.hasClass('m-menu__submenu--full')) {\r\n                            pos = item.offset().left - ((mUtil.getViewPort().width - submenu.outerWidth()) / 2);\r\n                            pos = pos + (item.outerWidth() / 2);\r\n                        } else if (submenu.hasClass('m-menu__submenu--left')) {\r\n                            // to do\r\n                        } else if (submenu.hasClass('m-menu__submenu--right')) {\r\n                            // to do\r\n                        }\r\n                    } \r\n\r\n                    arrow.css('left', pos);\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Handles submenu hover toggle\r\n             * @returns {mMenu}\r\n             */\r\n            pauseDropdownHover: function(time) {\r\n            \tvar date = new Date();\r\n\r\n            \tmenu.pauseDropdownHoverTime = date.getTime() + time;\r\n            },\r\n\r\n            /**\r\n             * Handles submenu hover toggle\r\n             * @returns {mMenu}\r\n             */\r\n            resumeDropdownHover: function() {\r\n            \tvar date = new Date();\r\n\r\n            \treturn (date.getTime() > menu.pauseDropdownHoverTime ? true : false);\r\n            },\r\n\r\n            /**\r\n             * Reset menu's current active item\r\n             * @returns {mMenu}\r\n             */\r\n            resetActiveItem: function(item) {\r\n                element.find('.m-menu__item--active').each(function() {\r\n                    $(this).removeClass('m-menu__item--active');\r\n                    $(this).children('.m-menu__submenu').css('display', '');\r\n\r\n                    $(this).parents('.m-menu__item--submenu').each(function() {\r\n                        $(this).removeClass('m-menu__item--open');\r\n                        $(this).children('.m-menu__submenu').css('display', '');\r\n                    });\r\n                });             \r\n\r\n                // close open submenus\r\n                if (menu.options.accordion.expandAll === false) {\r\n                    element.find('.m-menu__item--open').each(function() {\r\n                        $(this).removeClass('m-menu__item--open');\r\n                    });\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Sets menu's active item\r\n             * @returns {mMenu}\r\n             */\r\n            setActiveItem: function(item) {\r\n                // reset current active item\r\n                Plugin.resetActiveItem();\r\n\r\n                var item = $(item);\r\n                item.addClass('m-menu__item--active');\r\n                item.parents('.m-menu__item--submenu').each(function() {\r\n                    $(this).addClass('m-menu__item--open');\r\n                });\r\n            },\r\n\r\n            /**\r\n             * Returns page breadcrumbs for the menu's active item\r\n             * @returns {mMenu}\r\n             */\r\n            getBreadcrumbs: function(item) {\r\n                var breadcrumbs = [];\r\n                var item = $(item);\r\n                var link = item.children('.m-menu__link');\r\n\r\n                breadcrumbs.push({\r\n                    text: link.find('.m-menu__link-text').html(), \r\n                    title: link.attr('title'),\r\n                    href: link.attr('href')\r\n                });\r\n\r\n                item.parents('.m-menu__item--submenu').each(function() {\r\n                    var submenuLink = $(this).children('.m-menu__link');\r\n                    breadcrumbs.push({\r\n                        text: submenuLink.find('.m-menu__link-text').html(), \r\n                        title: submenuLink.attr('title'),\r\n                        href: submenuLink.attr('href')\r\n                    });\r\n                });\r\n\r\n                breadcrumbs.reverse();\r\n\r\n                return breadcrumbs;\r\n            },\r\n\r\n            /**\r\n             * Returns page title for the menu's active item\r\n             * @returns {mMenu}\r\n             */\r\n            getPageTitle: function(item) {\r\n                item = $(item);       \r\n\r\n                return item.children('.m-menu__link').find('.m-menu__link-text').html();\r\n            },\r\n\r\n            /**\r\n             * Sync \r\n             */\r\n            sync: function () {\r\n                $(element).data('menu', menu);\r\n            }, \r\n\r\n            /**\r\n             * Trigger events\r\n             */\r\n            eventTrigger: function(name, args) {\r\n                for (i = 0; i < menu.events.length; i++) {\r\n                    var event = menu.events[i];\r\n                    if (event.name == name) {\r\n                        if (event.one == true) {\r\n                            if (event.fired == false) {\r\n                                menu.events[i].fired = true;\r\n                                return event.handler.call(this, menu, args);\r\n                            }\r\n                        } else {\r\n                            return  event.handler.call(this, menu, args);\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n\r\n            addEvent: function(name, handler, one) {\r\n                menu.events.push({\r\n                    name: name,\r\n                    handler: handler,\r\n                    one: one,\r\n                    fired: false\r\n                });\r\n\r\n                Plugin.sync();\r\n            }\r\n        };\r\n\r\n        // Run plugin\r\n        Plugin.run.apply(menu, [options]);\r\n\r\n        // Handle plugin on window resize\r\n        if (typeof(options)  !== \"undefined\") {\r\n            $(window).resize(function() {\r\n                Plugin.run.apply(menu, [options, true]);\r\n            });  \r\n        }        \r\n\r\n        //////////////////////\r\n        // ** Public API ** //\r\n        //////////////////////\r\n\r\n        /**\r\n         * Set active menu item\r\n         */\r\n        menu.setActiveItem = function(item) {\r\n            return Plugin.setActiveItem(item);\r\n        };\r\n\r\n        /**\r\n         * Set breadcrumb for menu item\r\n         */\r\n        menu.getBreadcrumbs = function(item) {\r\n            return Plugin.getBreadcrumbs(item);\r\n        };\r\n\r\n        /**\r\n         * Set page title for menu item\r\n         */\r\n        menu.getPageTitle = function(item) {\r\n            return Plugin.getPageTitle(item);\r\n        };\r\n\r\n        /**\r\n         * Get submenu mode\r\n         */\r\n        menu.getSubmenuMode = function() {\r\n            return Plugin.getSubmenuMode();\r\n        };\r\n\r\n        /**\r\n         * Hide dropdown submenu\r\n         * @returns {jQuery}\r\n         */\r\n        menu.hideDropdown = function(item) {\r\n            Plugin.hideSubmenuDropdown(item, true);\r\n        };\r\n\r\n        /**\r\n         * Disable menu for given time\r\n         * @returns {jQuery}\r\n         */\r\n        menu.pauseDropdownHover = function(time) {\r\n        \tPlugin.pauseDropdownHover(time);\r\n        };\r\n\r\n        /**\r\n         * Disable menu for given time\r\n         * @returns {jQuery}\r\n         */\r\n        menu.resumeDropdownHover = function() {\r\n        \treturn Plugin.resumeDropdownHover();\r\n        };\r\n\r\n        /**\r\n         * Register event\r\n         */\r\n        menu.on =  function (name, handler) {\r\n            return Plugin.addEvent(name, handler);\r\n        };\r\n\r\n        // Return plugin instance\r\n        return menu;\r\n    };\r\n\r\n    // Plugin default options\r\n    $.fn.mMenu.defaults = {\r\n        // accordion submenu mode\r\n        accordion: {   \r\n            slideSpeed: 200,  // accordion toggle slide speed in milliseconds\r\n            autoScroll: true, // enable auto scrolling(focus) to the clicked menu item\r\n            expandAll: true   // allow having multiple expanded accordions in the menu\r\n        },\r\n        \r\n        // dropdown submenu mode\r\n        dropdown: {\r\n            timeout: 500  // timeout in milliseconds to show and hide the hoverable submenu dropdown\r\n        }\r\n    }; \r\n\r\n    // Plugin global lazy initialization\r\n    $(document).on('click', function(e) {\r\n        $('.m-menu__nav .m-menu__item.m-menu__item--submenu.m-menu__item--hover:not(.m-menu__item--tabs)[data-menu-submenu-toggle=\"click\"]').each(function() {\r\n            var  element = $(this).closest('.m-menu__nav').parent();\r\n            menu = element.mMenu(); \r\n\r\n            if (menu.getSubmenuMode() !== 'dropdown') { \r\n                return;\r\n            }            \r\n\r\n            if ($(e.target).is(element) == false && element.find($(e.target)).length == 0) {\r\n                var items = element.find('.m-menu__item--submenu.m-menu__item--hover:not(.m-menu__item--tabs)[data-menu-submenu-toggle=\"click\"]');\r\n                items.each(function() {\r\n                    menu.hideDropdown($(this));\r\n                });\r\n            }          \r\n        });\r\n    });\r\n}(jQuery));\n(function ($) {\r\n    // Plugin function\r\n    $.fn.mMessenger = function (options) {\r\n        // Plugin scope variable\r\n        var messenger = {};\r\n        var element = $(this);\r\n\r\n        // Plugin class\r\n        var Plugin = {\r\n            /**\r\n             * Run\r\n             */\r\n            run: function (options) {\r\n                if (!element.data('messenger')) {                      \r\n                    // create instance\r\n                    Plugin.init(options);\r\n                    Plugin.build();\r\n                    Plugin.setup();\r\n                    \r\n                    // assign instance to the element                    \r\n                    element.data('messenger', messenger);\r\n                } else {\r\n                    // get instance from the element\r\n                    messenger = element.data('messenger');\r\n                }               \r\n\r\n                return messenger;\r\n            },\r\n\r\n            /**\r\n             * Initialize\r\n             */\r\n            init: function(options) {\r\n                messenger.events = [];\r\n                messenger.scrollable = element.find('.m-messenger__scrollable');\r\n                messenger.options = $.extend(true, {}, $.fn.mMessenger.defaults, options);\r\n                if (messenger.scrollable.length > 0) {\r\n                    if (messenger.scrollable.data('data-min-height')) {\r\n                        messenger.options.minHeight = messenger.scrollable.data('data-min-height');\r\n                    }\r\n\r\n                    if (messenger.scrollable.data('data-max-height')) {\r\n                        messenger.options.maxHeight = messenger.scrollable.data('data-max-height');\r\n                    }\r\n                }                \r\n            },\r\n\r\n            /**\r\n             * Build DOM and init event handlers\r\n             */\r\n            build: function () {\r\n                if (mUtil.isMobileDevice()) {\r\n                    \r\n                } else {\r\n                    \r\n                }                \r\n            }, \r\n\r\n            /**\r\n             * Setup messenger\r\n             */\r\n            setup: function () {\r\n               \r\n            },\r\n\r\n            /**\r\n             * Trigger events\r\n             */\r\n            eventTrigger: function(name) {\r\n                for (i = 0; i < messenger.events.length; i++) {\r\n                    var event = messenger.events[i];\r\n                    if (event.name == name) {\r\n                        if (event.one == true) {\r\n                            if (event.fired == false) {\r\n                                messenger.events[i].fired = true;\r\n                                return event.handler.call(this, messenger);\r\n                            }\r\n                        } else {\r\n                            return  event.handler.call(this, messenger);\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n\r\n            addEvent: function(name, handler, one) {\r\n                messenger.events.push({\r\n                    name: name,\r\n                    handler: handler,\r\n                    one: one,\r\n                    fired: false\r\n                });\r\n\r\n                Plugin.sync();\r\n            }\r\n        };\r\n\r\n        // Run plugin\r\n        Plugin.run.apply(this, [options]);\r\n\r\n        //////////////////////\r\n        // ** Public API ** //\r\n        //////////////////////\r\n       \r\n\r\n        /**\r\n         * Set messenger content\r\n         * @returns {mMessenger}\r\n         */\r\n        messenger.on =  function (name, handler) {\r\n            return Plugin.addEvent(name, handler);\r\n        };\r\n\r\n        /**\r\n         * Set messenger content\r\n         * @returns {mMessenger}\r\n         */\r\n        messenger.one =  function (name, handler) {\r\n            return Plugin.addEvent(name, handler, true);\r\n        };        \r\n\r\n        return messenger;\r\n    };\r\n\r\n    // default options\r\n    $.fn.mMessenger.defaults = {\r\n       \r\n    };\r\n}(jQuery));\n(function($) {\r\n    // plugin setup\r\n    $.fn.mOffcanvas = function(options) {\r\n        // main object\r\n        var offcanvas = this;\r\n        var element = $(this);\r\n\r\n        /********************\r\n         ** PRIVATE METHODS\r\n         ********************/\r\n        var Plugin = {\r\n            /**\r\n             * Run\r\n             */\r\n            run: function (options) {\r\n                if (!element.data('offcanvas')) {                      \r\n                    // create instance\r\n                    Plugin.init(options);\r\n                    Plugin.build();\r\n                    \r\n                    // assign instance to the element                    \r\n                    element.data('offcanvas', offcanvas);\r\n                } else {\r\n                    // get instance from the element\r\n                    offcanvas = element.data('offcanvas');\r\n                }               \r\n\r\n                return offcanvas;\r\n            },\r\n\r\n            /**\r\n             * Handles suboffcanvas click toggle\r\n             */\r\n            init: function(options) {\r\n                offcanvas.events = [];\r\n\r\n                // merge default and user defined options\r\n                offcanvas.options = $.extend(true, {}, $.fn.mOffcanvas.defaults, options);\r\n\r\n                offcanvas.overlay;\r\n                \r\n                offcanvas.classBase = offcanvas.options.class;\r\n                offcanvas.classShown = offcanvas.classBase + '--on';\r\n                offcanvas.classOverlay = offcanvas.classBase + '-overlay';\r\n                \r\n                offcanvas.state = element.hasClass(offcanvas.classShown) ? 'shown' : 'hidden';\r\n                offcanvas.close = offcanvas.options.close;\r\n\r\n                if (offcanvas.options.toggle && offcanvas.options.toggle.target) {\r\n                    offcanvas.toggleTarget = offcanvas.options.toggle.target;\r\n                    offcanvas.toggleState = offcanvas.options.toggle.state;\r\n                } else {\r\n                    offcanvas.toggleTarget = offcanvas.options.toggle; \r\n                    offcanvas.toggleState = '';\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Setup offcanvas\r\n             */\r\n            build: function() {\r\n                // offcanvas toggle\r\n                $(offcanvas.toggleTarget).on('click', Plugin.toggle);\r\n\r\n                if (offcanvas.close) {\r\n                    $(offcanvas.close).on('click', Plugin.hide);\r\n                }\r\n            },\r\n\r\n            /**\r\n             * sync \r\n             */\r\n            sync: function () {\r\n                $(element).data('offcanvas', offcanvas);\r\n            }, \r\n\r\n            /**\r\n             * Handles offcanvas click toggle\r\n             */\r\n            toggle: function() {\r\n                var el = $(this);\r\n\r\n                if (offcanvas.state == 'shown') {\r\n                    Plugin.hide(el);\r\n                } else {\r\n                    Plugin.show(el);\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Handles offcanvas click toggle\r\n             */\r\n            show: function(el) {\r\n                if (offcanvas.state == 'shown') {\r\n                    return;\r\n                }\r\n\r\n                var target = el ? $(el) : $(offcanvas.toggleTarget);\r\n\r\n                Plugin.eventTrigger('beforeShow');\r\n\r\n                if (offcanvas.toggleState != '') {\r\n                    target.addClass(offcanvas.toggleState);\r\n                }\r\n                \r\n                $('body').addClass(offcanvas.classShown);\r\n                element.addClass(offcanvas.classShown);\r\n\r\n                offcanvas.state = 'shown';\r\n\r\n                if (offcanvas.options.overlay) {\r\n                    var overlay = $('<div class=\"' + offcanvas.classOverlay + '\"></div>');                \r\n                    element.after(overlay);\r\n                    offcanvas.overlay = overlay;\r\n                    offcanvas.overlay.on('click', function(e) {\r\n                        e.stopPropagation();\r\n                        e.preventDefault();\r\n                        Plugin.hide();\r\n                    });\r\n                } \r\n\r\n                Plugin.eventTrigger('afterShow');\r\n\r\n                return offcanvas;\r\n            },\r\n\r\n            /**\r\n             * Handles offcanvas click toggle\r\n             */\r\n            hide: function(el) {\r\n                if (offcanvas.state == 'hidden') {\r\n                    return;\r\n                }\r\n\r\n                var target = el ? $(el) : $(offcanvas.toggleTarget);\r\n                                \r\n                Plugin.eventTrigger('beforeHide');\r\n\r\n                if (offcanvas.toggleState != '') {\r\n                    target.removeClass(offcanvas.toggleState);\r\n                }\r\n\r\n                $('body').removeClass(offcanvas.classShown)\r\n                element.removeClass(offcanvas.classShown);\r\n\r\n                offcanvas.state = 'hidden';\r\n\r\n                if (offcanvas.options.overlay) {\r\n                    offcanvas.overlay.remove();\r\n                } \r\n\r\n                Plugin.eventTrigger('afterHide');\r\n\r\n                return offcanvas;\r\n            },\r\n\r\n            /**\r\n             * Trigger events\r\n             */\r\n            eventTrigger: function(name) {\r\n                for (i = 0; i < offcanvas.events.length; i++) {\r\n                    var event = offcanvas.events[i];\r\n                    if (event.name == name) {\r\n                        if (event.one == true) {\r\n                            if (event.fired == false) {\r\n                                offcanvas.events[i].fired = true;\r\n                                return event.handler.call(this, offcanvas);\r\n                            }\r\n                        } else {\r\n                            return  event.handler.call(this, offcanvas);\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n\r\n            addEvent: function(name, handler, one) {\r\n                offcanvas.events.push({\r\n                    name: name,\r\n                    handler: handler,\r\n                    one: one,\r\n                    fired: false\r\n                });\r\n\r\n                Plugin.sync();\r\n            }\r\n        };\r\n\r\n        // main variables\r\n        var the = this;\r\n        \r\n        // init plugin\r\n        Plugin.run.apply(this, [options]);\r\n\r\n        /********************\r\n         ** PUBLIC API METHODS\r\n         ********************/\r\n\r\n        /**\r\n         * Hide \r\n         */\r\n        offcanvas.hide =  function () {\r\n            return Plugin.hide();\r\n        };\r\n\r\n        /**\r\n         * Show \r\n         */\r\n        offcanvas.show =  function () {\r\n            return Plugin.show();\r\n        };\r\n\r\n        /**\r\n         * Get suboffcanvas mode\r\n         */\r\n        offcanvas.on =  function (name, handler) {\r\n            return Plugin.addEvent(name, handler);\r\n        };\r\n\r\n        /**\r\n         * Set offcanvas content\r\n         * @returns {mOffcanvas}\r\n         */\r\n        offcanvas.one =  function (name, handler) {\r\n            return Plugin.addEvent(name, handler, true);\r\n        };   \r\n\r\n        return offcanvas;\r\n    };\r\n\r\n    // default options\r\n    $.fn.mOffcanvas.defaults = {\r\n        \r\n    }; \r\n}(jQuery));\n(function ($) {\r\n    // Plugin function\r\n    $.fn.mPortlet = function (options) {\r\n        // Plugin scope variable\r\n        var portlet = {};\r\n        var element = $(this);\r\n\r\n        // Plugin class\r\n        var Plugin = {\r\n            /**\r\n             * Run\r\n             */\r\n            run: function (options) {\r\n                if (element.data('portlet-object')) {            \r\n                    // get instance from the element\r\n                    portlet = element.data('portlet-object');\r\n                } else {                              \r\n                    // create instance                   \r\n                    Plugin.init(options);\r\n                    Plugin.build();\r\n                    \r\n                    // assign instance to the element                    \r\n                    element.data('portlet-object', portlet);\r\n                }               \r\n\r\n                return portlet;\r\n            },\r\n\r\n            /**\r\n             * Initialize\r\n             */\r\n            init: function(options) {\r\n                portlet.options = $.extend(true, {}, $.fn.mPortlet.defaults, options);\r\n                portlet.events = [];\r\n                portlet.eventOne = false;       \r\n\r\n                if ( element.find('> .m-portlet__body').length !== 0 ) {\r\n                    portlet.body = element.find('> .m-portlet__body');\r\n                } else if ( element.find('> .m-form').length !== 0 ) {\r\n                    portlet.body = element.find('> .m-form');\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Build DOM and init event handlers\r\n             */\r\n            build: function () {\r\n                // remove\r\n                var remove = element.find('> .m-portlet__head [data-portlet-tool=remove]');\r\n                if (remove.length === 1) {\r\n                    remove.click(function(e) {\r\n                        e.preventDefault();\r\n                        Plugin.remove();\r\n                    });\r\n                }                 \r\n\r\n                // reload\r\n                var reload = element.find('> .m-portlet__head [data-portlet-tool=reload]')\r\n                if (reload.length === 1) {\r\n                    reload.click(function(e) {\r\n                        e.preventDefault();\r\n                        Plugin.reload();\r\n                    });\r\n                }\r\n\r\n                // toggle\r\n                var toggle = element.find('> .m-portlet__head [data-portlet-tool=toggle]');\r\n                if (toggle.length === 1) {\r\n                    toggle.click(function(e) {\r\n                        e.preventDefault();\r\n                        Plugin.toggle();\r\n                    });\r\n                }\r\n\r\n                // fullscreen\r\n                var fullscreen = element.find('> .m-portlet__head [data-portlet-tool=fullscreen]');\r\n                if (fullscreen.length === 1) {\r\n                    fullscreen.click(function(e) {\r\n                        e.preventDefault();\r\n                        Plugin.fullscreen();\r\n                    });\r\n                }                    \r\n\r\n                Plugin.setupTooltips();\r\n            }, \r\n\r\n            /**\r\n             * Remove portlet\r\n             */\r\n            remove: function () {\r\n                if (Plugin.eventTrigger('beforeRemove') === false) {\r\n                    return;\r\n                }\r\n\r\n                if ( $('body').hasClass('m-portlet--fullscreen') && element.hasClass('m-portlet--fullscreen') ) {\r\n                    Plugin.fullscreen('off');\r\n                }\r\n\r\n                Plugin.removeTooltips();\r\n\r\n                element.remove();\r\n                \r\n                Plugin.eventTrigger('afterRemove');\r\n            }, \r\n\r\n            /**\r\n             * Set content\r\n             */\r\n            setContent: function (html) {\r\n                if (html) {\r\n                    portlet.body.html(html);\r\n                }               \r\n            },\r\n\r\n            /**\r\n             * Get body\r\n             */\r\n            getBody: function () {\r\n                return portlet.body;\r\n            },\r\n\r\n            /**\r\n             * Get self\r\n             */\r\n            getSelf: function () {\r\n                return element;\r\n            },\r\n\r\n            /**\r\n             * Setup tooltips\r\n             */\r\n            setupTooltips: function () {\r\n                if (portlet.options.tooltips) {\r\n                    var collapsed = element.hasClass('m-portlet--collapse') || element.hasClass('m-portlet--collapsed');\r\n                    var fullscreenOn = $('body').hasClass('m-portlet--fullscreen') && element.hasClass('m-portlet--fullscreen');\r\n\r\n                    var remove = element.find('> .m-portlet__head [data-portlet-tool=remove]');\r\n                    if (remove.length === 1) {\r\n                        remove.attr('title', portlet.options.tools.remove);\r\n                        remove.data('placement', fullscreenOn ? 'bottom' : 'top');\r\n                        remove.data('offset', fullscreenOn ? '0,10px,0,0' : '0,5px');\r\n                        remove.tooltip('dispose');\r\n                        mApp.initTooltip(remove);\r\n                    }\r\n\r\n                    var reload = element.find('> .m-portlet__head [data-portlet-tool=reload]');\r\n                    if (reload.length === 1) {\r\n                        reload.attr('title', portlet.options.tools.reload);\r\n                        reload.data('placement', fullscreenOn ? 'bottom' : 'top');\r\n                        reload.data('offset', fullscreenOn ? '0,10px,0,0' : '0,5px');\r\n                        reload.tooltip('dispose');\r\n                        mApp.initTooltip(reload);\r\n                    }\r\n\r\n                    var toggle = element.find('> .m-portlet__head [data-portlet-tool=toggle]');\r\n                    if (toggle.length === 1) {\r\n                        if (collapsed) {\r\n                            toggle.attr('title', portlet.options.tools.toggle.expand);\r\n                        } else {\r\n                            toggle.attr('title', portlet.options.tools.toggle.collapse);\r\n                        }\r\n                        toggle.data('placement', fullscreenOn ? 'bottom' : 'top');\r\n                        toggle.data('offset', fullscreenOn ? '0,10px,0,0' : '0,5px');\r\n                        toggle.tooltip('dispose');\r\n                        mApp.initTooltip(toggle);\r\n                    }\r\n\r\n                    var fullscreen = element.find('> .m-portlet__head [data-portlet-tool=fullscreen]');\r\n                    if (fullscreen.length === 1) {\r\n                        if (fullscreenOn) {\r\n                            fullscreen.attr('title', portlet.options.tools.fullscreen.off);\r\n                        } else {\r\n                            fullscreen.attr('title', portlet.options.tools.fullscreen.on);\r\n                        }\r\n                        fullscreen.data('placement', fullscreenOn ? 'bottom' : 'top');\r\n                        fullscreen.data('offset', fullscreenOn ? '0,10px,0,0' : '0,5px');\r\n                        fullscreen.tooltip('dispose');\r\n                        mApp.initTooltip(fullscreen);\r\n                    }                \r\n                }                   \r\n            },\r\n\r\n            /**\r\n             * Setup tooltips\r\n             */\r\n            removeTooltips: function () {\r\n                if (portlet.options.tooltips) {\r\n                    var remove = element.find('> .m-portlet__head [data-portlet-tool=remove]');\r\n                    if (remove.length === 1) {\r\n                        remove.tooltip('dispose');\r\n                    }\r\n\r\n                    var reload = element.find('> .m-portlet__head [data-portlet-tool=reload]');\r\n                    if (reload.length === 1) {\r\n                        reload.tooltip('dispose');\r\n                    }\r\n\r\n                    var toggle = element.find('> .m-portlet__head [data-portlet-tool=toggle]');\r\n                    if (toggle.length === 1) {\r\n                        toggle.tooltip('dispose');\r\n                    }\r\n\r\n                    var fullscreen = element.find('> .m-portlet__head [data-portlet-tool=fullscreen]');\r\n                    if (fullscreen.length === 1) {\r\n                        fullscreen.tooltip('dispose');\r\n                    }                \r\n                }                   \r\n            },\r\n\r\n            /**\r\n             * Reload\r\n             */\r\n            reload: function () {\r\n                Plugin.eventTrigger('reload');                \r\n            },\r\n\r\n            /**\r\n             * Toggle\r\n             */\r\n            toggle: function () {\r\n                if (element.hasClass('m-portlet--collapse') || element.hasClass('m-portlet--collapsed')) {\r\n                    Plugin.expand();                    \r\n                } else {\r\n                    Plugin.collapse();            \r\n                }                  \r\n            },\r\n\r\n            /**\r\n             * Collapse\r\n             */\r\n            collapse: function() {\r\n                if (Plugin.eventTrigger('beforeCollapse') === false) {\r\n                    return;\r\n                } \r\n\r\n                portlet.body.slideUp(portlet.options.bodyToggleSpeed, function() {                        \r\n                    Plugin.eventTrigger('afterCollapse');    \r\n                });\r\n\r\n                element.addClass('m-portlet--collapse');\r\n\r\n                Plugin.setupTooltips();  \r\n            },\r\n\r\n            /**\r\n             * Expand\r\n             */\r\n            expand: function() {\r\n                if (Plugin.eventTrigger('beforeExpand') === false) {\r\n                    return;\r\n                } \r\n\r\n                portlet.body.slideDown(portlet.options.bodyToggleSpeed, function(){                        \r\n                    Plugin.eventTrigger('afterExpand');                         \r\n                });\r\n\r\n                element.removeClass('m-portlet--collapse');\r\n                element.removeClass('m-portlet--collapsed');\r\n\r\n                Plugin.setupTooltips();\r\n            },\r\n\r\n            /**\r\n             * Toggle\r\n             */\r\n            fullscreen: function (mode) {\r\n                var d = {};\r\n                var speed = 300;\r\n\r\n                if (mode === 'off' || ($('body').hasClass('m-portlet--fullscreen') && element.hasClass('m-portlet--fullscreen'))) {\r\n                    Plugin.eventTrigger('beforeFullscreenOff');\r\n\r\n                    $('body').removeClass('m-portlet--fullscreen');\r\n                    element.removeClass('m-portlet--fullscreen');\r\n\r\n                    Plugin.setupTooltips();\r\n                    \r\n                    Plugin.eventTrigger('afterFullscreenOff');\r\n                } else {\r\n                    Plugin.eventTrigger('beforeFullscreenOn');\r\n\r\n                    element.addClass('m-portlet--fullscreen');\r\n                    $('body').addClass('m-portlet--fullscreen');\r\n\r\n                    Plugin.setupTooltips();\r\n                    \r\n                    Plugin.eventTrigger('afterFullscreenOn');\r\n                }                  \r\n            }, \r\n\r\n            /**\r\n             * sync \r\n             */\r\n            sync: function () {\r\n                $(element).data('portlet', portlet);\r\n            },\r\n\r\n            /**\r\n             * Trigger events\r\n             */\r\n            eventTrigger: function(name) {\r\n                for (i = 0; i < portlet.events.length; i++) {\r\n                    var event = portlet.events[i];\r\n                    if (event.name == name) {\r\n                        if (event.one == true) {\r\n                            if (event.fired == false) {\r\n                                portlet.events[i].fired = true;\r\n                                return event.handler.call(this, portlet);\r\n                            }\r\n                        } else {\r\n                            return  event.handler.call(this, portlet);\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Add event\r\n             */\r\n            addEvent: function(name, handler, one) {\r\n                portlet.events.push({\r\n                    name: name,\r\n                    handler: handler,\r\n                    one: one,\r\n                    fired: false\r\n                });\r\n\r\n                Plugin.sync();\r\n\r\n                return portlet;\r\n            }\r\n        };\r\n\r\n        // Run plugin\r\n        Plugin.run.apply(this, [options]);\r\n\r\n        //////////////////////\r\n        // ** Public API ** //\r\n        //////////////////////\r\n       \r\n        /**\r\n         * Remove portlet\r\n         * @returns {mPortlet}\r\n         */\r\n        portlet.remove = function () {\r\n            return Plugin.remove(html);\r\n        };\r\n\r\n        /**\r\n         * Reload portlet\r\n         * @returns {mPortlet}\r\n         */\r\n        portlet.reload = function () {\r\n            return Plugin.reload();\r\n        };\r\n\r\n        /**\r\n         * Set portlet content\r\n         * @returns {mPortlet}\r\n         */\r\n        portlet.setContent = function (html) {\r\n            return Plugin.setContent(html);\r\n        };\r\n\r\n        /**\r\n         * Toggle portlet\r\n         * @returns {mPortlet}\r\n         */\r\n        portlet.toggle = function () {\r\n            return Plugin.toggle();\r\n        };\r\n\r\n        /**\r\n         * Collapse portlet\r\n         * @returns {mPortlet}\r\n         */\r\n        portlet.collapse = function () {\r\n            return Plugin.collapse();\r\n        };\r\n\r\n        /**\r\n         * Expand portlet\r\n         * @returns {mPortlet}\r\n         */\r\n        portlet.expand = function () {\r\n            return Plugin.expand();\r\n        };\r\n\r\n        /**\r\n         * Fullscreen portlet\r\n         * @returns {mPortlet}\r\n         */\r\n        portlet.fullscreen = function () {\r\n            return Plugin.fullscreen('on');\r\n        };\r\n\r\n        /**\r\n         * Fullscreen portlet\r\n         * @returns {mPortlet}\r\n         */\r\n        portlet.unFullscreen = function () {\r\n            return Plugin.fullscreen('off');\r\n        };\r\n\r\n        /**\r\n         * Get portletbody \r\n         * @returns {jQuery}\r\n         */\r\n        portlet.getBody = function () {\r\n            return Plugin.getBody();\r\n        };\r\n\r\n         /**\r\n         * Get portletbody \r\n         * @returns {jQuery}\r\n         */\r\n        portlet.getSelf = function () {\r\n            return Plugin.getSelf();\r\n        };\r\n\r\n        /**\r\n         * Set portlet content\r\n         * @returns {mPortlet}\r\n         */\r\n        portlet.on =  function (name, handler) {\r\n            return Plugin.addEvent(name, handler);\r\n        };\r\n\r\n        /**\r\n         * Set portlet content\r\n         * @returns {mPortlet}\r\n         */\r\n        portlet.one =  function (name, handler) {\r\n            return Plugin.addEvent(name, handler, true);\r\n        };        \r\n\r\n        return portlet;\r\n    };\r\n\r\n    // default options\r\n    $.fn.mPortlet.defaults = {\r\n        bodyToggleSpeed: 400,\r\n        tooltips: true,\r\n        tools: {\r\n            toggle: {\r\n                collapse: 'Collapse', \r\n                expand: 'Expand'\r\n            },\r\n            reload: 'Reload',\r\n            remove: 'Remove',\r\n            fullscreen: {\r\n                on: 'Fullscreen',\r\n                off: 'Exit Fullscreen'\r\n            }        \r\n        }\r\n    };\r\n}(jQuery));\n(function($) {\r\n    // Plugin function\r\n    $.fn.mQuicksearch = function(options) {\r\n\r\n        // Plugin scope variables\r\n        var qs = this;\r\n        var element = $(this);\r\n        \r\n        // Plugin class        \r\n        var Plugin = {\r\n            /**\r\n             * Run plugin \r\n             */\r\n            run: function(options) {\r\n                if (!element.data('qs')) {\r\n                    // init plugin\r\n                    Plugin.init(options);\r\n                    // build dom\r\n                    Plugin.build();                   \r\n                    // store the instance in the element's data\r\n                    element.data('qs', qs);\r\n                } else {\r\n                    // retrieve the instance fro the element's data\r\n                    qs = element.data('qs'); \r\n                }\r\n\r\n                return qs;\r\n            },\r\n\r\n            /**\r\n             * Init plugin\r\n             */\r\n            init: function(options) {\r\n                // merge default and user defined options\r\n                qs.options = $.extend(true, {}, $.fn.mQuicksearch.defaults, options);\r\n\r\n                // form\r\n                qs.form = element.find('form');\r\n\r\n                // input element\r\n                qs.input = $(qs.options.input);\r\n\r\n                 // close icon\r\n                qs.iconClose = $(qs.options.iconClose);\r\n\r\n                if (qs.options.type == 'default') {\r\n                    // search icon\r\n                    qs.iconSearch = $(qs.options.iconSearch);\r\n                        \r\n                    // cancel icon\r\n                    qs.iconCancel = $(qs.options.iconCancel);\r\n                }               \r\n\r\n                // dropdown\r\n                qs.dropdown = element.mDropdown({mobileOverlay: false});\r\n\r\n                // cancel search timeout\r\n                qs.cancelTimeout;\r\n\r\n                // ajax processing state\r\n                qs.processing = false;\r\n            }, \r\n\r\n            /**\r\n             * Build plugin\r\n             */\r\n            build: function() {\r\n                // attach input keyup handler\r\n                qs.input.keyup(Plugin.handleSearch);\r\n                \r\n                if (qs.options.type == 'default') {\r\n                    qs.input.focus(Plugin.showDropdown);\r\n                    \r\n                    qs.iconCancel.click(Plugin.handleCancel);\r\n\r\n                    qs.iconSearch.click(function() {\r\n                        if (mUtil.isInResponsiveRange('tablet-and-mobile')) {\r\n                            $('body').addClass('m-header-search--mobile-expanded');\r\n                            qs.input.focus();\r\n                        }\r\n                    });\r\n\r\n                    qs.iconClose.click(function() {\r\n                        if (mUtil.isInResponsiveRange('tablet-and-mobile')) {\r\n                            $('body').removeClass('m-header-search--mobile-expanded');\r\n                            Plugin.closeDropdown();\r\n                        }\r\n                    });\r\n\r\n                } else if (qs.options.type == 'dropdown') {\r\n                    qs.dropdown.on('afterShow', function() {\r\n                        qs.input.focus();\r\n                    });\r\n                    qs.iconClose.click(Plugin.closeDropdown);\r\n                }               \r\n            },\r\n\r\n            /**\r\n             * Search handler\r\n             */ \r\n            handleSearch: function(e) { \r\n                var query = qs.input.val();\r\n\r\n                if (query.length === 0) {\r\n                    qs.dropdown.hide();\r\n                    Plugin.handleCancelIconVisibility('on');\r\n                    Plugin.closeDropdown();\r\n                    element.removeClass(qs.options.hasResultClass);\r\n                }\r\n\r\n                if (query.length < qs.options.minLength || qs.processing == true) {\r\n                    return;\r\n                }\r\n\r\n                qs.processing = true;\r\n                qs.form.addClass(qs.options.spinner);\r\n                Plugin.handleCancelIconVisibility('off');\r\n                \r\n                $.ajax({\r\n                    url: qs.options.source,\r\n                    data: {query: query},\r\n                    dataType: 'html',\r\n                    success: function(res) {\r\n                        qs.processing = false;\r\n                        qs.form.removeClass(qs.options.spinner);\r\n                        Plugin.handleCancelIconVisibility('on');\r\n                        qs.dropdown.setContent(res).show();\r\n                        element.addClass(qs.options.hasResultClass);    \r\n                    },\r\n                    error: function(res) {\r\n                        qs.processing = false;\r\n                        qs.form.removeClass(qs.options.spinner);\r\n                        Plugin.handleCancelIconVisibility('on');\r\n                        qs.dropdown.setContent(qs.options.templates.error.apply(qs, res)).show();  \r\n                        element.addClass(qs.options.hasResultClass);   \r\n                    }\r\n                });\r\n            }, \r\n\r\n            /**\r\n             * Handle cancel icon visibility\r\n             */ \r\n            handleCancelIconVisibility: function(status) {\r\n                if (qs.options.type == 'dropdown') {\r\n                    //return;\r\n                }\r\n\r\n                if (status == 'on') {\r\n                    if (qs.input.val().length === 0) {                       \r\n                        if (qs.iconCancel) qs.iconCancel.css('visibility', 'hidden');\r\n                        if (qs.iconClose) qs.iconClose.css('visibility', 'hidden');\r\n                    } else {\r\n                        clearTimeout(qs.cancelTimeout);\r\n                        qs.cancelTimeout = setTimeout(function() {\r\n                            if (qs.iconCancel) qs.iconCancel.css('visibility', 'visible');\r\n                            if (qs.iconClose) qs.iconClose.css('visibility', 'visible');\r\n                        }, 500);                        \r\n                    }\r\n                } else {\r\n                    if (qs.iconCancel) qs.iconCancel.css('visibility', 'hidden');\r\n                    if (qs.iconClose) qs.iconClose.css('visibility', 'hidden');\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Cancel handler\r\n             */ \r\n            handleCancel: function(e) {\r\n                qs.input.val('');\r\n                qs.iconCancel.css('visibility', 'hidden');\r\n                element.removeClass(qs.options.hasResultClass);   \r\n                //qs.input.focus();\r\n\r\n                Plugin.closeDropdown();\r\n            },\r\n\r\n            /**\r\n             * Cancel handler\r\n             */ \r\n            closeDropdown: function() {\r\n                qs.dropdown.hide();\r\n            },\r\n\r\n            /**\r\n             * Show dropdown\r\n             */ \r\n            showDropdown: function(e) { \r\n                if (qs.dropdown.isShown() == false && qs.input.val().length > qs.options.minLength && qs.processing == false) {\r\n                    qs.dropdown.show();\r\n                    e.preventDefault();\r\n                    e.stopPropagation();\r\n                }\r\n            }\r\n        };\r\n\r\n        // Run plugin\r\n        Plugin.run.apply(qs, [options]);\r\n\r\n        //////////////////////\r\n        // ** Public API ** //\r\n        //////////////////////\r\n\r\n        /**\r\n         * Public method\r\n         * @returns {mQuicksearch}\r\n         */\r\n        qs.test = function(time) {\r\n        \t//Plugin.method(time);\r\n        };\r\n\r\n        // Return plugin object\r\n        return qs;\r\n    };\r\n\r\n    // Plugin default options\r\n    $.fn.mQuicksearch.defaults = {\r\n    \tminLength: 1,\r\n        maxHeight: 300,\r\n    };\r\n\r\n}(jQuery));\n(function($) {\r\n    // plugin setup\r\n    $.fn.mScrollTop = function(options) {\r\n        // main object\r\n        var scrollTop = this;\r\n        var element = $(this);\r\n\r\n        /********************\r\n         ** PRIVATE METHODS\r\n         ********************/\r\n        var Plugin = {\r\n            /**\r\n             * Run\r\n             */\r\n            run: function (options) {\r\n                if (!element.data('scrollTop')) {                      \r\n                    // create instance\r\n                    Plugin.init(options);\r\n                    Plugin.build();\r\n                    \r\n                    // assign instance to the element                    \r\n                    element.data('scrollTop', scrollTop);\r\n                } else {\r\n                    // get instance from the element\r\n                    scrollTop = element.data('scrollTop');\r\n                }               \r\n\r\n                return scrollTop;\r\n            },\r\n\r\n            /**\r\n             * Handles subscrollTop click scrollTop\r\n             */\r\n            init: function(options) {\r\n                scrollTop.element = element;    \r\n                scrollTop.events = [];\r\n\r\n                // merge default and user defined options\r\n                scrollTop.options = $.extend(true, {}, $.fn.mScrollTop.defaults, options);\r\n            },\r\n\r\n            /**\r\n             * Setup scrollTop\r\n             */\r\n            build: function() {\r\n                // handle window scroll\r\n                if (navigator.userAgent.match(/iPhone|iPad|iPod/i)) {\r\n                    $(window).bind(\"touchend touchcancel touchleave\", function() {\r\n                        Plugin.handle();\r\n                    });\r\n                } else {\r\n                    $(window).scroll(function() {\r\n                        Plugin.handle();\r\n                    });\r\n                }\r\n\r\n                // handle button click \r\n                element.on('click', Plugin.scroll);\r\n            },\r\n\r\n            /**\r\n             * sync \r\n             */\r\n            sync: function () {\r\n                $(element).data('scrollTop', scrollTop);\r\n            }, \r\n\r\n            /**\r\n             * Handles offcanvas click scrollTop\r\n             */\r\n            handle: function() {\r\n                var pos = $(window).scrollTop(); // current vertical position\r\n                if (pos > scrollTop.options.offset) {\r\n                    $(\"body\").addClass('m-scroll-top--shown');\r\n                } else {\r\n                    $(\"body\").removeClass('m-scroll-top--shown');\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Handles offcanvas click scrollTop\r\n             */\r\n            scroll: function(e) {\r\n                e.preventDefault();\r\n\r\n                $(\"html, body\").animate({\r\n                    scrollTop: 0\r\n                }, scrollTop.options.speed);\r\n            },\r\n\r\n            /**\r\n             * Trigger events\r\n             */\r\n            eventTrigger: function(name) {\r\n                for (i = 0; i < scrollTop.events.length; i++) {\r\n                    var event = scrollTop.events[i];\r\n                    if (event.name == name) {\r\n                        if (event.one == true) {\r\n                            if (event.fired == false) {\r\n                                scrollTop.events[i].fired = true;\r\n                                return event.handler.call(this, scrollTop);\r\n                            }\r\n                        } else {\r\n                            return  event.handler.call(this, scrollTop);\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n\r\n            addEvent: function(name, handler, one) {\r\n                scrollTop.events.push({\r\n                    name: name,\r\n                    handler: handler,\r\n                    one: one,\r\n                    fired: false\r\n                });\r\n\r\n                Plugin.sync();\r\n            }\r\n        };\r\n\r\n        // main variables\r\n        var the = this;\r\n        \r\n        // init plugin\r\n        Plugin.run.apply(this, [options]);\r\n\r\n        /********************\r\n         ** PUBLIC API METHODS\r\n         ********************/\r\n\r\n        /**\r\n         * Get subscrollTop mode\r\n         */\r\n        scrollTop.on =  function (name, handler) {\r\n            return Plugin.addEvent(name, handler);\r\n        };\r\n\r\n        /**\r\n         * Set scrollTop content\r\n         * @returns {mScrollTop}\r\n         */\r\n        scrollTop.one =  function (name, handler) {\r\n            return Plugin.addEvent(name, handler, true);\r\n        };   \r\n\r\n        return scrollTop;\r\n    };\r\n\r\n    // default options\r\n    $.fn.mScrollTop.defaults = {\r\n        offset: 300,\r\n        speed: 600\r\n    }; \r\n}(jQuery));\n(function($) {\r\n    // plugin setup\r\n    $.fn.mToggle = function(options) {\r\n        // main object\r\n        var toggle = this;\r\n        var element = $(this);\r\n\r\n        /********************\r\n         ** PRIVATE METHODS\r\n         ********************/\r\n        var Plugin = {\r\n            /**\r\n             * Run\r\n             */\r\n            run: function (options) {\r\n                if (!element.data('toggle')) {                      \r\n                    // create instance\r\n                    Plugin.init(options);\r\n                    Plugin.build();\r\n                    \r\n                    // assign instance to the element                    \r\n                    element.data('toggle', toggle);\r\n                } else {\r\n                    // get instance from the element\r\n                    toggle = element.data('toggle');\r\n                }               \r\n\r\n                return toggle;\r\n            },\r\n\r\n            /**\r\n             * Handles subtoggle click toggle\r\n             */\r\n            init: function(options) {\r\n                toggle.element = element;    \r\n                toggle.events = [];\r\n\r\n                // merge default and user defined options\r\n                toggle.options = $.extend(true, {}, $.fn.mToggle.defaults, options);\r\n\r\n                toggle.target = $(toggle.options.target);\r\n                toggle.targetState = toggle.options.targetState;\r\n                toggle.togglerState = toggle.options.togglerState;\r\n\r\n                toggle.state = mUtil.hasClasses(toggle.target, toggle.targetState) ? 'on' : 'off';\r\n            },\r\n\r\n            /**\r\n             * Setup toggle\r\n             */\r\n            build: function() {\r\n                element.on('click', Plugin.toggle);\r\n            },\r\n\r\n            /**\r\n             * sync \r\n             */\r\n            sync: function () {\r\n                $(element).data('toggle', toggle);\r\n            }, \r\n\r\n            /**\r\n             * Handles offcanvas click toggle\r\n             */\r\n            toggle: function() {\r\n                if (toggle.state == 'off') {\r\n                    Plugin.toggleOn();\r\n                } else {\r\n                    Plugin.toggleOff();\r\n                }\r\n                Plugin.eventTrigger('toggle');\r\n\r\n                return toggle;\r\n            },\r\n\r\n            /**\r\n             * Handles toggle click toggle\r\n             */\r\n            toggleOn: function() {\r\n                Plugin.eventTrigger('beforeOn');\r\n                \r\n                toggle.target.addClass(toggle.targetState);\r\n\r\n                if (toggle.togglerState) {\r\n                    element.addClass(toggle.togglerState);\r\n                }\r\n\r\n                toggle.state = 'on';\r\n\r\n                Plugin.eventTrigger('afterOn');\r\n\r\n                return toggle;\r\n            },\r\n\r\n            /**\r\n             * Handles toggle click toggle\r\n             */\r\n            toggleOff: function() {\r\n                Plugin.eventTrigger('beforeOff');\r\n\r\n                toggle.target.removeClass(toggle.targetState);\r\n\r\n                if (toggle.togglerState) {\r\n                    element.removeClass(toggle.togglerState);\r\n                }\r\n\r\n                toggle.state = 'off';\r\n\r\n                Plugin.eventTrigger('afterOff');\r\n\r\n                return toggle;\r\n            },\r\n\r\n            /**\r\n             * Trigger events\r\n             */\r\n            eventTrigger: function(name) {\r\n                toggle.trigger(name);\r\n                for (i = 0; i < toggle.events.length; i++) {\r\n                    var event = toggle.events[i];\r\n                    if (event.name == name) {\r\n                        if (event.one == true) {\r\n                            if (event.fired == false) {\r\n                                toggle.events[i].fired = true;\r\n                                return event.handler.call(this, toggle);\r\n                            }\r\n                        } else {\r\n                            return  event.handler.call(this, toggle);\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n\r\n            addEvent: function(name, handler, one) {\r\n                toggle.events.push({\r\n                    name: name,\r\n                    handler: handler,\r\n                    one: one,\r\n                    fired: false\r\n                });\r\n\r\n                Plugin.sync();\r\n\r\n                return toggle;\r\n            }\r\n        };\r\n\r\n        // main variables\r\n        var the = this;\r\n        \r\n        // init plugin\r\n        Plugin.run.apply(this, [options]);\r\n\r\n        /********************\r\n         ** PUBLIC API METHODS\r\n         ********************/\r\n\r\n\r\n        /**\r\n         * Get toggle state \r\n         */\r\n        toggle.getState =  function () {\r\n            return toggle.state;\r\n        };\r\n\r\n        /**\r\n         * Toggle \r\n         */\r\n        toggle.toggle =  function () {\r\n            return Plugin.toggle();\r\n        };\r\n\r\n        /**\r\n         * Toggle on \r\n         */\r\n        toggle.toggleOn =  function () {\r\n            return Plugin.toggleOn();\r\n        };\r\n\r\n        /**\r\n         * Toggle off \r\n         */\r\n        toggle.toggleOff =  function () {\r\n            return Plugin.toggleOff();\r\n        };\r\n\r\n        /**\r\n         * Attach event\r\n         * @returns {mToggle}\r\n         */\r\n        toggle.on =  function (name, handler) {\r\n            return Plugin.addEvent(name, handler);\r\n        };\r\n\r\n        /**\r\n         * Attach event that will be fired once\r\n         * @returns {mToggle}\r\n         */\r\n        toggle.one =  function (name, handler) {\r\n            return Plugin.addEvent(name, handler, true);\r\n        };     \r\n\r\n        return toggle;\r\n    };\r\n\r\n    // default options\r\n    $.fn.mToggle.defaults = {\r\n        togglerState: '',\r\n        targetState: ''\r\n    }; \r\n}(jQuery));\n(function($) {\r\n    // plugin setup\r\n    $.fn.mWizard = function(options) {\r\n        //== Main object\r\n        var wizard = this;\r\n        var element = $(this);\r\n\r\n        /********************\r\n         ** PRIVATE METHODS\r\n         ********************/\r\n        var Plugin = {\r\n            /**\r\n             * Run\r\n             */\r\n            run: function (options) {\r\n                if (!element.data('wizard')) {                      \r\n                    //== Create instance\r\n                    Plugin.init(options);\r\n                    Plugin.build();\r\n                    \r\n                    //== Assign instance to the element                    \r\n                    element.data('wizard', wizard);\r\n                } else {\r\n                    // get instance from the element\r\n                    wizard = element.data('wizard');\r\n                }               \r\n\r\n                return wizard;\r\n            },\r\n\r\n            /**\r\n             * Initialize Form Wizard\r\n             */\r\n            init: function(options) {\r\n                //== Elements\r\n                wizard.steps = wizard.find('.m-wizard__step');\r\n                wizard.progress = wizard.find('.m-wizard__progress .progress-bar'); \r\n                wizard.btnSubmit = wizard.find('[data-wizard-action=\"submit\"]'); \r\n                wizard.btnNext = wizard.find('[data-wizard-action=\"next\"]'); \r\n                wizard.btnPrev = wizard.find('[data-wizard-action=\"prev\"]'); \r\n                wizard.btnLast = wizard.find('[data-wizard-action=\"last\"]'); \r\n                wizard.btnFirst = wizard.find('[data-wizard-action=\"first\"]');  \r\n\r\n                //== Merge default and user defined options\r\n                wizard.options = $.extend(true, {}, $.fn.mWizard.defaults, options);\r\n\r\n                //== Variables\r\n                wizard.events = [];\r\n                wizard.currentStep = 1;\r\n                wizard.totalSteps = wizard.steps.length;  \r\n\r\n                //== Init current step\r\n                if (wizard.options.startStep > 1) {\r\n                    Plugin.goTo(wizard.options.startStep);\r\n                }       \r\n\r\n                //== Init UI\r\n                Plugin.updateUI();\r\n            },\r\n\r\n            /**\r\n             * Build Form Wizard\r\n             */\r\n            build: function() {\r\n                //== Next button event handler\r\n                wizard.btnNext.on('click', function (e) {\r\n                    e.preventDefault();\r\n                    Plugin.goNext();\r\n                });\r\n\r\n                //== Prev button event handler\r\n                wizard.btnPrev.on('click', function (e) {\r\n                    e.preventDefault();\r\n                    Plugin.goPrev();\r\n                });\r\n\r\n                //== First button event handler\r\n                wizard.btnFirst.on('click', function (e) {\r\n                    e.preventDefault();\r\n                    Plugin.goFirst();\r\n                });\r\n\r\n                //== Last button event handler\r\n                wizard.btnLast.on('click', function (e) {\r\n                    e.preventDefault();\r\n                    Plugin.goLast();\r\n                });\r\n\r\n                wizard.find('.m-wizard__step a.m-wizard__step-number').on('click', function() {\r\n                    var step = $(this).parents('.m-wizard__step');\r\n                    var num;\r\n                    $(this).parents('.m-wizard__steps').find('.m-wizard__step').each(function(index) {\r\n                        if (step.is( $(this) )) {\r\n                            num = (index + 1);\r\n                            return;\r\n                        }\r\n                    });\r\n\r\n                    if (num) {\r\n                        Plugin.goTo(num);\r\n                    }                    \r\n                });\r\n            },\r\n\r\n            /**\r\n             * Sync object instance\r\n             */\r\n            sync: function () {\r\n                $(element).data('wizard', wizard);\r\n            }, \r\n\r\n            /**\r\n             * Handles wizard click toggle\r\n             */\r\n            goTo: function(number) {\r\n                //== Skip if this step is already shown\r\n                if (number === wizard.currentStep) {\r\n                    return;\r\n                }\r\n\r\n                //== Validate step number\r\n                if (number) {\r\n                    number = parseInt(number); \r\n                } else {\r\n                    number = Plugin.getNextStep();\r\n                }\r\n\r\n                //== Before next and prev events\r\n                var callback;\r\n\r\n                if (number > wizard.currentStep) {\r\n                    callback = Plugin.eventTrigger('beforeNext');\r\n                } else {\r\n                    callback = Plugin.eventTrigger('beforePrev');\r\n                }\r\n\r\n                //== Continue if no exit\r\n                if (callback !== false) {\r\n                    //== Set current step\r\n                    wizard.currentStep = number;\r\n\r\n                    //== Update UI\r\n                    Plugin.updateUI();             \r\n\r\n                    //== Trigger change event\r\n                    Plugin.eventTrigger('change')       \r\n                }\r\n                \r\n                //== After next and prev events\r\n                if (number > wizard.startStep) {\r\n                    Plugin.eventTrigger('afterNext');\r\n                } else {\r\n                    Plugin.eventTrigger('afterPrev');\r\n                }\r\n\r\n                return wizard;\r\n            },\r\n\r\n            updateUI: function(argument) {\r\n                //== Update progress bar\r\n                Plugin.updateProgress();\r\n\r\n                //== Show current target content\r\n                Plugin.handleTarget();\r\n\r\n                //== Set classes\r\n                Plugin.setStepClass();\r\n\r\n                //== Apply nav step classes\r\n                wizard.find('.m-wizard__step').removeClass('m-wizard__step--current').removeClass('m-wizard__step--done');\r\n                for (var i = 1; i < wizard.currentStep; i++) {\r\n                    wizard.find('.m-wizard__step').eq(i - 1).addClass('m-wizard__step--done');\r\n                }\r\n                wizard.find('.m-wizard__step').eq(wizard.currentStep - 1).addClass('m-wizard__step--current');\r\n            },\r\n\r\n            /**\r\n             * Check last step\r\n             */\r\n            isLastStep: function() {\r\n                return wizard.currentStep === wizard.totalSteps;\r\n            },\r\n\r\n            /**\r\n             * Check first step\r\n             */\r\n            isFirstStep: function() {\r\n                return wizard.currentStep === 1;\r\n            },\r\n\r\n            /**\r\n             * Check between step\r\n             */\r\n            isBetweenStep: function() {\r\n                return Plugin.isLastStep() === false && Plugin.isFirstStep() === false;\r\n            },\r\n\r\n            /**\r\n             * Set step class\r\n             */\r\n            setStepClass: function() {\r\n                if (Plugin.isLastStep()) {\r\n                    element.addClass('m-wizard--step-last');\r\n                } else {\r\n                    element.removeClass('m-wizard--step-last');\r\n                }\r\n\r\n                if (Plugin.isFirstStep()) {\r\n                    element.addClass('m-wizard--step-first');\r\n                } else {\r\n                    element.removeClass('m-wizard--step-first');\r\n                }\r\n\r\n                if (Plugin.isBetweenStep()) {\r\n                    element.addClass('m-wizard--step-between');\r\n                } else {\r\n                    element.removeClass('m-wizard--step-between');\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Go to the next step\r\n             */\r\n            goNext: function() {\r\n                return Plugin.goTo( Plugin.getNextStep() );\r\n            },\r\n\r\n            /**\r\n             * Go to the prev step\r\n             */\r\n            goPrev: function() {\r\n                return Plugin.goTo( Plugin.getPrevStep() );\r\n            },\r\n\r\n            /**\r\n             * Go to the last step\r\n             */\r\n            goLast: function() {\r\n                return Plugin.goTo( wizard.totalSteps );\r\n            },\r\n\r\n            /**\r\n             * Go to the first step\r\n             */\r\n            goFirst: function() {\r\n                return Plugin.goTo( 1 );\r\n            },\r\n\r\n            /**\r\n             * Set progress\r\n             */\r\n            updateProgress: function() {\r\n                //== Calculate progress position\r\n\r\n                if (!wizard.progress) {\r\n                    return;\r\n                } \r\n\r\n                //== Update progress\r\n                if (element.hasClass('m-wizard--1')) {\r\n                    var width = 100 * ((wizard.currentStep) / (wizard.totalSteps));\r\n                    var offset = element.find('.m-wizard__step-number').width();\r\n                    wizard.progress.css('width', 'calc(' + width + '% + ' + (offset / 2)  + 'px)');\r\n                } else if (element.hasClass('m-wizard--2')) {\r\n                    if (wizard.currentStep === 1) {\r\n                        return;\r\n                    }\r\n\r\n                    var step = element.find('.m-wizard__step').eq(0);\r\n                    var progress = (wizard.currentStep - 1) * (100 * (1 / (wizard.totalSteps - 1)));\r\n\r\n                    if (mUtil.isInResponsiveRange('minimal-desktop-and-below')) {  \r\n                        wizard.progress.css('height', progress + '%');\r\n                    } else {\r\n                        wizard.progress.css('width', progress + '%');\r\n                    }\r\n                } else {\r\n                    var width = 100 * ((wizard.currentStep) / (wizard.totalSteps));\r\n                    wizard.progress.css('width', width + '%'); \r\n                }             \r\n            },\r\n\r\n            /**\r\n             * Show/hide target content\r\n             */\r\n            handleTarget: function() {\r\n                var step = wizard.steps.eq(wizard.currentStep - 1);\r\n                var target = element.find( step.data('wizard-target') );\r\n\r\n                element.find('.m-wizard__form-step--current').removeClass('m-wizard__form-step--current');\r\n                target.addClass('m-wizard__form-step--current');\r\n            },\r\n\r\n            /**\r\n             * Get next step\r\n             */\r\n            getNextStep: function() {\r\n                if (wizard.totalSteps >= (wizard.currentStep + 1)) {\r\n                    return wizard.currentStep + 1;\r\n                } else {\r\n                    return wizard.totalSteps;\r\n                } \r\n            },\r\n\r\n            /**\r\n             * Get prev step\r\n             */\r\n            getPrevStep: function() {\r\n                if ((wizard.currentStep - 1) >= 1) {\r\n                    return wizard.currentStep - 1;\r\n                } else {\r\n                    return 1;\r\n                } \r\n            },\r\n\r\n            /**\r\n             * Trigger event\r\n             */\r\n            eventTrigger: function(name) {\r\n                for (i = 0; i < wizard.events.length; i++) {\r\n                    var event = wizard.events[i];\r\n                    if (event.name == name) {\r\n                        if (event.one == true) {\r\n                            if (event.fired == false) {\r\n                                wizard.events[i].fired = true;\r\n                                return event.handler.call(this, wizard);\r\n                            }\r\n                        } else {\r\n                            return  event.handler.call(this, wizard);\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Register event\r\n             */\r\n            addEvent: function(name, handler, one) {\r\n                wizard.events.push({\r\n                    name: name,\r\n                    handler: handler,\r\n                    one: one,\r\n                    fired: false\r\n                });\r\n\r\n                Plugin.sync();\r\n            }\r\n        };\r\n\r\n        //== Main variables\r\n        var the = this;\r\n        \r\n        //== Init plugin\r\n        Plugin.run.apply(this, [options]);\r\n\r\n        /********************\r\n         ** PUBLIC API METHODS\r\n         ********************/\r\n\r\n        /**\r\n         * Go to the next step \r\n         */\r\n        wizard.goNext =  function () {\r\n            return Plugin.goNext();\r\n        };\r\n\r\n        /**\r\n         * Go to the prev step \r\n         */\r\n        wizard.goPrev =  function () {\r\n            return Plugin.goPrev();\r\n        };\r\n\r\n        /**\r\n         * Go to the last step \r\n         */\r\n        wizard.goLast =  function () {\r\n            return Plugin.goLast();\r\n        };\r\n\r\n        /**\r\n         * Go to the first step \r\n         */\r\n        wizard.goFirst =  function () {\r\n            return Plugin.goFirst();\r\n        };\r\n\r\n         /**\r\n         * Go to a step\r\n         */\r\n        wizard.goTo =  function ( number ) {\r\n            return Plugin.goTo( number );\r\n        };\r\n\r\n        /**\r\n         * Get current step number \r\n         */\r\n        wizard.getStep =  function () {\r\n            return wizard.currentStep;\r\n        };\r\n\r\n        /**\r\n         * Check last step \r\n         */\r\n        wizard.isLastStep =  function () {\r\n            return Plugin.isLastStep();\r\n        };\r\n\r\n        /**\r\n         * Check first step \r\n         */\r\n        wizard.isFirstStep =  function () {\r\n            return Plugin.isFirstStep();\r\n        };\r\n\r\n        /**\r\n         * Attach event\r\n         * @returns {mwizard}\r\n         */\r\n        wizard.on =  function (name, handler) {\r\n            return Plugin.addEvent(name, handler);\r\n        };\r\n\r\n        /**\r\n         * Attach event that will be fired once\r\n         * @returns {mwizard}\r\n         */\r\n        wizard.one =  function (name, handler) {\r\n            return Plugin.addEvent(name, handler, true);\r\n        };   \r\n\r\n        return wizard;\r\n    };\r\n\r\n    //== Default options\r\n    $.fn.mWizard.defaults = {\r\n        startStep: 1\r\n    }; \r\n}(jQuery));\n(function($) {\r\n\r\n\t$.fn.mDatatable = $.fn.mDatatable || {};\r\n\r\n\t/**\r\n\t * @param datatable Main datatable plugin instance\r\n\t * @param options Extension options\r\n\t * @returns {*}\r\n\t */\r\n\t$.fn.mDatatable.checkbox = function(datatable, options) {\r\n\r\n\t\tvar Extension = {\r\n\t\t\tselectedAllRows: false,\r\n\t\t\tselectedRows: [],\r\n\t\t\tunselectedRows: [],\r\n\r\n\t\t\tinit: function() {\r\n\t\t\t\tif (Extension.selectorEnabled()) {\r\n\t\t\t\t\t// requestIds is not null\r\n\t\t\t\t\tif (options.vars.requestIds) {\r\n\t\t\t\t\t\t// request ids in response\r\n\t\t\t\t\t\tdatatable.setDataSourceParam(options.vars.requestIds, true);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// select all on extension init\r\n\t\t\t\t\tExtension.selectedAllRows = datatable.getDataSourceParam(options.vars.selectedAllRows);\r\n\r\n\t\t\t\t\t$(datatable).on('m-datatable--on-layout-updated', function(e, args) {\r\n\t\t\t\t\t\tif (args.table != $(datatable.wrap).attr('id')) return;\r\n\t\t\t\t\t\tdatatable.ready(function() {\r\n\t\t\t\t\t\t\tExtension.initVars();\r\n\t\t\t\t\t\t\tExtension.initEvent();\r\n\t\t\t\t\t\t\tExtension.initSelect();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Init checkbox clicks event\r\n\t\t\t */\r\n\t\t\tinitEvent: function() {\r\n\t\t\t\t// select all checkbox click\r\n\t\t\t\t$(datatable.tableHead).find('.m-checkbox--all > [type=\"checkbox\"]').click(function(e) {\r\n\t\t\t\t\t// clear selected and unselected rows\r\n\t\t\t\t\tExtension.selectedRows = Extension.unselectedRows = [];\r\n\t\t\t\t\tdatatable.stateRemove('checkbox');\r\n\r\n\t\t\t\t\t// select all rows\r\n\t\t\t\t\tif ($(this).is(':checked')) {\r\n\t\t\t\t\t\tExtension.selectedAllRows = true;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tExtension.selectedAllRows = false;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// local select all current page rows\r\n\t\t\t\t\tif (!options.vars.requestIds) {\r\n\t\t\t\t\t\tif ($(this).is(':checked')) {\r\n\t\t\t\t\t\t\tExtension.selectedRows = $.makeArray($(datatable.tableBody).find('.m-checkbox--single > [type=\"checkbox\"]').\r\n\t\t\t\t\t\t\t\tmap(function(i, chk) {\r\n\t\t\t\t\t\t\t\t\treturn $(chk).val();\r\n\t\t\t\t\t\t\t\t}));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar storage = {};\r\n\t\t\t\t\t\tstorage['selectedRows'] = $.unique(Extension.selectedRows);\r\n\t\t\t\t\t\tdatatable.stateKeep('checkbox', storage);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// keep selectedAllRows in datasource params\r\n\t\t\t\t\tdatatable.setDataSourceParam(options.vars.selectedAllRows, Extension.selectedAllRows);\r\n\r\n\t\t\t\t\t$(datatable).trigger('m-datatable--on-click-checkbox', [$(this)]);\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// single row checkbox click\r\n\t\t\t\t$(datatable.tableBody).find('.m-checkbox--single > [type=\"checkbox\"]').click(function(e) {\r\n\t\t\t\t\tvar id = $(this).val();\r\n\t\t\t\t\tif ($(this).is(':checked')) {\r\n\t\t\t\t\t\tExtension.selectedRows.push(id);\r\n\t\t\t\t\t\t// remove from unselected rows\r\n\t\t\t\t\t\tExtension.unselectedRows = Extension.remove(Extension.unselectedRows, id);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tExtension.unselectedRows.push(id);\r\n\t\t\t\t\t\t// remove from selected rows\r\n\t\t\t\t\t\tExtension.selectedRows = Extension.remove(Extension.selectedRows, id);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// local checkbox header check\r\n\t\t\t\t\tif (!options.vars.requestIds && Extension.selectedRows.length < 1) {\r\n\t\t\t\t\t\t// remove select all checkbox, if there is no checked checkbox left\r\n\t\t\t\t\t\t$(datatable.tableHead).find('.m-checkbox--all > [type=\"checkbox\"]').prop('checked', false);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar storage = {};\r\n\t\t\t\t\tstorage['selectedRows'] = $.unique(Extension.selectedRows);\r\n\t\t\t\t\tstorage['unselectedRows'] = $.unique(Extension.unselectedRows);\r\n\t\t\t\t\tdatatable.stateKeep('checkbox', storage);\r\n\r\n\t\t\t\t\t$(datatable).trigger('m-datatable--on-click-checkbox', [$(this)]);\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\tinitSelect: function() {\r\n\t\t\t\t// selected all rows from server\r\n\t\t\t\tif (Extension.selectedAllRows && options.vars.requestIds) {\r\n\t\t\t\t\tif (!datatable.hasClass('m-datatable--error')) {\r\n\t\t\t\t\t\t// set header select all checkbox checked\r\n\t\t\t\t\t\t$(datatable.tableHead).find('.m-checkbox--all > [type=\"checkbox\"]').prop('checked', true);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// set all checkbox in table body\r\n\t\t\t\t\tdatatable.setActiveAll(true);\r\n\r\n\t\t\t\t\t// remove unselected rows\r\n\t\t\t\t\tExtension.unselectedRows.forEach(function(id) {\r\n\t\t\t\t\t\tdatatable.setInactive(id);\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// single check for server and local\r\n\t\t\t\t\tExtension.selectedRows.forEach(function(id) {\r\n\t\t\t\t\t\tdatatable.setActive(id);\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t// local checkbox; check if all checkboxes of currect page are checked\r\n\t\t\t\t\tif (!datatable.hasClass('m-datatable--error') && $(datatable.tableBody).find('.m-checkbox--single > [type=\"checkbox\"]').not(':checked').length < 1) {\r\n\t\t\t\t\t\t// set header select all checkbox checked\r\n\t\t\t\t\t\t$(datatable.tableHead).find('.m-checkbox--all > [type=\"checkbox\"]').prop('checked', true);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Check if selector is enabled from options\r\n\t\t\t */\r\n\t\t\tselectorEnabled: function() {\r\n\t\t\t\treturn $.grep(datatable.options.columns, function(n, i) {\r\n\t\t\t\t\treturn n.selector || false;\r\n\t\t\t\t})[0];\r\n\t\t\t},\r\n\r\n\t\t\tinitVars: function() {\r\n\t\t\t\t// get single select/unselect from localstorage\r\n\t\t\t\tvar storage = datatable.stateGet('checkbox');\r\n\t\t\t\tif (typeof storage !== 'undefined') {\r\n\t\t\t\t\tExtension.selectedRows = storage['selectedRows'] || [];\r\n\t\t\t\t\tExtension.unselectedRows = storage['unselectedRows'] || [];\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tgetSelectedId: function(path) {\r\n\t\t\t\tExtension.initVars();\r\n\r\n\t\t\t\t// server selected all rows\r\n\t\t\t\tif (Extension.selectedAllRows && options.vars.requestIds) {\r\n\t\t\t\t\tif (typeof path === 'undefined') path = options.vars.rowIds;\r\n\r\n\t\t\t\t\t// if selected all rows, return id from response meta\r\n\t\t\t\t\tvar selectedAllRows = datatable.getObject(path, datatable.lastResponse) || [];\r\n\r\n\t\t\t\t\tif (selectedAllRows.length > 0) {\r\n\t\t\t\t\t\t// remove single unselected rows from selectedAllRows ids from server response emta\r\n\t\t\t\t\t\tExtension.unselectedRows.forEach(function(id) {\r\n\t\t\t\t\t\t\tselectedAllRows = Extension.remove(selectedAllRows, parseInt(id));\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn selectedAllRows;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// else return single checked selected rows\r\n\t\t\t\treturn Extension.selectedRows;\r\n\t\t\t},\r\n\r\n\t\t\tremove: function(array, element) {\r\n\t\t\t\treturn array.filter(function(e) {\r\n\t\t\t\t\treturn e !== element;\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\t// make the extension accessible from datatable init\r\n\t\tdatatable.checkbox = function() {\r\n\t\t\treturn Extension;\r\n\t\t};\r\n\r\n\t\tif (typeof options === 'object') {\r\n\t\t\toptions = $.extend(true, {}, $.fn.mDatatable.checkbox.default, options);\r\n\t\t\tExtension.init.apply(this, [options]);\r\n\t\t}\r\n\r\n\t\treturn datatable;\r\n\t};\r\n\r\n\t$.fn.mDatatable.checkbox.default = {\r\n\t\tvars: {\r\n\t\t\t// select all rows flag to be sent to the server\r\n\t\t\tselectedAllRows: 'selectedAllRows',\r\n\t\t\t// request id parameter's name\r\n\t\t\trequestIds: 'requestIds',\r\n\t\t\t// response path to all rows id\r\n\t\t\trowIds: 'meta.rowIds',\r\n\t\t},\r\n\t};\r\n\r\n}(jQuery));\n//== Set defaults\r\n\r\n$.notifyDefaults({\r\n\ttemplate: '' +\r\n\t'<div data-notify=\"container\" class=\"alert alert-{0} m-alert\" role=\"alert\">' +\r\n\t'<button type=\"button\" aria-hidden=\"true\" class=\"close\" data-notify=\"dismiss\"></button>' +\r\n\t'<span data-notify=\"icon\"></span>' +\r\n\t'<span data-notify=\"title\">{1}</span>' +\r\n\t'<span data-notify=\"message\">{2}</span>' +\r\n\t'<div class=\"progress\" data-notify=\"progressbar\">' +\r\n\t'<div class=\"progress-bar progress-bar-animated bg-{0}\" role=\"progressbar\" aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width: 0%;\"></div>' +\r\n\t'</div>' +\r\n\t'<a href=\"{3}\" target=\"{4}\" data-notify=\"url\"></a>' +\r\n\t'</div>'\r\n});\n//== Set defaults\r\nswal.setDefaults({\r\n\twidth: 400,\r\n\tpadding: '2.5rem',\r\n\tbuttonsStyling: false,\r\n\tconfirmButtonClass: 'btn btn-success m-btn m-btn--custom',\r\n\tconfirmButtonColor: null,\r\n\tcancelButtonClass: 'btn btn-secondary m-btn m-btn--custom',\r\n\tcancelButtonColor: null\r\n});\nChart.elements.Rectangle.prototype.draw = function() {    \r\n    var ctx = this._chart.ctx;\r\n    var vm = this._view;\r\n    var left, right, top, bottom, signX, signY, borderSkipped, radius;\r\n    var borderWidth = vm.borderWidth;\r\n\r\n    // Set Radius Here\r\n    // If radius is large enough to cause drawing errors a max radius is imposed\r\n    var cornerRadius = this._chart.options.barRadius ? this._chart.options.barRadius : 0;\r\n\r\n    if (!vm.horizontal) {\r\n        // bar\r\n        left = vm.x - vm.width / 2;\r\n        right = vm.x + vm.width / 2;\r\n\r\n        if (vm.y > 2 * cornerRadius) {\r\n        \ttop = vm.y - cornerRadius;        \r\n        } else {\r\n        \ttop = vm.y;        \r\n        }\r\n\r\n        bottom = vm.base;\r\n        signX = 1;\r\n        signY = bottom > top? 1: -1;\r\n        borderSkipped = vm.borderSkipped || 'bottom';\r\n        //console.log(vm.base + '-' + vm.y);\r\n    } else {\r\n        // horizontal bar\r\n        left = vm.base;\r\n        right = vm.x;\r\n        top = vm.y - vm.height / 2;\r\n        bottom = vm.y + vm.height / 2;\r\n        signX = right > left? 1: -1;\r\n        signY = 1;\r\n        borderSkipped = vm.borderSkipped || 'left';\r\n    }\r\n\r\n    // Canvas doesn't allow us to stroke inside the width so we can\r\n    // adjust the sizes to fit if we're setting a stroke on the line\r\n    if (borderWidth) {\r\n        // borderWidth shold be less than bar width and bar height.\r\n        var barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\r\n        borderWidth = borderWidth > barSize? barSize: borderWidth;\r\n        var halfStroke = borderWidth / 2;\r\n        // Adjust borderWidth when bar top position is near vm.base(zero).\r\n        var borderLeft = left + (borderSkipped !== 'left'? halfStroke * signX: 0);\r\n        var borderRight = right + (borderSkipped !== 'right'? -halfStroke * signX: 0);\r\n        var borderTop = top + (borderSkipped !== 'top'? halfStroke * signY: 0);\r\n        var borderBottom = bottom + (borderSkipped !== 'bottom'? -halfStroke * signY: 0);\r\n        // not become a vertical line?\r\n        if (borderLeft !== borderRight) {\r\n            top = borderTop;\r\n            bottom = borderBottom;\r\n        }\r\n        // not become a horizontal line?\r\n        if (borderTop !== borderBottom) {\r\n            left = borderLeft;\r\n            right = borderRight;\r\n        }\r\n    }\r\n\r\n    ctx.beginPath();\r\n    ctx.fillStyle = vm.backgroundColor;\r\n    ctx.strokeStyle = vm.borderColor;\r\n    ctx.lineWidth = borderWidth;\r\n\r\n    // Corner points, from bottom-left to bottom-right clockwise\r\n    // | 1 2 |\r\n    // | 0 3 |\r\n    var corners = [\r\n        [left, bottom],\r\n        [left, top],\r\n        [right, top],\r\n        [right, bottom]\r\n    ];\r\n\r\n    // Find first (starting) corner with fallback to 'bottom'\r\n    var borders = ['bottom', 'left', 'top', 'right'];\r\n    var startCorner = borders.indexOf(borderSkipped, 0);\r\n    if (startCorner === -1) {\r\n        startCorner = 0;\r\n    }\r\n\r\n    function cornerAt(index) {\r\n        return corners[(startCorner + index) % 4];\r\n    }\r\n\r\n    // Draw rectangle from 'startCorner'\r\n    var corner = cornerAt(0);\r\n    ctx.moveTo(corner[0], corner[1]);\r\n\r\n    for (var i = 1; i < 4; i++) {\r\n        corner = cornerAt(i);\r\n        nextCornerId = i+1;\r\n        if(nextCornerId == 4){\r\n            nextCornerId = 0\r\n        }\r\n\r\n        nextCorner = cornerAt(nextCornerId);\r\n\r\n        width = corners[2][0] - corners[1][0];\r\n        height = corners[0][1] - corners[1][1];\r\n        x = corners[1][0];\r\n        y = corners[1][1];\r\n        \r\n        var radius = cornerRadius;\r\n        \r\n        // Fix radius being too large\r\n        if(radius > height/2){\r\n            radius = height/2;\r\n        }if(radius > width/2){\r\n            radius = width/2;\r\n        }\r\n\r\n        ctx.moveTo(x + radius, y);\r\n        ctx.lineTo(x + width - radius, y);\r\n        ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\r\n        ctx.lineTo(x + width, y + height - radius);\r\n        ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\r\n        ctx.lineTo(x + radius, y + height);\r\n        ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\r\n        ctx.lineTo(x, y + radius);\r\n        ctx.quadraticCurveTo(x, y, x + radius, y);\r\n    }\r\n\r\n    ctx.fill();\r\n    if (borderWidth) {\r\n        ctx.stroke();\r\n    }\r\n}; \n\n  $.fn.markdown.defaults.iconlibrary = 'fa';\n//$.fn.bootstrapSwitch.defaults.size = 'large';\r\n//$.fn.bootstrapSwitch.defaults.onColor = 'success';\n$.fn.timepicker.defaults = $.extend(true, {}, $.fn.timepicker.defaults, {\r\n    icons: {\r\n        up: 'la la-angle-up',\r\n        down: 'la la-angle-down'  \r\n    }\r\n});\njQuery.validator.setDefaults({\r\n    errorElement: 'div', //default input error message container\r\n    errorClass: 'form-control-feedback', // default input error message class\r\n    focusInvalid: false, // do not focus the last invalid input\r\n    ignore: \"\",  // validate all fields including form hidden input\r\n\r\n    errorPlacement: function(error, element) { // render error placement for each input type\r\n        var group = $(element).closest('.m-form__group-sub').length > 0 ? $(element).closest('.m-form__group-sub') : $(element).closest('.m-form__group');\r\n        var help = group.find('.m-form__help');\r\n\r\n        if (group.find('.form-control-feedback').length !== 0) {\r\n            return;\r\n        }\r\n\r\n        if (help.length > 0) {\r\n            help.before(error);\r\n        } else {\r\n            if ($(element).closest('.input-group').length > 0) {\r\n                $(element).closest('.input-group').after(error);\r\n            } else {\r\n                if ($(element).is(':checkbox')) {\r\n                    $(element).closest('.m-checkbox').find('>span').after(error);\r\n                } else {\r\n                    $(element).after(error);\r\n                }                \r\n            }            \r\n        }\r\n    },\r\n\r\n    highlight: function(element) { // hightlight error inputs\r\n        var group = $(element).closest('.m-form__group-sub').length > 0  ? $(element).closest('.m-form__group-sub') : $(element).closest('.m-form__group');\r\n\r\n        console.log('add' + group.attr('class'));\r\n\r\n        group.addClass('has-danger'); // set error class to the control groupx\r\n    },\r\n\r\n    unhighlight: function(element) { // revert the change done by hightlight\r\n        var group = $(element).closest('.m-form__group-sub').length > 0  ? $(element).closest('.m-form__group-sub') : $(element).closest('.m-form__group');\r\n\r\n        group.removeClass('has-danger'); // set error class to the control group\r\n    },\r\n\r\n    success: function(label, element) {\r\n        var group = $(label).closest('.m-form__group-sub').length > 0  ? $(label).closest('.m-form__group-sub') : $(label).closest('.m-form__group');\r\n\r\n        //group.addClass('has-success').removeClass('has-danger'); // set success class and hide error class\r\n        group.removeClass('has-danger'); // hide error class\r\n        group.find('.form-control-feedback').remove();\r\n    }\r\n});\r\n\r\njQuery.validator.addMethod(\"email\", function(value, element) {\r\n    if (/^([a-zA-Z0-9_\\.\\-])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$/.test(value)) {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n}, \"Please enter a valid Email.\");\nvar mLayout = function() {\r\n    var horMenu;\r\n    var asideMenu;\r\n    var asideMenuOffcanvas;\r\n    var horMenuOffcanvas;\r\n\r\n    var initStickyHeader = function() {\r\n        var header = $('.m-header');\r\n        var options = {\r\n            offset: {},\r\n            minimize:{}       \r\n        };\r\n\r\n        if (header.data('minimize-mobile') == 'hide') {\r\n            options.minimize.mobile = {};\r\n            options.minimize.mobile.on = 'm-header--hide';\r\n            options.minimize.mobile.off = 'm-header--show';\r\n        } else {\r\n            options.minimize.mobile = false;\r\n        }\r\n\r\n        if (header.data('minimize') == 'hide') {\r\n            options.minimize.desktop = {};\r\n            options.minimize.desktop.on = 'm-header--hide';\r\n            options.minimize.desktop.off = 'm-header--show';\r\n        } else {\r\n            options.minimize.desktop = false;\r\n        }\r\n\r\n        if (header.data('minimize-offset')) {\r\n            options.offset.desktop = header.data('minimize-offset');\r\n        }\r\n\r\n        if (header.data('minimize-mobile-offset')) {\r\n            options.offset.mobile = header.data('minimize-mobile-offset');\r\n        }        \r\n\r\n        header.mHeader(options);\r\n    }\r\n\r\n    // handle horizontal menu\r\n    var initHorMenu = function() { \r\n        // init aside left offcanvas\r\n        horMenuOffcanvas = $('#m_header_menu').mOffcanvas({\r\n            class: 'm-aside-header-menu-mobile',\r\n            overlay: true,\r\n            close: '#m_aside_header_menu_mobile_close_btn',\r\n            toggle: {\r\n                target: '#m_aside_header_menu_mobile_toggle',\r\n                state: 'm-brand__toggler--active'\r\n            }            \r\n        });\r\n        \r\n        horMenu = $('#m_header_menu').mMenu({\r\n            // submenu modes\r\n            submenu: {\r\n                desktop: 'dropdown',\r\n                tablet: 'accordion',\r\n                mobile: 'accordion'\r\n            },\r\n            // resize menu on window resize\r\n            resize: {\r\n                desktop: function() {\r\n                    var headerNavWidth = $('#m_header_nav').width();\r\n                    var headerMenuWidth = $('#m_header_menu_container').width();\r\n                    var headerTopbarWidth = $('#m_header_topbar').width();\r\n                    var spareWidth = 20;\r\n\r\n                    if ((headerMenuWidth + headerTopbarWidth + spareWidth) > headerNavWidth ) {\r\n                        return false;\r\n                    } else {\r\n                        return true;\r\n                    }\r\n                }\r\n            }    \r\n        });\r\n    }\r\n\r\n    // handle vertical menu\r\n    var initLeftAsideMenu = function() {\r\n        var menu = $('#m_ver_menu');\r\n\r\n        // init aside menu\r\n        var menuOptions = {  \r\n            // submenu setup\r\n            submenu: {\r\n                desktop: {\r\n                    // by default the menu mode set to accordion in desktop mode\r\n                    default: (menu.data('menu-dropdown') == true ? 'dropdown' : 'accordion'),\r\n                    // whenever body has this class switch the menu mode to dropdown\r\n                    state: {\r\n                        body: 'm-aside-left--minimize',  \r\n                        mode: 'dropdown'\r\n                    }\r\n                },\r\n                tablet: 'accordion', // menu set to accordion in tablet mode\r\n                mobile: 'accordion'  // menu set to accordion in mobile mode\r\n            },\r\n\r\n            //accordion setup\r\n            accordion: {\r\n                autoScroll: true,\r\n                expandAll: false\r\n            }\r\n        };\r\n\r\n        asideMenu = menu.mMenu(menuOptions);\r\n    }\r\n\r\n    // handle vertical menu\r\n    var initLeftAside = function() {\r\n        // init aside left offcanvas\r\n        var asideOffcanvasClass = ($('#m_aside_left').hasClass('m-aside-left--offcanvas-default') ? 'm-aside-left--offcanvas-default' : 'm-aside-left');\r\n\r\n        asideMenuOffcanvas = $('#m_aside_left').mOffcanvas({\r\n            class: asideOffcanvasClass,\r\n            overlay: true,\r\n            close: '#m_aside_left_close_btn',\r\n            toggle: {\r\n                target: '#m_aside_left_offcanvas_toggle',\r\n                state: 'm-brand__toggler--active'                \r\n            }            \r\n        }); \r\n\r\n        $('#m_aside_left').find('.m-menu__item--submenu-fullheight').each(function() {\r\n            var obj = $(this).find('> .m-menu__submenu > .m-menu__wrapper');\r\n\r\n            if (mUtil.isInResponsiveRange('tablet-and-mobile')) {\r\n                // destroy if the instance was previously created\r\n                mApp.destroyScroller(obj);\r\n                return;\r\n            }\r\n\r\n            var height = mUtil.getViewPort().height;\r\n\r\n            // create/re-create a new instance\r\n            mApp.initScroller(obj, {height: height}, true);\r\n        });   \r\n    }\r\n\r\n    var initTopbar = function() {\r\n        $('#m_aside_header_topbar_mobile_toggle').click(function() {\r\n            $('body').toggleClass('m-topbar--on');\r\n        });                                  \r\n\r\n        // Animated Notification Icon \r\n        setInterval(function() {\r\n            $('#m_topbar_notification_icon .m-nav__link-icon').addClass('m-animate-shake');\r\n            $('#m_topbar_notification_icon .m-nav__link-badge').addClass('m-animate-blink');\r\n        }, 3000);\r\n\r\n        setInterval(function() {\r\n            $('#m_topbar_notification_icon .m-nav__link-icon').removeClass('m-animate-shake');\r\n            $('#m_topbar_notification_icon .m-nav__link-badge').removeClass('m-animate-blink');\r\n        }, 6000);\r\n    }\r\n\r\n    // handle quick search\r\n    var initQuicksearch = function() {\r\n        var qs = $('#m_quicksearch');\r\n\r\n        qs.mQuicksearch({\r\n            type: qs.data('search-type'), // quick search type\r\n            source: 'inc/api/quick_search.php',            \r\n            spinner: 'm-loader m-loader--skin-light m-loader--right',\r\n\r\n            input: '#m_quicksearch_input',\r\n            iconClose: '#m_quicksearch_close',\r\n            iconCancel: '#m_quicksearch_cancel',\r\n            iconSearch: '#m_quicksearch_search',\r\n\r\n            hasResultClass: 'm-list-search--has-result',\r\n            minLength: 1,            \r\n            templates: {\r\n                error: function(qs) {\r\n                    return '<div class=\"m-search-results m-search-results--skin-light\"><span class=\"m-search-result__message\">Something went wrong</div></div>';\r\n                }                            \r\n            }\r\n        });      \r\n    }\r\n\r\n    var initScrollTop = function() {\r\n        $('[data-toggle=\"m-scroll-top\"]').mScrollTop({\r\n            offset: 300,\r\n            speed: 600\r\n        });\r\n    }\r\n\r\n    return {\r\n        init: function() {  \r\n            this.initHeader();\r\n            this.initAside();\r\n        },\r\n\r\n        initHeader: function() {\r\n            initStickyHeader();\r\n            initHorMenu();\r\n            initTopbar();\r\n            initQuicksearch();\r\n            initScrollTop();\r\n        },\r\n\r\n        initAside: function() {\r\n            initLeftAside();\r\n            initLeftAsideMenu();     \r\n        },\r\n\r\n        getAsideMenu: function() {\r\n            return asideMenu;\r\n        },\r\n\r\n        closeMobileAsideMenuOffcanvas: function() {\r\n            if (mUtil.isMobileDevice()) {\r\n                asideMenuOffcanvas.hide();\r\n            }\r\n        },\r\n\r\n        closeMobileHorMenuOffcanvas: function() {\r\n            if (mUtil.isMobileDevice()) {\r\n                horMenuOffcanvas.hide();\r\n            }\r\n        }\r\n    };\r\n}();\r\n\r\n$(document).ready(function() {\r\n    if (mUtil.isAngularVersion() === false) {\r\n        mLayout.init();\r\n    }\r\n});\r\n\n\nvar mQuickSidebar = function() {\r\n    var topbarAside = $('#m_quick_sidebar');\r\n    var topbarAsideTabs = $('#m_quick_sidebar_tabs');    \r\n    var topbarAsideClose = $('#m_quick_sidebar_close');\r\n    var topbarAsideToggle = $('#m_quick_sidebar_toggle');\r\n    var topbarAsideContent = topbarAside.find('.m-quick-sidebar__content');\r\n\r\n    var initMessages = function() {\r\n        var messenger = $('#m_quick_sidebar_tabs_messenger');  \r\n\r\n        if (messenger.length === 0) {\r\n            return;\r\n        }\r\n\r\n        var messengerMessages = messenger.find('.m-messenger__messages');\r\n\r\n        var init = function() {\r\n            var height = topbarAside.outerHeight(true) - \r\n                topbarAsideTabs.outerHeight(true) - \r\n                messenger.find('.m-messenger__form').outerHeight(true) - 120;\r\n            \r\n            // init messages scrollable content\r\n            messengerMessages.css('height', height);\r\n            mApp.initScroller(messengerMessages, {});\r\n        }\r\n\r\n        init();        \r\n        \r\n        // reinit on window resize\r\n        mUtil.addResizeHandler(init);\r\n    }\r\n\r\n    var initSettings = function() { \r\n        var settings = $('#m_quick_sidebar_tabs_settings');\r\n\r\n        if (settings.length === 0) {\r\n            return;\r\n        }\r\n\r\n        // init dropdown tabbable content\r\n        var init = function() {\r\n            var height = mUtil.getViewPort().height - topbarAsideTabs.outerHeight(true) - 60;\r\n\r\n            // init settings scrollable content\r\n            settings.css('height', height);\r\n            mApp.initScroller(settings, {});\r\n        }\r\n\r\n        init();\r\n\r\n        // reinit on window resize\r\n        mUtil.addResizeHandler(init);\r\n    }\r\n\r\n    var initLogs = function() {\r\n        // init dropdown tabbable content\r\n        var logs = $('#m_quick_sidebar_tabs_logs');\r\n\r\n        if (logs.length === 0) {\r\n            return;\r\n        }\r\n\r\n        var init = function() {\r\n            var height = mUtil.getViewPort().height - topbarAsideTabs.outerHeight(true) - 60;\r\n\r\n            // init settings scrollable content\r\n            logs.css('height', height);\r\n            mApp.initScroller(logs, {});\r\n        }\r\n\r\n        init();\r\n\r\n        // reinit on window resize\r\n        mUtil.addResizeHandler(init);\r\n    }\r\n\r\n    var initOffcanvasTabs = function() {\r\n        initMessages();\r\n        initSettings();\r\n        initLogs();\r\n    }\r\n\r\n    var initOffcanvas = function() {\r\n        topbarAside.mOffcanvas({\r\n            class: 'm-quick-sidebar',\r\n            overlay: true,  \r\n            close: topbarAsideClose,\r\n            toggle: topbarAsideToggle\r\n        });   \r\n\r\n        // run once on first time dropdown shown\r\n        topbarAside.mOffcanvas().one('afterShow', function() {\r\n            mApp.block(topbarAside);\r\n\r\n            setTimeout(function() {\r\n                mApp.unblock(topbarAside);\r\n                \r\n                topbarAsideContent.removeClass('m--hide');\r\n\r\n                initOffcanvasTabs();\r\n            }, 1000);                         \r\n        });\r\n    }\r\n\r\n    return {     \r\n        init: function() {  \r\n            if (topbarAside.length === 0) {\r\n                return;\r\n            }\r\n\r\n            initOffcanvas(); \r\n        }\r\n    };\r\n}();\r\n\r\n$(document).ready(function() {\r\n    mQuickSidebar.init();\r\n});"],"file":"scripts.bundle.js"}