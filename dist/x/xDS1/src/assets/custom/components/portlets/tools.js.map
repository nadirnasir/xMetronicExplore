{"version":3,"names":[],"mappings":"","sources":["components/portlets/tools.js"],"sourcesContent":["var PortletTools = function () {\r\n    //== Toastr\r\n    var initToastr = function() {\r\n        toastr.options.showDuration = 1000;\r\n    }\r\n\r\n    //== Demo 1\r\n    var demo1 = function() {\r\n        // This portlet is lazy initialized using data-portlet=\"true\" attribute. You can access to the portlet object as shown below and override its behavior\r\n        var portlet = $('#m_portlet_tools_1').mPortlet();\r\n\r\n        //== Toggle event handlers\r\n        portlet.on('beforeCollapse', function(portlet) {\r\n            setTimeout(function() {\r\n                toastr.info('Before collapse event fired!');\r\n            }, 100);\r\n        });\r\n\r\n        portlet.on('afterCollapse', function(portlet) {\r\n            setTimeout(function() {\r\n                toastr.warning('Before collapse event fired!');\r\n            }, 2000);            \r\n        });\r\n\r\n        portlet.on('beforeExpand', function(portlet) {\r\n            setTimeout(function() {\r\n                toastr.info('Before expand event fired!');\r\n            }, 100);  \r\n        });\r\n\r\n        portlet.on('afterExpand', function(portlet) {\r\n            setTimeout(function() {\r\n                toastr.warning('After expand event fired!');\r\n            }, 2000);\r\n        });\r\n\r\n        //== Remove event handlers\r\n        portlet.on('beforeRemove', function(portlet) {\r\n            toastr.info('Before remove event fired!');\r\n\r\n            return confirm('Are you sure to remove this portlet ?');  // remove portlet after user confirmation\r\n        });\r\n\r\n        portlet.on('afterRemove', function(portlet) {\r\n            setTimeout(function() {\r\n                toastr.warning('After remove event fired!');\r\n            }, 2000);            \r\n        });\r\n\r\n        //== Reload event handlers\r\n        portlet.on('reload', function(portlet) {\r\n            toastr.info('Leload event fired!');\r\n\r\n            mApp.block(portlet.getSelf(), {\r\n                overlayColor: '#ffffff',\r\n                type: 'loader',\r\n                state: 'accent',\r\n                opacity: 0.3,\r\n                size: 'lg'\r\n            });\r\n\r\n            // update the content here\r\n\r\n            setTimeout(function() {\r\n                mApp.unblock(portlet.getSelf());\r\n            }, 2000);\r\n        });\r\n\r\n        //== Reload event handlers\r\n        portlet.on('afterFullscreenOn', function(portlet) {\r\n            //toastr.info('After fullscreen on event fired!');\r\n\r\n            var scrollable = portlet.getBody().find('> .m-scrollable');\r\n\r\n            scrollable.data('original-height', scrollable.data('max-height'));\r\n            scrollable.css('height', '100%');\r\n            scrollable.css('max-height', '100%');\r\n            mApp.initScroller(scrollable, {});\r\n        });\r\n\r\n        portlet.on('afterFullscreenOff', function(portlet) {\r\n            toastr.warning('After fullscreen off event fired!');\r\n\r\n            var scrollable = portlet.getBody().find('> .m-scrollable');\r\n\r\n            scrollable.css('height', scrollable.data('original-height'));\r\n            scrollable.data('max-height', scrollable.data('original-height')); \r\n            mApp.initScroller(scrollable, {});\r\n        });\r\n    }\r\n\r\n    //== Demo 2\r\n    var demo2 = function() {\r\n        // This portlet is lazy initialized using data-portlet=\"true\" attribute. You can access to the portlet object as shown below and override its behavior\r\n        var portlet = $('#m_portlet_tools_2').mPortlet();\r\n\r\n        //== Toggle event handlers\r\n        portlet.on('beforeCollapse', function(portlet) {\r\n            setTimeout(function() {\r\n                toastr.info('Before collapse event fired!');\r\n            }, 100);\r\n        });\r\n\r\n        portlet.on('afterCollapse', function(portlet) {\r\n            setTimeout(function() {\r\n                toastr.warning('Before collapse event fired!');\r\n            }, 2000);            \r\n        });\r\n\r\n        portlet.on('beforeExpand', function(portlet) {\r\n            setTimeout(function() {\r\n                toastr.info('Before expand event fired!');\r\n            }, 100);  \r\n        });\r\n\r\n        portlet.on('afterExpand', function(portlet) {\r\n            setTimeout(function() {\r\n                toastr.warning('After expand event fired!');\r\n            }, 2000);\r\n        });\r\n\r\n        //== Remove event handlers\r\n        portlet.on('beforeRemove', function(portlet) {\r\n            toastr.info('Before remove event fired!');\r\n\r\n            return confirm('Are you sure to remove this portlet ?');  // remove portlet after user confirmation\r\n        });\r\n\r\n        portlet.on('afterRemove', function(portlet) {\r\n            setTimeout(function() {\r\n                toastr.warning('After remove event fired!');\r\n            }, 2000);            \r\n        });\r\n\r\n        //== Reload event handlers\r\n        portlet.on('reload', function(portlet) {\r\n            toastr.info('Leload event fired!');\r\n\r\n            mApp.block(portlet.getSelf(), {\r\n                overlayColor: '#000000',\r\n                type: 'spinner',\r\n                state: 'brand',\r\n                opacity: 0.05,\r\n                size: 'lg'\r\n            });\r\n\r\n            // update the content here\r\n\r\n            setTimeout(function() {\r\n                mApp.unblock(portlet.getSelf());\r\n            }, 2000);\r\n        });\r\n    }\r\n\r\n    //== Demo 3\r\n    var demo3 = function() {\r\n        // This portlet is lazy initialized using data-portlet=\"true\" attribute. You can access to the portlet object as shown below and override its behavior\r\n        var portlet = $('#m_portlet_tools_3').mPortlet();\r\n\r\n        //== Toggle event handlers\r\n        portlet.on('beforeCollapse', function(portlet) {\r\n            setTimeout(function() {\r\n                toastr.info('Before collapse event fired!');\r\n            }, 100);\r\n        });\r\n\r\n        portlet.on('afterCollapse', function(portlet) {\r\n            setTimeout(function() {\r\n                toastr.warning('Before collapse event fired!');\r\n            }, 2000);            \r\n        });\r\n\r\n        portlet.on('beforeExpand', function(portlet) {\r\n            setTimeout(function() {\r\n                toastr.info('Before expand event fired!');\r\n            }, 100);  \r\n        });\r\n\r\n        portlet.on('afterExpand', function(portlet) {\r\n            setTimeout(function() {\r\n                toastr.warning('After expand event fired!');\r\n            }, 2000);\r\n        });\r\n\r\n        //== Remove event handlers\r\n        portlet.on('beforeRemove', function(portlet) {\r\n            toastr.info('Before remove event fired!');\r\n\r\n            return confirm('Are you sure to remove this portlet ?');  // remove portlet after user confirmation\r\n        });\r\n\r\n        portlet.on('afterRemove', function(portlet) {\r\n            setTimeout(function() {\r\n                toastr.warning('After remove event fired!');\r\n            }, 2000);            \r\n        });\r\n\r\n        //== Reload event handlers\r\n        portlet.on('reload', function(portlet) {\r\n            toastr.info('Leload event fired!');\r\n\r\n            mApp.block(portlet.getSelf(), {\r\n                type: 'loader',\r\n                state: 'success',\r\n                message: 'Please wait...'\r\n            });\r\n\r\n            // update the content here\r\n\r\n            setTimeout(function() {\r\n                mApp.unblock(portlet.getSelf());\r\n            }, 2000);\r\n        });\r\n\r\n        //== Reload event handlers\r\n        portlet.on('afterFullscreenOn', function(portlet) {\r\n            //toastr.info('After fullscreen on event fired!');\r\n\r\n            var scrollable = portlet.getBody().find('> .m-scrollable');\r\n\r\n            scrollable.data('original-height', scrollable.data('max-height'));\r\n            scrollable.css('height', '100%');\r\n            scrollable.css('max-height', '100%');\r\n            mApp.initScroller(scrollable, {});\r\n        });\r\n\r\n        portlet.on('afterFullscreenOff', function(portlet) {\r\n            toastr.warning('After fullscreen off event fired!');\r\n\r\n            var scrollable = portlet.getBody().find('> .m-scrollable');\r\n\r\n            scrollable.css('height', scrollable.data('original-height'));\r\n            scrollable.data('max-height', scrollable.data('original-height')); \r\n            mApp.initScroller(scrollable, {});\r\n        });\r\n    }\r\n \r\n    //== Demo 4\r\n    var demo4 = function() {\r\n        // This portlet is lazy initialized using data-portlet=\"true\" attribute. You can access to the portlet object as shown below and override its behavior\r\n        var portlet = $('#m_portlet_tools_4').mPortlet();\r\n\r\n        //== Toggle event handlers\r\n        portlet.on('beforeCollapse', function(portlet) {\r\n            setTimeout(function() {\r\n                toastr.info('Before collapse event fired!');\r\n            }, 100);\r\n        });\r\n\r\n        portlet.on('afterCollapse', function(portlet) {\r\n            setTimeout(function() {\r\n                toastr.warning('Before collapse event fired!');\r\n            }, 2000);            \r\n        });\r\n\r\n        portlet.on('beforeExpand', function(portlet) {\r\n            setTimeout(function() {\r\n                toastr.info('Before expand event fired!');\r\n            }, 100);  \r\n        });\r\n\r\n        portlet.on('afterExpand', function(portlet) {\r\n            setTimeout(function() {\r\n                toastr.warning('After expand event fired!');\r\n            }, 2000);\r\n        });\r\n\r\n        //== Remove event handlers\r\n        portlet.on('beforeRemove', function(portlet) {\r\n            toastr.info('Before remove event fired!');\r\n\r\n            return confirm('Are you sure to remove this portlet ?');  // remove portlet after user confirmation\r\n        });\r\n\r\n        portlet.on('afterRemove', function(portlet) {\r\n            setTimeout(function() {\r\n                toastr.warning('After remove event fired!');\r\n            }, 2000);            \r\n        });\r\n\r\n        //== Reload event handlers\r\n        portlet.on('reload', function(portlet) {\r\n            toastr.info('Leload event fired!');\r\n\r\n            mApp.block(portlet.getSelf(), {\r\n                type: 'loader',\r\n                state: 'brand',\r\n                message: 'Please wait...'\r\n            });\r\n\r\n            // update the content here\r\n\r\n            setTimeout(function() {\r\n                mApp.unblock(portlet.getSelf());\r\n            }, 2000);\r\n        });\r\n\r\n        //== Reload event handlers\r\n        portlet.on('afterFullscreenOn', function(portlet) {\r\n            //toastr.info('After fullscreen on event fired!');\r\n\r\n            var scrollable = portlet.getBody().find('> .m-scrollable');\r\n\r\n            scrollable.data('original-height', scrollable.data('max-height'));\r\n            scrollable.css('height', '100%');\r\n            scrollable.css('max-height', '100%');\r\n            mApp.initScroller(scrollable, {});\r\n        });\r\n\r\n        portlet.on('afterFullscreenOff', function(portlet) {\r\n            toastr.warning('After fullscreen off event fired!');\r\n\r\n            var scrollable = portlet.getBody().find('> .m-scrollable');\r\n\r\n            scrollable.css('height', scrollable.data('original-height'));\r\n            scrollable.data('max-height', scrollable.data('original-height')); \r\n            mApp.initScroller(scrollable, {});\r\n        });\r\n    }\r\n\r\n    //== Demo 5\r\n    var demo5 = function() {\r\n        // This portlet is lazy initialized using data-portlet=\"true\" attribute. You can access to the portlet object as shown below and override its behavior\r\n        var portlet = $('#m_portlet_tools_5').mPortlet();\r\n\r\n        //== Toggle event handlers\r\n        portlet.on('beforeCollapse', function(portlet) {\r\n            setTimeout(function() {\r\n                toastr.info('Before collapse event fired!');\r\n            }, 100);\r\n        });\r\n\r\n        portlet.on('afterCollapse', function(portlet) {\r\n            setTimeout(function() {\r\n                toastr.warning('Before collapse event fired!');\r\n            }, 2000);            \r\n        });\r\n\r\n        portlet.on('beforeExpand', function(portlet) {\r\n            setTimeout(function() {\r\n                toastr.info('Before expand event fired!');\r\n            }, 100);  \r\n        });\r\n\r\n        portlet.on('afterExpand', function(portlet) {\r\n            setTimeout(function() {\r\n                toastr.warning('After expand event fired!');\r\n            }, 2000);\r\n        });\r\n\r\n        //== Remove event handlers\r\n        portlet.on('beforeRemove', function(portlet) {\r\n            toastr.info('Before remove event fired!');\r\n\r\n            return confirm('Are you sure to remove this portlet ?');  // remove portlet after user confirmation\r\n        });\r\n\r\n        portlet.on('afterRemove', function(portlet) {\r\n            setTimeout(function() {\r\n                toastr.warning('After remove event fired!');\r\n            }, 2000);            \r\n        });\r\n\r\n        //== Reload event handlers\r\n        portlet.on('reload', function(portlet) {\r\n            toastr.info('Leload event fired!');\r\n\r\n            mApp.block(portlet.getSelf(), {\r\n                type: 'loader',\r\n                state: 'brand',\r\n                message: 'Please wait...'\r\n            });\r\n\r\n            // update the content here\r\n\r\n            setTimeout(function() {\r\n                mApp.unblock(portlet.getSelf());\r\n            }, 2000);\r\n        });\r\n\r\n        //== Reload event handlers\r\n        portlet.on('afterFullscreenOn', function(portlet) {\r\n            toastr.info('After fullscreen on event fired!');\r\n            mApp.initScroller(scrollable, {});\r\n        });\r\n\r\n        portlet.on('afterFullscreenOff', function(portlet) {\r\n            toastr.warning('After fullscreen off event fired!');\r\n        });\r\n    }\r\n\r\n    //== Demo 5\r\n    var demo6 = function() {\r\n        // This portlet is lazy initialized using data-portlet=\"true\" attribute. You can access to the portlet object as shown below and override its behavior\r\n        var portlet = $('#m_portlet_tools_6').mPortlet();\r\n\r\n        //== Toggle event handlers\r\n        portlet.on('beforeCollapse', function(portlet) {\r\n            setTimeout(function() {\r\n                toastr.info('Before collapse event fired!');\r\n            }, 100);\r\n        });\r\n\r\n        portlet.on('afterCollapse', function(portlet) {\r\n            setTimeout(function() {\r\n                toastr.warning('Before collapse event fired!');\r\n            }, 2000);            \r\n        });\r\n\r\n        portlet.on('beforeExpand', function(portlet) {\r\n            setTimeout(function() {\r\n                toastr.info('Before expand event fired!');\r\n            }, 100);  \r\n        });\r\n\r\n        portlet.on('afterExpand', function(portlet) {\r\n            setTimeout(function() {\r\n                toastr.warning('After expand event fired!');\r\n            }, 2000);\r\n        });\r\n\r\n        //== Remove event handlers\r\n        portlet.on('beforeRemove', function(portlet) {\r\n            toastr.info('Before remove event fired!');\r\n\r\n            return confirm('Are you sure to remove this portlet ?');  // remove portlet after user confirmation\r\n        });\r\n\r\n        portlet.on('afterRemove', function(portlet) {\r\n            setTimeout(function() {\r\n                toastr.warning('After remove event fired!');\r\n            }, 2000);            \r\n        });\r\n\r\n        //== Reload event handlers\r\n        portlet.on('reload', function(portlet) {\r\n            toastr.info('Leload event fired!');\r\n\r\n            mApp.block(portlet.getSelf(), {\r\n                type: 'loader',\r\n                state: 'brand',\r\n                message: 'Please wait...'\r\n            });\r\n\r\n            // update the content here\r\n\r\n            setTimeout(function() {\r\n                mApp.unblock(portlet.getSelf());\r\n            }, 2000);\r\n        });\r\n\r\n        //== Reload event handlers\r\n        portlet.on('afterFullscreenOn', function(portlet) {\r\n            toastr.info('After fullscreen on event fired!');\r\n            mApp.initScroller(scrollable, {});\r\n        });\r\n\r\n        portlet.on('afterFullscreenOff', function(portlet) {\r\n            toastr.warning('After fullscreen off event fired!');\r\n        });\r\n    }\r\n\r\n    //== Demo 7\r\n    var demo6 = function() {\r\n        // This portlet is lazy initialized using data-portlet=\"true\" attribute. You can access to the portlet object as shown below and override its behavior\r\n        var portlet = $('#m_portlet_tools_7').mPortlet();\r\n\r\n        //== Toggle event handlers\r\n        portlet.on('beforeCollapse', function(portlet) {\r\n            setTimeout(function() {\r\n                toastr.info('Before collapse event fired!');\r\n            }, 100);\r\n        });\r\n\r\n        portlet.on('afterCollapse', function(portlet) {\r\n            setTimeout(function() {\r\n                toastr.warning('Before collapse event fired!');\r\n            }, 2000);            \r\n        });\r\n\r\n        portlet.on('beforeExpand', function(portlet) {\r\n            setTimeout(function() {\r\n                toastr.info('Before expand event fired!');\r\n            }, 100);  \r\n        });\r\n\r\n        portlet.on('afterExpand', function(portlet) {\r\n            setTimeout(function() {\r\n                toastr.warning('After expand event fired!');\r\n            }, 2000);\r\n        });\r\n\r\n        //== Remove event handlers\r\n        portlet.on('beforeRemove', function(portlet) {\r\n            toastr.info('Before remove event fired!');\r\n\r\n            return confirm('Are you sure to remove this portlet ?');  // remove portlet after user confirmation\r\n        });\r\n\r\n        portlet.on('afterRemove', function(portlet) {\r\n            setTimeout(function() {\r\n                toastr.warning('After remove event fired!');\r\n            }, 2000);            \r\n        });\r\n\r\n        //== Reload event handlers\r\n        portlet.on('reload', function(portlet) {\r\n            toastr.info('Leload event fired!');\r\n\r\n            mApp.block(portlet.getSelf(), {\r\n                type: 'loader',\r\n                state: 'brand',\r\n                message: 'Please wait...'\r\n            });\r\n\r\n            // update the content here\r\n\r\n            setTimeout(function() {\r\n                mApp.unblock(portlet.getSelf());\r\n            }, 2000);\r\n        });\r\n\r\n        //== Reload event handlers\r\n        portlet.on('afterFullscreenOn', function(portlet) {\r\n            toastr.info('After fullscreen on event fired!');\r\n            mApp.initScroller(scrollable, {});\r\n        });\r\n\r\n        portlet.on('afterFullscreenOff', function(portlet) {\r\n            toastr.warning('After fullscreen off event fired!');\r\n        });\r\n    }\r\n\r\n    return {\r\n        //main function to initiate the module\r\n        init: function () {\r\n            initToastr();\r\n\r\n            // init demos\r\n            demo1();\r\n            demo2();\r\n            demo3();\r\n            demo4();\r\n            demo5();\r\n            demo6();\r\n        }\r\n    };\r\n}();\r\n\r\njQuery(document).ready(function() {\r\n    PortletTools.init();\r\n});"],"file":"tools.js"}